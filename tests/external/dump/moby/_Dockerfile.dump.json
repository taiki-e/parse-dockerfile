{
  "parser_directives": {
    "syntax": {
      "start": 2,
      "value": {
        "span": {
          "start": 9,
          "end": 28
        },
        "value": "docker/dockerfile:1"
      }
    },
    "escape": null,
    "check": null
  },
  "instructions": [
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 30,
          "end": 33
        }
      },
      "arguments": {
        "span": {
          "start": 34,
          "end": 51
        },
        "value": "GO_VERSION=1.24.5"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 52,
          "end": 55
        }
      },
      "arguments": {
        "span": {
          "start": 56,
          "end": 85
        },
        "value": "BASE_DEBIAN_DISTRO=\"bookworm\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 86,
          "end": 89
        }
      },
      "arguments": {
        "span": {
          "start": 90,
          "end": 147
        },
        "value": "GOLANG_IMAGE=\"golang:${GO_VERSION}-${BASE_DEBIAN_DISTRO}\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 148,
          "end": 151
        }
      },
      "arguments": {
        "span": {
          "start": 152,
          "end": 168
        },
        "value": "XX_VERSION=1.6.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 282,
          "end": 285
        }
      },
      "arguments": {
        "span": {
          "start": 286,
          "end": 306
        },
        "value": "VPNKIT_VERSION=0.6.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 387,
          "end": 390
        }
      },
      "arguments": {
        "span": {
          "start": 391,
          "end": 416
        },
        "value": "DOCKERCLI_VERSION=v28.3.2"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 417,
          "end": 420
        }
      },
      "arguments": {
        "span": {
          "start": 421,
          "end": 477
        },
        "value": "DOCKERCLI_REPOSITORY=\"https://github.com/docker/cli.git\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 524,
          "end": 527
        }
      },
      "arguments": {
        "span": {
          "start": 528,
          "end": 596
        },
        "value": "DOCKERCLI_INTEGRATION_REPOSITORY=\"https://github.com/docker/cli.git\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 597,
          "end": 600
        }
      },
      "arguments": {
        "span": {
          "start": 601,
          "end": 642
        },
        "value": "DOCKERCLI_INTEGRATION_VERSION=v18.06.3-ce"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 719,
          "end": 722
        }
      },
      "arguments": {
        "span": {
          "start": 723,
          "end": 744
        },
        "value": "BUILDX_VERSION=0.25.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 823,
          "end": 826
        }
      },
      "arguments": {
        "span": {
          "start": 827,
          "end": 850
        },
        "value": "COMPOSE_VERSION=v2.38.2"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 852,
          "end": 855
        }
      },
      "arguments": {
        "span": {
          "start": 856,
          "end": 871
        },
        "value": "SYSTEMD=\"false\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 872,
          "end": 875
        }
      },
      "arguments": {
        "span": {
          "start": 876,
          "end": 893
        },
        "value": "FIREWALLD=\"false\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 894,
          "end": 897
        }
      },
      "arguments": {
        "span": {
          "start": 898,
          "end": 913
        },
        "value": "DOCKER_STATIC=1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1183,
          "end": 1186
        }
      },
      "arguments": {
        "span": {
          "start": 1187,
          "end": 1209
        },
        "value": "REGISTRY_VERSION=3.0.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1679,
          "end": 1682
        }
      },
      "arguments": {
        "span": {
          "start": 1683,
          "end": 1824
        },
        "value": "DELVE_SUPPORTED=${TARGETPLATFORM#linux/amd64} DELVE_SUPPORTED=${DELVE_SUPPORTED#linux/arm64} DELVE_SUPPORTED=${DELVE_SUPPORTED#linux/ppc64le}"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1825,
          "end": 1828
        }
      },
      "arguments": {
        "span": {
          "start": 1829,
          "end": 1878
        },
        "value": "DELVE_SUPPORTED=${DELVE_SUPPORTED:+\"unsupported\"}"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1879,
          "end": 1882
        }
      },
      "arguments": {
        "span": {
          "start": 1883,
          "end": 1930
        },
        "value": "DELVE_SUPPORTED=${DELVE_SUPPORTED:-\"supported\"}"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 1959,
          "end": 1963
        }
      },
      "options": [
        {
          "flag_start": 1964,
          "name": {
            "span": {
              "start": 1966,
              "end": 1974
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 1975,
              "end": 1989
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 1990,
          "end": 2017
        },
        "value": "tonistiigi/xx:${XX_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 2018,
            "end": 2020
          }
        },
        {
          "span": {
            "start": 2021,
            "end": 2023
          },
          "value": "xx"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2120,
          "end": 2124
        }
      },
      "options": [
        {
          "flag_start": 2125,
          "name": {
            "span": {
              "start": 2127,
              "end": 2135
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 2136,
              "end": 2150
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 2151,
          "end": 2158
        },
        "value": "busybox"
      },
      "as_": [
        {
          "span": {
            "start": 2159,
            "end": 2161
          }
        },
        {
          "span": {
            "start": 2162,
            "end": 2173
          },
          "value": "build-dummy"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2174,
          "end": 2177
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2178,
            "end": 2193
          },
          "value": "mkdir -p /build"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2194,
          "end": 2198
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 2199,
          "end": 2206
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 2207,
            "end": 2209
          }
        },
        {
          "span": {
            "start": 2210,
            "end": 2222
          },
          "value": "binary-dummy"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 2223,
          "end": 2227
        }
      },
      "options": [
        {
          "flag_start": 2228,
          "name": {
            "span": {
              "start": 2230,
              "end": 2234
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 2235,
              "end": 2246
            },
            "value": "build-dummy"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 2247,
              "end": 2253
            },
            "value": "/build"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 2254,
          "end": 2260
        },
        "value": "/build"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2269,
          "end": 2273
        }
      },
      "options": [
        {
          "flag_start": 2274,
          "name": {
            "span": {
              "start": 2276,
              "end": 2284
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 2285,
              "end": 2299
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 2300,
          "end": 2315
        },
        "value": "${GOLANG_IMAGE}"
      },
      "as_": [
        {
          "span": {
            "start": 2316,
            "end": 2318
          }
        },
        {
          "span": {
            "start": 2319,
            "end": 2323
          },
          "value": "base"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 2324,
          "end": 2328
        }
      },
      "options": [
        {
          "flag_start": 2329,
          "name": {
            "span": {
              "start": 2331,
              "end": 2335
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 2336,
              "end": 2338
            },
            "value": "xx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 2339,
              "end": 2340
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 2341,
          "end": 2342
        },
        "value": "/"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2537,
          "end": 2540
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2541,
            "end": 2644
          },
          "value": "go telemetry off && [ \"$(go telemetry)\" = \"off\" ] || { echo \"Failed to disable Go telemetry\"; exit 1; }"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2645,
          "end": 2648
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2649,
            "end": 2739
          },
          "value": "echo 'Binary::apt::APT::Keep-Downloaded-Packages \"true\";' > /etc/apt/apt.conf.d/keep-cache"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2740,
          "end": 2743
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2744,
            "end": 2809
          },
          "value": "apt-get update && apt-get install --no-install-recommends -y file"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 2810,
          "end": 2813
        }
      },
      "arguments": {
        "span": {
          "start": 2814,
          "end": 2831
        },
        "value": "GOTOOLCHAIN=local"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2833,
          "end": 2837
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 2838,
          "end": 2842
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 2843,
            "end": 2845
          }
        },
        {
          "span": {
            "start": 2846,
            "end": 2850
          },
          "value": "criu"
        }
      ]
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 2851,
          "end": 2854
        }
      },
      "options": [
        {
          "flag_start": 2855,
          "name": {
            "span": {
              "start": 2857,
              "end": 2862
            },
            "value": "chmod"
          },
          "value": {
            "span": {
              "start": 2863,
              "end": 2867
            },
            "value": "0644"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 2868,
              "end": 2951
            },
            "value": "https://download.opensuse.org/repositories/devel:/tools:/criu/Debian_11/Release.key"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 2952,
          "end": 2987
        },
        "value": "/etc/apt/trusted.gpg.d/criu.gpg.asc"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2988,
          "end": 2991
        }
      },
      "options": [
        {
          "flag_start": 2992,
          "name": {
            "span": {
              "start": 2994,
              "end": 2999
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3000,
              "end": 3065
            },
            "value": "type=cache,sharing=locked,id=moby-criu-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 3072,
          "name": {
            "span": {
              "start": 3074,
              "end": 3079
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3080,
              "end": 3149
            },
            "value": "type=cache,sharing=locked,id=moby-criu-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 3160,
            "end": 3456
          },
          "value": "echo 'deb https://download.opensuse.org/repositories/devel:/tools:/criu/Debian_12/ /' > /etc/apt/sources.list.d/criu.list \\\n        && apt-get update \\\n        && apt-get install -y --no-install-recommends criu \\\n        && install -D /usr/sbin/criu /build/criu \\\n        && /build/criu --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 3469,
          "end": 3473
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 3474,
          "end": 3517
        },
        "value": "distribution/distribution:$REGISTRY_VERSION"
      },
      "as_": [
        {
          "span": {
            "start": 3518,
            "end": 3520
          }
        },
        {
          "span": {
            "start": 3521,
            "end": 3529
          },
          "value": "registry"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3530,
          "end": 3533
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 3534,
            "end": 3582
          },
          "value": "mkdir /build && mv /bin/registry /build/registry"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 3597,
          "end": 3601
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 3602,
          "end": 3606
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 3607,
            "end": 3609
          }
        },
        {
          "span": {
            "start": 3610,
            "end": 3621
          },
          "value": "swagger-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 3622,
          "end": 3629
        }
      },
      "arguments": {
        "span": {
          "start": 3630,
          "end": 3646
        },
        "value": "/usr/src/swagger"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3808,
          "end": 3811
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 3812,
            "end": 3893
          },
          "value": "git init . && git remote add origin \"https://github.com/kolyshkin/go-swagger.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 4067,
          "end": 4070
        }
      },
      "arguments": {
        "span": {
          "start": 4071,
          "end": 4129
        },
        "value": "GO_SWAGGER_COMMIT=c56166c036004ba7a3a321e5951ba472b9ae298c"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 4130,
          "end": 4133
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 4134,
            "end": 4216
          },
          "value": "git fetch -q --depth 1 origin \"${GO_SWAGGER_COMMIT}\" && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 4218,
          "end": 4222
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 4223,
          "end": 4227
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 4228,
            "end": 4230
          }
        },
        {
          "span": {
            "start": 4231,
            "end": 4238
          },
          "value": "swagger"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 4239,
          "end": 4246
        }
      },
      "arguments": {
        "span": {
          "start": 4247,
          "end": 4287
        },
        "value": "/go/src/github.com/go-swagger/go-swagger"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 4288,
          "end": 4291
        }
      },
      "arguments": {
        "span": {
          "start": 4292,
          "end": 4306
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 4307,
          "end": 4310
        }
      },
      "arguments": {
        "span": {
          "start": 4311,
          "end": 4326
        },
        "value": "GO111MODULE=off"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 4327,
          "end": 4330
        }
      },
      "options": [
        {
          "flag_start": 4331,
          "name": {
            "span": {
              "start": 4333,
              "end": 4338
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4339,
              "end": 4379
            },
            "value": "from=swagger-src,src=/usr/src/swagger,rw"
          }
        },
        {
          "flag_start": 4386,
          "name": {
            "span": {
              "start": 4388,
              "end": 4393
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4394,
              "end": 4466
            },
            "value": "type=cache,target=/root/.cache/go-build,id=swagger-build-$TARGETPLATFORM"
          }
        },
        {
          "flag_start": 4473,
          "name": {
            "span": {
              "start": 4475,
              "end": 4480
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4481,
              "end": 4510
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        },
        {
          "flag_start": 4517,
          "name": {
            "span": {
              "start": 4519,
              "end": 4524
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4525,
              "end": 4551
            },
            "value": "type=tmpfs,target=/go/src/"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 4557,
            "end": 4557
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 4558,
            "end": 4640
          },
          "expand": true,
          "value": "  set -e\n  xx-go build -o /build/swagger ./cmd/swagger\n  xx-verify /build/swagger\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 4784,
          "end": 4788
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 4789,
          "end": 4817
        },
        "value": "debian:${BASE_DEBIAN_DISTRO}"
      },
      "as_": [
        {
          "span": {
            "start": 4818,
            "end": 4820
          }
        },
        {
          "span": {
            "start": 4821,
            "end": 4834
          },
          "value": "frozen-images"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 4835,
          "end": 4838
        }
      },
      "options": [
        {
          "flag_start": 4839,
          "name": {
            "span": {
              "start": 4841,
              "end": 4846
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4847,
              "end": 4921
            },
            "value": "type=cache,sharing=locked,id=moby-frozen-images-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 4928,
          "name": {
            "span": {
              "start": 4930,
              "end": 4935
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4936,
              "end": 5014
            },
            "value": "type=cache,sharing=locked,id=moby-frozen-images-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 5024,
            "end": 5147
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n           ca-certificates \\\n           curl \\\n           jq"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 5237,
          "end": 5241
        }
      },
      "options": [],
      "src": [
        {
          "path": {
            "span": {
              "start": 5242,
              "end": 5277
            },
            "value": "contrib/download-frozen-image-v2.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 5278,
          "end": 5279
        },
        "value": "/"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5280,
          "end": 5283
        }
      },
      "arguments": {
        "span": {
          "start": 5284,
          "end": 5294
        },
        "value": "TARGETARCH"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5295,
          "end": 5298
        }
      },
      "arguments": {
        "span": {
          "start": 5299,
          "end": 5312
        },
        "value": "TARGETVARIANT"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5313,
          "end": 5316
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 5317,
            "end": 6058
          },
          "value": "/download-frozen-image-v2.sh /build \\\n        busybox:latest@sha256:95cf004f559831017cdf4628aaf1bb30133677be8702a8c5f2994629f637a209 \\\n        busybox:glibc@sha256:1f81263701cddf6402afe9f33fca0266d9fff379e59b1748f33d3072da71ee85 \\\n        debian:bookworm-slim@sha256:2bc5c236e9b262645a323e9088dfa3bb1ecb16cc75811daf40a23a824d665be9 \\\n        hello-world:latest@sha256:d58e752213a51785838f9eed2b7a498ffa1cb3aa7f946dda11af39286c3db9a9 \\\n        arm32v7/hello-world:latest@sha256:50b8560ad574c779908da71f7ce370c0a2471c098d44d1c8f6b513c5a55eeeb1 \\\n        hello-world:amd64@sha256:90659bf80b44ce6be8234e6ff90a1ac34acbeb826903b02cfa0da11c82cbc042 \\\n        hello-world:arm64@sha256:963612c5503f3f1674f315c67089dee577d8cc6afc18565e0b4183ae355fb343"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6068,
          "end": 6072
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6073,
          "end": 6077
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 6078,
            "end": 6080
          }
        },
        {
          "span": {
            "start": 6081,
            "end": 6090
          },
          "value": "delve-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 6091,
          "end": 6098
        }
      },
      "arguments": {
        "span": {
          "start": 6099,
          "end": 6113
        },
        "value": "/usr/src/delve"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6114,
          "end": 6117
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 6118,
            "end": 6193
          },
          "value": "git init . && git remote add origin \"https://github.com/go-delve/delve.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 6399,
          "end": 6402
        }
      },
      "arguments": {
        "span": {
          "start": 6403,
          "end": 6424
        },
        "value": "DELVE_VERSION=v1.25.0"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6425,
          "end": 6428
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 6429,
            "end": 6532
          },
          "value": "git fetch -q --depth 1 origin \"${DELVE_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6534,
          "end": 6538
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6539,
          "end": 6543
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 6544,
            "end": 6546
          }
        },
        {
          "span": {
            "start": 6547,
            "end": 6562
          },
          "value": "delve-supported"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 6563,
          "end": 6570
        }
      },
      "arguments": {
        "span": {
          "start": 6571,
          "end": 6585
        },
        "value": "/usr/src/delve"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 6586,
          "end": 6589
        }
      },
      "arguments": {
        "span": {
          "start": 6590,
          "end": 6604
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6605,
          "end": 6608
        }
      },
      "options": [
        {
          "flag_start": 6609,
          "name": {
            "span": {
              "start": 6611,
              "end": 6616
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6617,
              "end": 6653
            },
            "value": "from=delve-src,src=/usr/src/delve,rw"
          }
        },
        {
          "flag_start": 6660,
          "name": {
            "span": {
              "start": 6662,
              "end": 6667
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6668,
              "end": 6738
            },
            "value": "type=cache,target=/root/.cache/go-build,id=delve-build-$TARGETPLATFORM"
          }
        },
        {
          "flag_start": 6745,
          "name": {
            "span": {
              "start": 6747,
              "end": 6752
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6753,
              "end": 6782
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 6788,
            "end": 6788
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 6789,
            "end": 6859
          },
          "expand": true,
          "value": "  set -e\n  xx-go build -o /build/dlv ./cmd/dlv\n  xx-verify /build/dlv\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6864,
          "end": 6868
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6869,
          "end": 6881
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 6882,
            "end": 6884
          }
        },
        {
          "span": {
            "start": 6885,
            "end": 6902
          },
          "value": "delve-unsupported"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6903,
          "end": 6907
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6908,
          "end": 6932
        },
        "value": "delve-${DELVE_SUPPORTED}"
      },
      "as_": [
        {
          "span": {
            "start": 6933,
            "end": 6935
          }
        },
        {
          "span": {
            "start": 6936,
            "end": 6941
          },
          "value": "delve"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6943,
          "end": 6947
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6948,
          "end": 6952
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 6953,
            "end": 6955
          }
        },
        {
          "span": {
            "start": 6956,
            "end": 6964
          },
          "value": "gowinres"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7015,
          "end": 7018
        }
      },
      "arguments": {
        "span": {
          "start": 7019,
          "end": 7042
        },
        "value": "GOWINRES_VERSION=v0.3.1"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7043,
          "end": 7046
        }
      },
      "options": [
        {
          "flag_start": 7047,
          "name": {
            "span": {
              "start": 7049,
              "end": 7054
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7055,
              "end": 7094
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 7101,
          "name": {
            "span": {
              "start": 7103,
              "end": 7108
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7109,
              "end": 7138
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 7149,
            "end": 7257
          },
          "value": "GOBIN=/build/ go install \"github.com/tc-hib/go-winres@${GOWINRES_VERSION}\" \\\n     && /build/go-winres --help"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7272,
          "end": 7276
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7277,
          "end": 7281
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 7282,
            "end": 7284
          }
        },
        {
          "span": {
            "start": 7285,
            "end": 7299
          },
          "value": "containerd-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 7300,
          "end": 7307
        }
      },
      "arguments": {
        "span": {
          "start": 7308,
          "end": 7327
        },
        "value": "/usr/src/containerd"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7328,
          "end": 7331
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 7332,
            "end": 7414
          },
          "value": "git init . && git remote add origin \"https://github.com/containerd/containerd.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7924,
          "end": 7927
        }
      },
      "arguments": {
        "span": {
          "start": 7928,
          "end": 7954
        },
        "value": "CONTAINERD_VERSION=v1.7.27"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7955,
          "end": 7958
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 7959,
            "end": 8067
          },
          "value": "git fetch -q --depth 1 origin \"${CONTAINERD_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8069,
          "end": 8073
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8074,
          "end": 8078
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 8079,
            "end": 8081
          }
        },
        {
          "span": {
            "start": 8082,
            "end": 8098
          },
          "value": "containerd-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 8099,
          "end": 8106
        }
      },
      "arguments": {
        "span": {
          "start": 8107,
          "end": 8147
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 8148,
          "end": 8151
        }
      },
      "arguments": {
        "span": {
          "start": 8152,
          "end": 8166
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8167,
          "end": 8170
        }
      },
      "options": [
        {
          "flag_start": 8171,
          "name": {
            "span": {
              "start": 8173,
              "end": 8178
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 8179,
              "end": 8250
            },
            "value": "type=cache,sharing=locked,id=moby-containerd-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 8257,
          "name": {
            "span": {
              "start": 8259,
              "end": 8264
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 8265,
              "end": 8340
            },
            "value": "type=cache,sharing=locked,id=moby-containerd-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 8351,
            "end": 8457
          },
          "value": "apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 8458,
          "end": 8461
        }
      },
      "arguments": {
        "span": {
          "start": 8462,
          "end": 8475
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8476,
          "end": 8479
        }
      },
      "options": [
        {
          "flag_start": 8480,
          "name": {
            "span": {
              "start": 8482,
              "end": 8487
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 8488,
              "end": 8534
            },
            "value": "from=containerd-src,src=/usr/src/containerd,rw"
          }
        },
        {
          "flag_start": 8541,
          "name": {
            "span": {
              "start": 8543,
              "end": 8548
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 8549,
              "end": 8624
            },
            "value": "type=cache,target=/root/.cache/go-build,id=containerd-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 8630,
            "end": 8630
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 8631,
            "end": 9134
          },
          "expand": true,
          "value": "  set -e\n  export CC=$(xx-info)-gcc\n  export CGO_ENABLED=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"0\" || echo \"1\")\n  xx-go --wrap\n  make $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"STATIC=1\") binaries\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/containerd\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/containerd-shim-runc-v2\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/ctr\n  mkdir /build\n  mv bin/containerd bin/containerd-shim-runc-v2 bin/ctr /build\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9139,
          "end": 9143
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9144,
          "end": 9160
        },
        "value": "containerd-build"
      },
      "as_": [
        {
          "span": {
            "start": 9161,
            "end": 9163
          }
        },
        {
          "span": {
            "start": 9164,
            "end": 9180
          },
          "value": "containerd-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9181,
          "end": 9185
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9186,
          "end": 9198
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 9199,
            "end": 9201
          }
        },
        {
          "span": {
            "start": 9202,
            "end": 9220
          },
          "value": "containerd-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9221,
          "end": 9225
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9226,
          "end": 9248
        },
        "value": "containerd-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 9249,
            "end": 9251
          }
        },
        {
          "span": {
            "start": 9252,
            "end": 9262
          },
          "value": "containerd"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9264,
          "end": 9268
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9269,
          "end": 9273
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 9274,
            "end": 9276
          }
        },
        {
          "span": {
            "start": 9277,
            "end": 9290
          },
          "value": "golangci_lint"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9291,
          "end": 9294
        }
      },
      "arguments": {
        "span": {
          "start": 9295,
          "end": 9323
        },
        "value": "GOLANGCI_LINT_VERSION=v2.1.5"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9324,
          "end": 9327
        }
      },
      "options": [
        {
          "flag_start": 9328,
          "name": {
            "span": {
              "start": 9330,
              "end": 9335
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9336,
              "end": 9375
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 9382,
          "name": {
            "span": {
              "start": 9384,
              "end": 9389
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9390,
              "end": 9419
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 9430,
            "end": 9577
          },
          "value": "GOBIN=/build/ go install \"github.com/golangci/golangci-lint/v2/cmd/golangci-lint@${GOLANGCI_LINT_VERSION}\" \\\n     && /build/golangci-lint --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9579,
          "end": 9583
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9584,
          "end": 9588
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 9589,
            "end": 9591
          }
        },
        {
          "span": {
            "start": 9592,
            "end": 9601
          },
          "value": "gotestsum"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9675,
          "end": 9678
        }
      },
      "arguments": {
        "span": {
          "start": 9679,
          "end": 9704
        },
        "value": "GOTESTSUM_VERSION=v1.12.3"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9705,
          "end": 9708
        }
      },
      "options": [
        {
          "flag_start": 9709,
          "name": {
            "span": {
              "start": 9711,
              "end": 9716
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9717,
              "end": 9756
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 9763,
          "name": {
            "span": {
              "start": 9765,
              "end": 9770
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9771,
              "end": 9800
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 9811,
            "end": 9918
          },
          "value": "GOBIN=/build/ go install \"gotest.tools/gotestsum@${GOTESTSUM_VERSION}\" \\\n     && /build/gotestsum --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9920,
          "end": 9924
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9925,
          "end": 9929
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 9930,
            "end": 9932
          }
        },
        {
          "span": {
            "start": 9933,
            "end": 9938
          },
          "value": "shfmt"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9939,
          "end": 9942
        }
      },
      "arguments": {
        "span": {
          "start": 9943,
          "end": 9963
        },
        "value": "SHFMT_VERSION=v3.8.0"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9964,
          "end": 9967
        }
      },
      "options": [
        {
          "flag_start": 9968,
          "name": {
            "span": {
              "start": 9970,
              "end": 9975
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9976,
              "end": 10015
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 10022,
          "name": {
            "span": {
              "start": 10024,
              "end": 10029
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10030,
              "end": 10059
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 10070,
            "end": 10171
          },
          "value": "GOBIN=/build/ go install \"mvdan.cc/sh/v3/cmd/shfmt@${SHFMT_VERSION}\" \\\n     && /build/shfmt --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10173,
          "end": 10177
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10178,
          "end": 10182
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 10183,
            "end": 10185
          }
        },
        {
          "span": {
            "start": 10186,
            "end": 10191
          },
          "value": "gopls"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10192,
          "end": 10195
        }
      },
      "options": [
        {
          "flag_start": 10196,
          "name": {
            "span": {
              "start": 10198,
              "end": 10203
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10204,
              "end": 10243
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 10250,
          "name": {
            "span": {
              "start": 10252,
              "end": 10257
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10258,
              "end": 10287
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 10298,
            "end": 10387
          },
          "value": "GOBIN=/build/ go install \"golang.org/x/tools/gopls@latest\" \\\n     && /build/gopls version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10389,
          "end": 10393
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10394,
          "end": 10398
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 10399,
            "end": 10401
          }
        },
        {
          "span": {
            "start": 10402,
            "end": 10411
          },
          "value": "dockercli"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 10412,
          "end": 10419
        }
      },
      "arguments": {
        "span": {
          "start": 10420,
          "end": 10449
        },
        "value": "/go/src/github.com/docker/cli"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10450,
          "end": 10453
        }
      },
      "arguments": {
        "span": {
          "start": 10454,
          "end": 10474
        },
        "value": "DOCKERCLI_REPOSITORY"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10475,
          "end": 10478
        }
      },
      "arguments": {
        "span": {
          "start": 10479,
          "end": 10496
        },
        "value": "DOCKERCLI_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10497,
          "end": 10500
        }
      },
      "arguments": {
        "span": {
          "start": 10501,
          "end": 10515
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10516,
          "end": 10519
        }
      },
      "options": [
        {
          "flag_start": 10520,
          "name": {
            "span": {
              "start": 10522,
              "end": 10527
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10528,
              "end": 10590
            },
            "value": "source=hack/dockerfile/cli.sh,target=/download-or-build-cli.sh"
          }
        },
        {
          "flag_start": 10597,
          "name": {
            "span": {
              "start": 10599,
              "end": 10604
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10605,
              "end": 10677
            },
            "value": "type=cache,id=dockercli-git-$TARGETPLATFORM,sharing=locked,target=./.git"
          }
        },
        {
          "flag_start": 10684,
          "name": {
            "span": {
              "start": 10686,
              "end": 10691
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10692,
              "end": 10766
            },
            "value": "type=cache,target=/root/.cache/go-build,id=dockercli-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 10777,
            "end": 10976
          },
          "value": "rm -f ./.git/*.lock \\\n     && /download-or-build-cli.sh ${DOCKERCLI_VERSION} ${DOCKERCLI_REPOSITORY} /build \\\n     && /build/docker --version \\\n     && /build/docker completion bash >/completion.bash"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10978,
          "end": 10982
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10983,
          "end": 10987
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 10988,
            "end": 10990
          }
        },
        {
          "span": {
            "start": 10991,
            "end": 11012
          },
          "value": "dockercli-integration"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 11013,
          "end": 11020
        }
      },
      "arguments": {
        "span": {
          "start": 11021,
          "end": 11050
        },
        "value": "/go/src/github.com/docker/cli"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11051,
          "end": 11054
        }
      },
      "arguments": {
        "span": {
          "start": 11055,
          "end": 11087
        },
        "value": "DOCKERCLI_INTEGRATION_REPOSITORY"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11088,
          "end": 11091
        }
      },
      "arguments": {
        "span": {
          "start": 11092,
          "end": 11121
        },
        "value": "DOCKERCLI_INTEGRATION_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11122,
          "end": 11125
        }
      },
      "arguments": {
        "span": {
          "start": 11126,
          "end": 11140
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11141,
          "end": 11144
        }
      },
      "options": [
        {
          "flag_start": 11145,
          "name": {
            "span": {
              "start": 11147,
              "end": 11152
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11153,
              "end": 11215
            },
            "value": "source=hack/dockerfile/cli.sh,target=/download-or-build-cli.sh"
          }
        },
        {
          "flag_start": 11222,
          "name": {
            "span": {
              "start": 11224,
              "end": 11229
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11230,
              "end": 11302
            },
            "value": "type=cache,id=dockercli-git-$TARGETPLATFORM,sharing=locked,target=./.git"
          }
        },
        {
          "flag_start": 11309,
          "name": {
            "span": {
              "start": 11311,
              "end": 11316
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11317,
              "end": 11391
            },
            "value": "type=cache,target=/root/.cache/go-build,id=dockercli-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 11402,
            "end": 11567
          },
          "value": "rm -f ./.git/*.lock \\\n     && /download-or-build-cli.sh ${DOCKERCLI_INTEGRATION_VERSION} ${DOCKERCLI_INTEGRATION_REPOSITORY} /build \\\n     && /build/docker --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 11576,
          "end": 11580
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 11581,
          "end": 11585
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 11586,
            "end": 11588
          }
        },
        {
          "span": {
            "start": 11589,
            "end": 11597
          },
          "value": "runc-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 11598,
          "end": 11605
        }
      },
      "arguments": {
        "span": {
          "start": 11606,
          "end": 11619
        },
        "value": "/usr/src/runc"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11620,
          "end": 11623
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 11624,
            "end": 11704
          },
          "value": "git init . && git remote add origin \"https://github.com/opencontainers/runc.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 12001,
          "end": 12004
        }
      },
      "arguments": {
        "span": {
          "start": 12005,
          "end": 12024
        },
        "value": "RUNC_VERSION=v1.2.6"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12025,
          "end": 12028
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 12029,
            "end": 12131
          },
          "value": "git fetch -q --depth 1 origin \"${RUNC_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12133,
          "end": 12137
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12138,
          "end": 12142
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 12143,
            "end": 12145
          }
        },
        {
          "span": {
            "start": 12146,
            "end": 12156
          },
          "value": "runc-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 12157,
          "end": 12164
        }
      },
      "arguments": {
        "span": {
          "start": 12165,
          "end": 12203
        },
        "value": "/go/src/github.com/opencontainers/runc"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 12204,
          "end": 12207
        }
      },
      "arguments": {
        "span": {
          "start": 12208,
          "end": 12222
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12223,
          "end": 12226
        }
      },
      "options": [
        {
          "flag_start": 12227,
          "name": {
            "span": {
              "start": 12229,
              "end": 12234
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12235,
              "end": 12300
            },
            "value": "type=cache,sharing=locked,id=moby-runc-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 12307,
          "name": {
            "span": {
              "start": 12309,
              "end": 12314
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12315,
              "end": 12384
            },
            "value": "type=cache,sharing=locked,id=moby-runc-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 12395,
            "end": 12554
          },
          "value": "apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            libseccomp-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 12555,
          "end": 12558
        }
      },
      "arguments": {
        "span": {
          "start": 12559,
          "end": 12572
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12573,
          "end": 12576
        }
      },
      "options": [
        {
          "flag_start": 12577,
          "name": {
            "span": {
              "start": 12579,
              "end": 12584
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12585,
              "end": 12619
            },
            "value": "from=runc-src,src=/usr/src/runc,rw"
          }
        },
        {
          "flag_start": 12626,
          "name": {
            "span": {
              "start": 12628,
              "end": 12633
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12634,
              "end": 12703
            },
            "value": "type=cache,target=/root/.cache/go-build,id=runc-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 12709,
            "end": 12709
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 12710,
            "end": 12918
          },
          "expand": true,
          "value": "  set -e\n  xx-go --wrap\n  CGO_ENABLED=1 make \"$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"static\" || echo \"runc\")\"\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") runc\n  mkdir /build\n  mv runc /build/\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12923,
          "end": 12927
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12928,
          "end": 12938
        },
        "value": "runc-build"
      },
      "as_": [
        {
          "span": {
            "start": 12939,
            "end": 12941
          }
        },
        {
          "span": {
            "start": 12942,
            "end": 12952
          },
          "value": "runc-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12953,
          "end": 12957
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12958,
          "end": 12970
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 12971,
            "end": 12973
          }
        },
        {
          "span": {
            "start": 12974,
            "end": 12986
          },
          "value": "runc-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12987,
          "end": 12991
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12992,
          "end": 13008
        },
        "value": "runc-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 13009,
            "end": 13011
          }
        },
        {
          "span": {
            "start": 13012,
            "end": 13016
          },
          "value": "runc"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13025,
          "end": 13029
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13030,
          "end": 13034
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 13035,
            "end": 13037
          }
        },
        {
          "span": {
            "start": 13038,
            "end": 13046
          },
          "value": "tini-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 13047,
          "end": 13054
        }
      },
      "arguments": {
        "span": {
          "start": 13055,
          "end": 13068
        },
        "value": "/usr/src/tini"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13069,
          "end": 13072
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 13073,
            "end": 13146
          },
          "value": "git init . && git remote add origin \"https://github.com/krallin/tini.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 13289,
          "end": 13292
        }
      },
      "arguments": {
        "span": {
          "start": 13293,
          "end": 13313
        },
        "value": "TINI_VERSION=v0.19.0"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13314,
          "end": 13317
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 13318,
            "end": 13420
          },
          "value": "git fetch -q --depth 1 origin \"${TINI_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13422,
          "end": 13426
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13427,
          "end": 13431
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 13432,
            "end": 13434
          }
        },
        {
          "span": {
            "start": 13435,
            "end": 13445
          },
          "value": "tini-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 13446,
          "end": 13453
        }
      },
      "arguments": {
        "span": {
          "start": 13454,
          "end": 13485
        },
        "value": "/go/src/github.com/krallin/tini"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13486,
          "end": 13489
        }
      },
      "options": [
        {
          "flag_start": 13490,
          "name": {
            "span": {
              "start": 13492,
              "end": 13497
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13498,
              "end": 13563
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 13570,
          "name": {
            "span": {
              "start": 13572,
              "end": 13577
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13578,
              "end": 13647
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 13658,
            "end": 13724
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends cmake"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 13725,
          "end": 13728
        }
      },
      "arguments": {
        "span": {
          "start": 13729,
          "end": 13743
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13744,
          "end": 13747
        }
      },
      "options": [
        {
          "flag_start": 13748,
          "name": {
            "span": {
              "start": 13750,
              "end": 13755
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13756,
              "end": 13821
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 13828,
          "name": {
            "span": {
              "start": 13830,
              "end": 13835
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13836,
              "end": 13905
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 13916,
            "end": 14028
          },
          "value": "xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14029,
          "end": 14032
        }
      },
      "options": [
        {
          "flag_start": 14033,
          "name": {
            "span": {
              "start": 14035,
              "end": 14040
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14041,
              "end": 14075
            },
            "value": "from=tini-src,src=/usr/src/tini,rw"
          }
        },
        {
          "flag_start": 14082,
          "name": {
            "span": {
              "start": 14084,
              "end": 14089
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14090,
              "end": 14159
            },
            "value": "type=cache,target=/root/.cache/go-build,id=tini-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 14165,
            "end": 14165
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 14166,
            "end": 14306
          },
          "expand": true,
          "value": "  set -e\n  CC=$(xx-info)-gcc cmake .\n  make tini-static\n  xx-verify --static tini-static\n  mkdir /build\n  mv tini-static /build/docker-init\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14311,
          "end": 14315
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14316,
          "end": 14326
        },
        "value": "tini-build"
      },
      "as_": [
        {
          "span": {
            "start": 14327,
            "end": 14329
          }
        },
        {
          "span": {
            "start": 14330,
            "end": 14340
          },
          "value": "tini-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14341,
          "end": 14345
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14346,
          "end": 14358
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 14359,
            "end": 14361
          }
        },
        {
          "span": {
            "start": 14362,
            "end": 14374
          },
          "value": "tini-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14375,
          "end": 14379
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14380,
          "end": 14396
        },
        "value": "tini-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 14397,
            "end": 14399
          }
        },
        {
          "span": {
            "start": 14400,
            "end": 14404
          },
          "value": "tini"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14420,
          "end": 14424
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14425,
          "end": 14429
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 14430,
            "end": 14432
          }
        },
        {
          "span": {
            "start": 14433,
            "end": 14448
          },
          "value": "rootlesskit-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 14449,
          "end": 14456
        }
      },
      "arguments": {
        "span": {
          "start": 14457,
          "end": 14477
        },
        "value": "/usr/src/rootlesskit"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14478,
          "end": 14481
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 14482,
            "end": 14574
          },
          "value": "git init . && git remote add origin \"https://github.com/rootless-containers/rootlesskit.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 14678,
          "end": 14681
        }
      },
      "arguments": {
        "span": {
          "start": 14682,
          "end": 14708
        },
        "value": "ROOTLESSKIT_VERSION=v2.3.4"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14709,
          "end": 14712
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 14713,
            "end": 14822
          },
          "value": "git fetch -q --depth 1 origin \"${ROOTLESSKIT_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14824,
          "end": 14828
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14829,
          "end": 14833
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 14834,
            "end": 14836
          }
        },
        {
          "span": {
            "start": 14837,
            "end": 14854
          },
          "value": "rootlesskit-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 14855,
          "end": 14862
        }
      },
      "arguments": {
        "span": {
          "start": 14863,
          "end": 14913
        },
        "value": "/go/src/github.com/rootless-containers/rootlesskit"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 14914,
          "end": 14917
        }
      },
      "arguments": {
        "span": {
          "start": 14918,
          "end": 14932
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14933,
          "end": 14936
        }
      },
      "options": [
        {
          "flag_start": 14937,
          "name": {
            "span": {
              "start": 14939,
              "end": 14944
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14945,
              "end": 15017
            },
            "value": "type=cache,sharing=locked,id=moby-rootlesskit-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 15024,
          "name": {
            "span": {
              "start": 15026,
              "end": 15031
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 15032,
              "end": 15108
            },
            "value": "type=cache,sharing=locked,id=moby-rootlesskit-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 15119,
            "end": 15249
          },
          "value": "apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 15250,
          "end": 15253
        }
      },
      "arguments": {
        "span": {
          "start": 15254,
          "end": 15267
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15268,
          "end": 15271
        }
      },
      "options": [
        {
          "flag_start": 15272,
          "name": {
            "span": {
              "start": 15274,
              "end": 15279
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 15280,
              "end": 15328
            },
            "value": "from=rootlesskit-src,src=/usr/src/rootlesskit,rw"
          }
        },
        {
          "flag_start": 15335,
          "name": {
            "span": {
              "start": 15337,
              "end": 15342
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 15343,
              "end": 15372
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        },
        {
          "flag_start": 15379,
          "name": {
            "span": {
              "start": 15381,
              "end": 15386
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 15387,
              "end": 15463
            },
            "value": "type=cache,target=/root/.cache/go-build,id=rootlesskit-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 15469,
            "end": 15469
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 15470,
            "end": 15759
          },
          "expand": true,
          "value": "  set -e\n  export CGO_ENABLED=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"0\" || echo \"1\")\n  xx-go build -o /build/rootlesskit -ldflags=\"$([ \"$DOCKER_STATIC\" != \"1\" ] && echo \"-linkmode=external\")\" ./cmd/rootlesskit\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /build/rootlesskit\n"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 15763,
          "end": 15767
        }
      },
      "options": [
        {
          "flag_start": 15768,
          "name": {
            "span": {
              "start": 15770,
              "end": 15774
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 15775,
              "end": 15804
            },
            "value": "./contrib/dockerd-rootless.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 15805,
          "end": 15812
        },
        "value": "/build/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 15813,
          "end": 15817
        }
      },
      "options": [
        {
          "flag_start": 15818,
          "name": {
            "span": {
              "start": 15820,
              "end": 15824
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 15825,
              "end": 15864
            },
            "value": "./contrib/dockerd-rootless-setuptool.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 15865,
          "end": 15872
        },
        "value": "/build/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 15874,
          "end": 15878
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 15879,
          "end": 15896
        },
        "value": "rootlesskit-build"
      },
      "as_": [
        {
          "span": {
            "start": 15897,
            "end": 15899
          }
        },
        {
          "span": {
            "start": 15900,
            "end": 15917
          },
          "value": "rootlesskit-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 15918,
          "end": 15922
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 15923,
          "end": 15935
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 15936,
            "end": 15938
          }
        },
        {
          "span": {
            "start": 15939,
            "end": 15958
          },
          "value": "rootlesskit-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 15959,
          "end": 15963
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 15964,
          "end": 15987
        },
        "value": "rootlesskit-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 15988,
            "end": 15990
          }
        },
        {
          "span": {
            "start": 15991,
            "end": 16002
          },
          "value": "rootlesskit"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16004,
          "end": 16008
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16009,
          "end": 16013
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 16014,
            "end": 16016
          }
        },
        {
          "span": {
            "start": 16017,
            "end": 16021
          },
          "value": "crun"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 16093,
          "end": 16096
        }
      },
      "arguments": {
        "span": {
          "start": 16097,
          "end": 16114
        },
        "value": "CRUN_VERSION=1.21"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 16115,
          "end": 16118
        }
      },
      "options": [
        {
          "flag_start": 16119,
          "name": {
            "span": {
              "start": 16121,
              "end": 16126
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 16127,
              "end": 16192
            },
            "value": "type=cache,sharing=locked,id=moby-crun-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 16199,
          "name": {
            "span": {
              "start": 16201,
              "end": 16206
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 16207,
              "end": 16276
            },
            "value": "type=cache,sharing=locked,id=moby-crun-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 16287,
            "end": 16624
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            autoconf \\\n            automake \\\n            build-essential \\\n            libcap-dev \\\n            libprotobuf-c-dev \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            libtool \\\n            libyajl-dev \\\n            python3 \\\n            ;"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 16625,
          "end": 16628
        }
      },
      "options": [
        {
          "flag_start": 16629,
          "name": {
            "span": {
              "start": 16631,
              "end": 16636
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 16637,
              "end": 16670
            },
            "value": "type=tmpfs,target=/tmp/crun-build"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 16677,
            "end": 16896
          },
          "value": "git clone https://github.com/containers/crun.git /tmp/crun-build && \\\n    cd /tmp/crun-build && \\\n    git checkout -q \"${CRUN_VERSION}\" && \\\n    ./autogen.sh && \\\n    ./configure --bindir=/build && \\\n    make -j install"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16982,
          "end": 16986
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16987,
          "end": 16994
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 16995,
            "end": 16997
          }
        },
        {
          "span": {
            "start": 16998,
            "end": 17012
          },
          "value": "vpnkit-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17013,
          "end": 17017
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17018,
          "end": 17025
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 17026,
            "end": 17028
          }
        },
        {
          "span": {
            "start": 17029,
            "end": 17045
          },
          "value": "vpnkit-linux-386"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17046,
          "end": 17050
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17051,
          "end": 17058
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 17059,
            "end": 17061
          }
        },
        {
          "span": {
            "start": 17062,
            "end": 17078
          },
          "value": "vpnkit-linux-arm"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17079,
          "end": 17083
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17084,
          "end": 17091
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 17092,
            "end": 17094
          }
        },
        {
          "span": {
            "start": 17095,
            "end": 17115
          },
          "value": "vpnkit-linux-ppc64le"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17116,
          "end": 17120
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17121,
          "end": 17128
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 17129,
            "end": 17131
          }
        },
        {
          "span": {
            "start": 17132,
            "end": 17152
          },
          "value": "vpnkit-linux-riscv64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17153,
          "end": 17157
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17158,
          "end": 17165
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 17166,
            "end": 17168
          }
        },
        {
          "span": {
            "start": 17169,
            "end": 17187
          },
          "value": "vpnkit-linux-s390x"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17188,
          "end": 17192
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17193,
          "end": 17226
        },
        "value": "moby/vpnkit-bin:${VPNKIT_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 17227,
            "end": 17229
          }
        },
        {
          "span": {
            "start": 17230,
            "end": 17248
          },
          "value": "vpnkit-linux-amd64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17249,
          "end": 17253
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17254,
          "end": 17287
        },
        "value": "moby/vpnkit-bin:${VPNKIT_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 17288,
            "end": 17290
          }
        },
        {
          "span": {
            "start": 17291,
            "end": 17309
          },
          "value": "vpnkit-linux-arm64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17310,
          "end": 17314
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17315,
          "end": 17341
        },
        "value": "vpnkit-linux-${TARGETARCH}"
      },
      "as_": [
        {
          "span": {
            "start": 17342,
            "end": 17344
          }
        },
        {
          "span": {
            "start": 17345,
            "end": 17357
          },
          "value": "vpnkit-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17358,
          "end": 17362
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17363,
          "end": 17381
        },
        "value": "vpnkit-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 17382,
            "end": 17384
          }
        },
        {
          "span": {
            "start": 17385,
            "end": 17391
          },
          "value": "vpnkit"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17412,
          "end": 17416
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17417,
          "end": 17421
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 17422,
            "end": 17424
          }
        },
        {
          "span": {
            "start": 17425,
            "end": 17442
          },
          "value": "containerutil-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 17443,
          "end": 17450
        }
      },
      "arguments": {
        "span": {
          "start": 17451,
          "end": 17473
        },
        "value": "/usr/src/containerutil"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17474,
          "end": 17477
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17478,
            "end": 17579
          },
          "value": "git init . && git remote add origin \"https://github.com/docker-archive/windows-container-utility.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 17580,
          "end": 17583
        }
      },
      "arguments": {
        "span": {
          "start": 17584,
          "end": 17649
        },
        "value": "CONTAINERUTILITY_VERSION=aa1ba87e99b68e0113bd27ec26c60b88f9d4ccd9"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17650,
          "end": 17653
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17654,
            "end": 17768
          },
          "value": "git fetch -q --depth 1 origin \"${CONTAINERUTILITY_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17770,
          "end": 17774
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17775,
          "end": 17779
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 17780,
            "end": 17782
          }
        },
        {
          "span": {
            "start": 17783,
            "end": 17802
          },
          "value": "containerutil-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 17803,
          "end": 17810
        }
      },
      "arguments": {
        "span": {
          "start": 17811,
          "end": 17833
        },
        "value": "/usr/src/containerutil"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 17834,
          "end": 17837
        }
      },
      "arguments": {
        "span": {
          "start": 17838,
          "end": 17852
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17853,
          "end": 17856
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17857,
            "end": 17971
          },
          "value": "xx-apt-get install -y --no-install-recommends \\\n        gcc \\\n        g++ \\\n        libc6-dev \\\n        pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17972,
          "end": 17975
        }
      },
      "options": [
        {
          "flag_start": 17976,
          "name": {
            "span": {
              "start": 17978,
              "end": 17983
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 17984,
              "end": 18036
            },
            "value": "from=containerutil-src,src=/usr/src/containerutil,rw"
          }
        },
        {
          "flag_start": 18043,
          "name": {
            "span": {
              "start": 18045,
              "end": 18050
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 18051,
              "end": 18129
            },
            "value": "type=cache,target=/root/.cache/go-build,id=containerutil-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 18135,
            "end": 18135
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 18136,
            "end": 18284
          },
          "expand": true,
          "value": "  set -e\n  CC=\"$(xx-info)-gcc\" CXX=\"$(xx-info)-g++\" make\n  xx-verify --static containerutility.exe\n  mkdir /build\n  mv containerutility.exe /build/\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18289,
          "end": 18293
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18294,
          "end": 18306
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 18307,
            "end": 18309
          }
        },
        {
          "span": {
            "start": 18310,
            "end": 18329
          },
          "value": "containerutil-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18330,
          "end": 18334
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18335,
          "end": 18354
        },
        "value": "containerutil-build"
      },
      "as_": [
        {
          "span": {
            "start": 18355,
            "end": 18357
          }
        },
        {
          "span": {
            "start": 18358,
            "end": 18385
          },
          "value": "containerutil-windows-amd64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18386,
          "end": 18390
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18391,
          "end": 18426
        },
        "value": "containerutil-windows-${TARGETARCH}"
      },
      "as_": [
        {
          "span": {
            "start": 18427,
            "end": 18429
          }
        },
        {
          "span": {
            "start": 18430,
            "end": 18451
          },
          "value": "containerutil-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18452,
          "end": 18456
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18457,
          "end": 18482
        },
        "value": "containerutil-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 18483,
            "end": 18485
          }
        },
        {
          "span": {
            "start": 18486,
            "end": 18499
          },
          "value": "containerutil"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18500,
          "end": 18504
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18505,
          "end": 18540
        },
        "value": "docker/buildx-bin:${BUILDX_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 18541,
            "end": 18543
          }
        },
        {
          "span": {
            "start": 18544,
            "end": 18550
          },
          "value": "buildx"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18551,
          "end": 18555
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18556,
          "end": 18593
        },
        "value": "docker/compose-bin:${COMPOSE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 18594,
            "end": 18596
          }
        },
        {
          "span": {
            "start": 18597,
            "end": 18604
          },
          "value": "compose"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18606,
          "end": 18610
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18611,
          "end": 18615
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 18616,
            "end": 18618
          }
        },
        {
          "span": {
            "start": 18619,
            "end": 18636
          },
          "value": "dev-systemd-false"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18637,
          "end": 18641
        }
      },
      "options": [
        {
          "flag_start": 18642,
          "name": {
            "span": {
              "start": 18644,
              "end": 18648
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18649,
          "name": {
            "span": {
              "start": 18651,
              "end": 18655
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18656,
              "end": 18669
            },
            "value": "frozen-images"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18670,
              "end": 18677
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18678,
          "end": 18699
        },
        "value": "/docker-frozen-images"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18700,
          "end": 18704
        }
      },
      "options": [
        {
          "flag_start": 18705,
          "name": {
            "span": {
              "start": 18707,
              "end": 18711
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18712,
          "name": {
            "span": {
              "start": 18714,
              "end": 18718
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18719,
              "end": 18726
            },
            "value": "swagger"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18733,
              "end": 18740
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18741,
          "end": 18756
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18757,
          "end": 18761
        }
      },
      "options": [
        {
          "flag_start": 18762,
          "name": {
            "span": {
              "start": 18764,
              "end": 18768
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18769,
          "name": {
            "span": {
              "start": 18771,
              "end": 18775
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18776,
              "end": 18781
            },
            "value": "delve"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18790,
              "end": 18797
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18798,
          "end": 18813
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18814,
          "end": 18818
        }
      },
      "options": [
        {
          "flag_start": 18819,
          "name": {
            "span": {
              "start": 18821,
              "end": 18825
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18826,
          "name": {
            "span": {
              "start": 18828,
              "end": 18832
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18833,
              "end": 18841
            },
            "value": "gowinres"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18847,
              "end": 18854
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18855,
          "end": 18870
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18871,
          "end": 18875
        }
      },
      "options": [
        {
          "flag_start": 18876,
          "name": {
            "span": {
              "start": 18878,
              "end": 18882
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18883,
          "name": {
            "span": {
              "start": 18885,
              "end": 18889
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18890,
              "end": 18894
            },
            "value": "tini"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18904,
              "end": 18911
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18912,
          "end": 18927
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18928,
          "end": 18932
        }
      },
      "options": [
        {
          "flag_start": 18933,
          "name": {
            "span": {
              "start": 18935,
              "end": 18939
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18940,
          "name": {
            "span": {
              "start": 18942,
              "end": 18946
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18947,
              "end": 18955
            },
            "value": "registry"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18961,
              "end": 18968
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18969,
          "end": 18984
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19324,
          "end": 19328
        }
      },
      "options": [
        {
          "flag_start": 19329,
          "name": {
            "span": {
              "start": 19331,
              "end": 19335
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19336,
          "name": {
            "span": {
              "start": 19338,
              "end": 19342
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19343,
              "end": 19352
            },
            "value": "gotestsum"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19357,
              "end": 19364
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19365,
          "end": 19380
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19381,
          "end": 19385
        }
      },
      "options": [
        {
          "flag_start": 19386,
          "name": {
            "span": {
              "start": 19388,
              "end": 19392
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19393,
          "name": {
            "span": {
              "start": 19395,
              "end": 19399
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19400,
              "end": 19413
            },
            "value": "golangci_lint"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19414,
              "end": 19421
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19422,
          "end": 19437
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19438,
          "end": 19442
        }
      },
      "options": [
        {
          "flag_start": 19443,
          "name": {
            "span": {
              "start": 19445,
              "end": 19449
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19450,
          "name": {
            "span": {
              "start": 19452,
              "end": 19456
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19457,
              "end": 19462
            },
            "value": "shfmt"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19471,
              "end": 19478
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19479,
          "end": 19494
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19495,
          "end": 19499
        }
      },
      "options": [
        {
          "flag_start": 19500,
          "name": {
            "span": {
              "start": 19502,
              "end": 19506
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19507,
          "name": {
            "span": {
              "start": 19509,
              "end": 19513
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19514,
              "end": 19518
            },
            "value": "runc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19528,
              "end": 19535
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19536,
          "end": 19551
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19552,
          "end": 19556
        }
      },
      "options": [
        {
          "flag_start": 19557,
          "name": {
            "span": {
              "start": 19559,
              "end": 19563
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19564,
          "name": {
            "span": {
              "start": 19566,
              "end": 19570
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19571,
              "end": 19581
            },
            "value": "containerd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19585,
              "end": 19592
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19593,
          "end": 19608
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19609,
          "end": 19613
        }
      },
      "options": [
        {
          "flag_start": 19614,
          "name": {
            "span": {
              "start": 19616,
              "end": 19620
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19621,
          "name": {
            "span": {
              "start": 19623,
              "end": 19627
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19628,
              "end": 19639
            },
            "value": "rootlesskit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19642,
              "end": 19649
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19650,
          "end": 19665
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19666,
          "end": 19670
        }
      },
      "options": [
        {
          "flag_start": 19671,
          "name": {
            "span": {
              "start": 19673,
              "end": 19677
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19678,
          "name": {
            "span": {
              "start": 19680,
              "end": 19684
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19685,
              "end": 19691
            },
            "value": "vpnkit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19699,
              "end": 19700
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19707,
          "end": 19722
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19723,
          "end": 19727
        }
      },
      "options": [
        {
          "flag_start": 19728,
          "name": {
            "span": {
              "start": 19730,
              "end": 19734
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19735,
          "name": {
            "span": {
              "start": 19737,
              "end": 19741
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19742,
              "end": 19755
            },
            "value": "containerutil"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19756,
              "end": 19763
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19764,
          "end": 19779
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19780,
          "end": 19784
        }
      },
      "options": [
        {
          "flag_start": 19785,
          "name": {
            "span": {
              "start": 19787,
              "end": 19791
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19792,
          "name": {
            "span": {
              "start": 19794,
              "end": 19798
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19799,
              "end": 19803
            },
            "value": "crun"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19813,
              "end": 19820
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19821,
          "end": 19836
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19837,
          "end": 19841
        }
      },
      "options": [
        {
          "flag_start": 19842,
          "name": {
            "span": {
              "start": 19844,
              "end": 19848
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19849,
              "end": 19876
            },
            "value": "hack/dockerfile/etc/docker/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19878,
          "end": 19890
        },
        "value": "/etc/docker/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19891,
          "end": 19895
        }
      },
      "options": [
        {
          "flag_start": 19896,
          "name": {
            "span": {
              "start": 19898,
              "end": 19902
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19903,
          "name": {
            "span": {
              "start": 19905,
              "end": 19909
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19910,
              "end": 19916
            },
            "value": "buildx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19924,
              "end": 19931
            },
            "value": "/buildx"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19932,
          "end": 19983
        },
        "value": "/usr/local/libexec/docker/cli-plugins/docker-buildx"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19984,
          "end": 19988
        }
      },
      "options": [
        {
          "flag_start": 19989,
          "name": {
            "span": {
              "start": 19991,
              "end": 19995
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19996,
          "name": {
            "span": {
              "start": 19998,
              "end": 20002
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 20003,
              "end": 20010
            },
            "value": "compose"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 20017,
              "end": 20032
            },
            "value": "/docker-compose"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 20033,
          "end": 20079
        },
        "value": "/usr/libexec/docker/cli-plugins/docker-compose"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 20081,
          "end": 20084
        }
      },
      "arguments": {
        "span": {
          "start": 20085,
          "end": 20110
        },
        "value": "PATH=/usr/local/cli:$PATH"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 20111,
          "end": 20114
        }
      },
      "arguments": {
        "span": {
          "start": 20115,
          "end": 20167
        },
        "value": "TEST_CLIENT_BINARY=/usr/local/cli-integration/docker"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 20168,
          "end": 20171
        }
      },
      "arguments": {
        "span": {
          "start": 20172,
          "end": 20229
        },
        "value": "CONTAINERD_ADDRESS=/run/docker/containerd/containerd.sock"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 20230,
          "end": 20233
        }
      },
      "arguments": {
        "span": {
          "start": 20234,
          "end": 20259
        },
        "value": "CONTAINERD_NAMESPACE=moby"
      }
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 20260,
          "end": 20267
        }
      },
      "arguments": {
        "span": {
          "start": 20268,
          "end": 20300
        },
        "value": "/go/src/github.com/docker/docker"
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 20301,
          "end": 20307
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 20308,
              "end": 20323
            },
            "value": "/var/lib/docker"
          }
        ]
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 20324,
          "end": 20330
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 20331,
              "end": 20373
            },
            "value": "/home/unprivilegeduser/.local/share/docker"
          }
        ]
      }
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 20454,
          "end": 20464
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 20465,
            "end": 20478
          },
          "value": [
            {
              "span": {
                "start": 20467,
                "end": 20476
              },
              "value": "hack/dind"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 20480,
          "end": 20484
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 20485,
          "end": 20502
        },
        "value": "dev-systemd-false"
      },
      "as_": [
        {
          "span": {
            "start": 20503,
            "end": 20505
          }
        },
        {
          "span": {
            "start": 20506,
            "end": 20522
          },
          "value": "dev-systemd-true"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 20523,
          "end": 20526
        }
      },
      "options": [
        {
          "flag_start": 20527,
          "name": {
            "span": {
              "start": 20529,
              "end": 20534
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 20535,
              "end": 20599
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 20606,
          "name": {
            "span": {
              "start": 20608,
              "end": 20613
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 20614,
              "end": 20682
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 20693,
            "end": 20853
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            dbus \\\n            dbus-user-session \\\n            systemd \\\n            systemd-sysv"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 20854,
          "end": 20864
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 20865,
            "end": 20886
          },
          "value": [
            {
              "span": {
                "start": 20867,
                "end": 20884
              },
              "value": "hack/dind-systemd"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 20888,
          "end": 20892
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 20893,
          "end": 20915
        },
        "value": "dev-systemd-${SYSTEMD}"
      },
      "as_": [
        {
          "span": {
            "start": 20916,
            "end": 20918
          }
        },
        {
          "span": {
            "start": 20919,
            "end": 20938
          },
          "value": "dev-firewalld-false"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 20940,
          "end": 20944
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 20945,
          "end": 20961
        },
        "value": "dev-systemd-true"
      },
      "as_": [
        {
          "span": {
            "start": 20962,
            "end": 20964
          }
        },
        {
          "span": {
            "start": 20965,
            "end": 20983
          },
          "value": "dev-firewalld-true"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 20984,
          "end": 20987
        }
      },
      "options": [
        {
          "flag_start": 20988,
          "name": {
            "span": {
              "start": 20990,
              "end": 20995
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 20996,
              "end": 21060
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 21067,
          "name": {
            "span": {
              "start": 21069,
              "end": 21074
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 21075,
              "end": 21143
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 21154,
            "end": 21238
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            firewalld"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 21240,
          "end": 21244
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 21245,
          "end": 21271
        },
        "value": "dev-firewalld-${FIREWALLD}"
      },
      "as_": [
        {
          "span": {
            "start": 21272,
            "end": 21274
          }
        },
        {
          "span": {
            "start": 21275,
            "end": 21283
          },
          "value": "dev-base"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21284,
          "end": 21287
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21288,
            "end": 21306
          },
          "value": "groupadd -r docker"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21307,
          "end": 21310
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21311,
            "end": 21475
          },
          "value": "useradd --create-home --gid docker unprivilegeduser \\\n && mkdir -p /home/unprivilegeduser/.local/share/docker \\\n && chown -R unprivilegeduser /home/unprivilegeduser"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21504,
          "end": 21507
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21508,
            "end": 21566
          },
          "value": "ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21594,
          "end": 21597
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21598,
            "end": 21674
          },
          "value": "echo \"source /usr/share/bash-completion/bash_completion\" >> /etc/bash.bashrc"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21675,
          "end": 21678
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21679,
            "end": 21687
          },
          "value": "ldconfig"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21870,
          "end": 21873
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21874,
            "end": 21951
          },
          "value": "git config --global --add safe.directory $GOPATH/src/github.com/docker/docker"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 22151,
          "end": 22154
        }
      },
      "options": [
        {
          "flag_start": 22155,
          "name": {
            "span": {
              "start": 22157,
              "end": 22162
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 22163,
              "end": 22227
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 22234,
          "name": {
            "span": {
              "start": 22236,
              "end": 22241
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 22242,
              "end": 22310
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 22321,
            "end": 23047
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            apparmor \\\n            bash-completion \\\n            bzip2 \\\n            inetutils-ping \\\n            iproute2 \\\n            iptables \\\n            nftables \\\n            jq \\\n            libcap2-bin \\\n            libnet1 \\\n            libnl-3-200 \\\n            libprotobuf-c1 \\\n            libyajl2 \\\n            nano \\\n            net-tools \\\n            netcat-openbsd \\\n            patch \\\n            pigz \\\n            sudo \\\n            systemd-journal-remote \\\n            thin-provisioning-tools \\\n            uidmap \\\n            vim \\\n            vim-common \\\n            xfsprogs \\\n            xz-utils \\\n            zip \\\n            zstd"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 23048,
          "end": 23051
        }
      },
      "options": [
        {
          "flag_start": 23052,
          "name": {
            "span": {
              "start": 23054,
              "end": 23059
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23060,
              "end": 23124
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 23131,
          "name": {
            "span": {
              "start": 23133,
              "end": 23138
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23139,
              "end": 23207
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 23218,
            "end": 23402
          },
          "value": "apt-get update && apt-get install --no-install-recommends -y \\\n            gcc \\\n            pkg-config \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            yamllint"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 23403,
          "end": 23407
        }
      },
      "options": [
        {
          "flag_start": 23408,
          "name": {
            "span": {
              "start": 23410,
              "end": 23414
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 23415,
          "name": {
            "span": {
              "start": 23417,
              "end": 23421
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 23422,
              "end": 23431
            },
            "value": "dockercli"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 23444,
              "end": 23451
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 23452,
          "end": 23466
        },
        "value": "/usr/local/cli"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 23467,
          "end": 23471
        }
      },
      "options": [
        {
          "flag_start": 23472,
          "name": {
            "span": {
              "start": 23474,
              "end": 23478
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 23479,
          "name": {
            "span": {
              "start": 23481,
              "end": 23485
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 23486,
              "end": 23495
            },
            "value": "dockercli"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 23508,
              "end": 23524
            },
            "value": "/completion.bash"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 23525,
          "end": 23554
        },
        "value": "/etc/bash_completion.d/docker"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 23555,
          "end": 23559
        }
      },
      "options": [
        {
          "flag_start": 23560,
          "name": {
            "span": {
              "start": 23562,
              "end": 23566
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 23567,
          "name": {
            "span": {
              "start": 23569,
              "end": 23573
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 23574,
              "end": 23595
            },
            "value": "dockercli-integration"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 23596,
              "end": 23603
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 23604,
          "end": 23630
        },
        "value": "/usr/local/cli-integration"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 23632,
          "end": 23636
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 23637,
          "end": 23641
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 23642,
            "end": 23644
          }
        },
        {
          "span": {
            "start": 23645,
            "end": 23650
          },
          "value": "build"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 23651,
          "end": 23655
        }
      },
      "options": [
        {
          "flag_start": 23656,
          "name": {
            "span": {
              "start": 23658,
              "end": 23662
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 23663,
              "end": 23671
            },
            "value": "gowinres"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 23672,
              "end": 23679
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 23680,
          "end": 23695
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 23696,
          "end": 23703
        }
      },
      "arguments": {
        "span": {
          "start": 23704,
          "end": 23736
        },
        "value": "/go/src/github.com/docker/docker"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 23737,
          "end": 23740
        }
      },
      "arguments": {
        "span": {
          "start": 23741,
          "end": 23754
        },
        "value": "CGO_ENABLED=1"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 23755,
          "end": 23758
        }
      },
      "options": [
        {
          "flag_start": 23759,
          "name": {
            "span": {
              "start": 23761,
              "end": 23766
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23767,
              "end": 23833
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 23840,
          "name": {
            "span": {
              "start": 23842,
              "end": 23847
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23848,
              "end": 23918
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 23929,
            "end": 24069
          },
          "value": "apt-get update && apt-get install --no-install-recommends -y \\\n            clang \\\n            lld \\\n            llvm \\\n            icoutils"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24070,
          "end": 24073
        }
      },
      "arguments": {
        "span": {
          "start": 24074,
          "end": 24088
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 24089,
          "end": 24092
        }
      },
      "options": [
        {
          "flag_start": 24093,
          "name": {
            "span": {
              "start": 24095,
              "end": 24100
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 24101,
              "end": 24167
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 24174,
          "name": {
            "span": {
              "start": 24176,
              "end": 24181
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 24182,
              "end": 24252
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 24263,
            "end": 24433
          },
          "value": "xx-apt-get install --no-install-recommends -y \\\n            gcc \\\n            libc6-dev \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24434,
          "end": 24437
        }
      },
      "arguments": {
        "span": {
          "start": 24438,
          "end": 24454
        },
        "value": "DOCKER_BUILDTAGS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24455,
          "end": 24458
        }
      },
      "arguments": {
        "span": {
          "start": 24459,
          "end": 24471
        },
        "value": "DOCKER_DEBUG"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24472,
          "end": 24475
        }
      },
      "arguments": {
        "span": {
          "start": 24476,
          "end": 24497
        },
        "value": "DOCKER_GITCOMMIT=HEAD"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24498,
          "end": 24501
        }
      },
      "arguments": {
        "span": {
          "start": 24502,
          "end": 24516
        },
        "value": "DOCKER_LDFLAGS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24517,
          "end": 24520
        }
      },
      "arguments": {
        "span": {
          "start": 24521,
          "end": 24534
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24535,
          "end": 24538
        }
      },
      "arguments": {
        "span": {
          "start": 24539,
          "end": 24546
        },
        "value": "VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24547,
          "end": 24550
        }
      },
      "arguments": {
        "span": {
          "start": 24551,
          "end": 24559
        },
        "value": "PLATFORM"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24560,
          "end": 24563
        }
      },
      "arguments": {
        "span": {
          "start": 24564,
          "end": 24571
        },
        "value": "PRODUCT"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24572,
          "end": 24575
        }
      },
      "arguments": {
        "span": {
          "start": 24576,
          "end": 24599
        },
        "value": "DEFAULT_PRODUCT_LICENSE"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24600,
          "end": 24603
        }
      },
      "arguments": {
        "span": {
          "start": 24604,
          "end": 24617
        },
        "value": "PACKAGER_NAME"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 24732,
          "end": 24735
        }
      },
      "arguments": {
        "span": {
          "start": 24736,
          "end": 24747
        },
        "value": "PREFIX=/tmp"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 24748,
          "end": 24751
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 24757,
            "end": 24757
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 24758,
            "end": 24950
          },
          "expand": true,
          "value": "  # in bullseye arm64 target does not link with lld so configure it to use ld instead\n  if [ \"$(xx-info arch)\" = \"arm64\" ]; then\n    XX_CC_PREFER_LINKER=ld xx-clang --setup-target-triple\n  fi\n"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 24954,
          "end": 24957
        }
      },
      "options": [
        {
          "flag_start": 24958,
          "name": {
            "span": {
              "start": 24960,
              "end": 24965
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 24966,
              "end": 24987
            },
            "value": "type=bind,target=.,rw"
          }
        },
        {
          "flag_start": 24994,
          "name": {
            "span": {
              "start": 24996,
              "end": 25001
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 25002,
              "end": 25071
            },
            "value": "type=cache,target=/root/.cache/go-build,id=moby-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 25077,
            "end": 25077
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 25078,
            "end": 25584
          },
          "expand": true,
          "value": "  set -e\n  target=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"binary\" || echo \"dynbinary\")\n  xx-go --wrap\n  PKG_CONFIG=$(xx-go env PKG_CONFIG) ./hack/make.sh $target\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /tmp/bundles/${target}-daemon/dockerd$([ \"$(xx-info os)\" = \"windows\" ] && echo \".exe\")\n  [ \"$(xx-info os)\" != \"linux\" ] || xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /tmp/bundles/${target}-daemon/docker-proxy\n  mkdir /build\n  mv /tmp/bundles/${target}-daemon/* /build/\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 25714,
          "end": 25718
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 25719,
          "end": 25726
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 25727,
            "end": 25729
          }
        },
        {
          "span": {
            "start": 25730,
            "end": 25736
          },
          "value": "binary"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25737,
          "end": 25741
        }
      },
      "options": [
        {
          "flag_start": 25742,
          "name": {
            "span": {
              "start": 25744,
              "end": 25748
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25749,
              "end": 25754
            },
            "value": "build"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25755,
              "end": 25762
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25763,
          "end": 25764
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 25802,
          "end": 25806
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 25807,
          "end": 25814
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 25815,
            "end": 25817
          }
        },
        {
          "span": {
            "start": 25818,
            "end": 25821
          },
          "value": "all"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25822,
          "end": 25826
        }
      },
      "options": [
        {
          "flag_start": 25827,
          "name": {
            "span": {
              "start": 25829,
              "end": 25833
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25834,
          "name": {
            "span": {
              "start": 25836,
              "end": 25840
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25841,
              "end": 25845
            },
            "value": "tini"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25855,
              "end": 25862
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25863,
          "end": 25864
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25865,
          "end": 25869
        }
      },
      "options": [
        {
          "flag_start": 25870,
          "name": {
            "span": {
              "start": 25872,
              "end": 25876
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25877,
          "name": {
            "span": {
              "start": 25879,
              "end": 25883
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25884,
              "end": 25888
            },
            "value": "runc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25898,
              "end": 25905
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25906,
          "end": 25907
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25908,
          "end": 25912
        }
      },
      "options": [
        {
          "flag_start": 25913,
          "name": {
            "span": {
              "start": 25915,
              "end": 25919
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25920,
          "name": {
            "span": {
              "start": 25922,
              "end": 25926
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25927,
              "end": 25937
            },
            "value": "containerd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25941,
              "end": 25948
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25949,
          "end": 25950
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25951,
          "end": 25955
        }
      },
      "options": [
        {
          "flag_start": 25956,
          "name": {
            "span": {
              "start": 25958,
              "end": 25962
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25963,
          "name": {
            "span": {
              "start": 25965,
              "end": 25969
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25970,
              "end": 25981
            },
            "value": "rootlesskit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25984,
              "end": 25991
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25992,
          "end": 25993
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25994,
          "end": 25998
        }
      },
      "options": [
        {
          "flag_start": 25999,
          "name": {
            "span": {
              "start": 26001,
              "end": 26005
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26006,
          "name": {
            "span": {
              "start": 26008,
              "end": 26012
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26013,
              "end": 26026
            },
            "value": "containerutil"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26027,
              "end": 26034
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26035,
          "end": 26036
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26037,
          "end": 26041
        }
      },
      "options": [
        {
          "flag_start": 26042,
          "name": {
            "span": {
              "start": 26044,
              "end": 26048
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26049,
          "name": {
            "span": {
              "start": 26051,
              "end": 26055
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26056,
              "end": 26062
            },
            "value": "vpnkit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26070,
              "end": 26071
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26078,
          "end": 26079
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26080,
          "end": 26084
        }
      },
      "options": [
        {
          "flag_start": 26085,
          "name": {
            "span": {
              "start": 26087,
              "end": 26091
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26092,
          "name": {
            "span": {
              "start": 26094,
              "end": 26098
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26099,
              "end": 26104
            },
            "value": "build"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26113,
              "end": 26119
            },
            "value": "/build"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26121,
          "end": 26122
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 26187,
          "end": 26191
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 26192,
          "end": 26196
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 26197,
            "end": 26199
          }
        },
        {
          "span": {
            "start": 26200,
            "end": 26209
          },
          "value": "smoketest"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 26210,
          "end": 26217
        }
      },
      "arguments": {
        "span": {
          "start": 26218,
          "end": 26232
        },
        "value": "/usr/local/bin"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26233,
          "end": 26237
        }
      },
      "options": [
        {
          "flag_start": 26238,
          "name": {
            "span": {
              "start": 26240,
              "end": 26244
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26245,
              "end": 26250
            },
            "value": "build"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26251,
              "end": 26257
            },
            "value": "/build"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26258,
          "end": 26259
        },
        "value": "."
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 26260,
          "end": 26263
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 26269,
            "end": 26269
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 26270,
            "end": 26360
          },
          "expand": true,
          "value": "  set -ex\n  file dockerd\n  dockerd --version\n  file docker-proxy\n  docker-proxy --version\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 26431,
          "end": 26435
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 26436,
          "end": 26444
        },
        "value": "dev-base"
      },
      "as_": [
        {
          "span": {
            "start": 26445,
            "end": 26447
          }
        },
        {
          "span": {
            "start": 26448,
            "end": 26460
          },
          "value": "devcontainer"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26461,
          "end": 26465
        }
      },
      "options": [
        {
          "flag_start": 26466,
          "name": {
            "span": {
              "start": 26468,
              "end": 26472
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26473,
              "end": 26474
            },
            "value": "."
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26475,
          "end": 26476
        },
        "value": "."
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26477,
          "end": 26481
        }
      },
      "options": [
        {
          "flag_start": 26482,
          "name": {
            "span": {
              "start": 26484,
              "end": 26488
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26489,
          "name": {
            "span": {
              "start": 26491,
              "end": 26495
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26496,
              "end": 26501
            },
            "value": "gopls"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26510,
              "end": 26517
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26518,
          "end": 26533
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 26713,
          "end": 26717
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 26718,
          "end": 26729
        },
        "value": "docker:dind"
      },
      "as_": [
        {
          "span": {
            "start": 26730,
            "end": 26732
          }
        },
        {
          "span": {
            "start": 26733,
            "end": 26737
          },
          "value": "dind"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26738,
          "end": 26742
        }
      },
      "options": [
        {
          "flag_start": 26743,
          "name": {
            "span": {
              "start": 26745,
              "end": 26749
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26750,
          "name": {
            "span": {
              "start": 26752,
              "end": 26756
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26757,
              "end": 26766
            },
            "value": "dockercli"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26767,
              "end": 26780
            },
            "value": "/build/docker"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26781,
          "end": 26796
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26797,
          "end": 26801
        }
      },
      "options": [
        {
          "flag_start": 26802,
          "name": {
            "span": {
              "start": 26804,
              "end": 26808
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26809,
          "name": {
            "span": {
              "start": 26811,
              "end": 26815
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26816,
              "end": 26822
            },
            "value": "buildx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26826,
              "end": 26833
            },
            "value": "/buildx"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26834,
          "end": 26885
        },
        "value": "/usr/local/libexec/docker/cli-plugins/docker-buildx"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26886,
          "end": 26890
        }
      },
      "options": [
        {
          "flag_start": 26891,
          "name": {
            "span": {
              "start": 26893,
              "end": 26897
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26898,
          "name": {
            "span": {
              "start": 26900,
              "end": 26904
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26905,
              "end": 26912
            },
            "value": "compose"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26915,
              "end": 26930
            },
            "value": "/docker-compose"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26931,
          "end": 26983
        },
        "value": "/usr/local/libexec/docker/cli-plugins/docker-compose"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26984,
          "end": 26988
        }
      },
      "options": [
        {
          "flag_start": 26989,
          "name": {
            "span": {
              "start": 26991,
              "end": 26995
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26996,
          "name": {
            "span": {
              "start": 26998,
              "end": 27002
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 27003,
              "end": 27006
            },
            "value": "all"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 27013,
              "end": 27014
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 27015,
          "end": 27030
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 27084,
          "end": 27088
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 27089,
          "end": 27097
        },
        "value": "dev-base"
      },
      "as_": [
        {
          "span": {
            "start": 27098,
            "end": 27100
          }
        },
        {
          "span": {
            "start": 27101,
            "end": 27104
          },
          "value": "dev"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 27105,
          "end": 27109
        }
      },
      "options": [
        {
          "flag_start": 27110,
          "name": {
            "span": {
              "start": 27112,
              "end": 27116
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 27117,
              "end": 27118
            },
            "value": "."
          }
        }
      ],
      "dest": {
        "span": {
          "start": 27119,
          "end": 27120
        },
        "value": "."
      }
    }
  ]
}