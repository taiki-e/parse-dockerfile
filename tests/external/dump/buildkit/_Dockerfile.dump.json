{
  "parser_directives": {
    "syntax": {
      "start": 2,
      "value": {
        "span": {
          "start": 9,
          "end": 42
        },
        "value": "docker/dockerfile-upstream:master"
      }
    },
    "escape": null,
    "check": null
  },
  "instructions": [
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 44,
          "end": 47
        }
      },
      "arguments": {
        "span": {
          "start": 48,
          "end": 67
        },
        "value": "RUNC_VERSION=v1.3.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 68,
          "end": 71
        }
      },
      "arguments": {
        "span": {
          "start": 72,
          "end": 97
        },
        "value": "CONTAINERD_VERSION=v2.1.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 185,
          "end": 188
        }
      },
      "arguments": {
        "span": {
          "start": 189,
          "end": 221
        },
        "value": "CONTAINERD_ALT_VERSION_20=v2.0.5"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 222,
          "end": 225
        }
      },
      "arguments": {
        "span": {
          "start": 226,
          "end": 259
        },
        "value": "CONTAINERD_ALT_VERSION_17=v1.7.27"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 260,
          "end": 263
        }
      },
      "arguments": {
        "span": {
          "start": 264,
          "end": 287
        },
        "value": "REGISTRY_VERSION=v2.8.3"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 288,
          "end": 291
        }
      },
      "arguments": {
        "span": {
          "start": 292,
          "end": 318
        },
        "value": "ROOTLESSKIT_VERSION=v2.3.5"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 319,
          "end": 322
        }
      },
      "arguments": {
        "span": {
          "start": 323,
          "end": 341
        },
        "value": "CNI_VERSION=v1.7.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 342,
          "end": 345
        }
      },
      "arguments": {
        "span": {
          "start": 346,
          "end": 380
        },
        "value": "STARGZ_SNAPSHOTTER_VERSION=v0.15.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 381,
          "end": 384
        }
      },
      "arguments": {
        "span": {
          "start": 385,
          "end": 407
        },
        "value": "NERDCTL_VERSION=v2.1.2"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 408,
          "end": 411
        }
      },
      "arguments": {
        "span": {
          "start": 412,
          "end": 434
        },
        "value": "DNSNAME_VERSION=v1.3.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 435,
          "end": 438
        }
      },
      "arguments": {
        "span": {
          "start": 439,
          "end": 459
        },
        "value": "NYDUS_VERSION=v2.2.4"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 460,
          "end": 463
        }
      },
      "arguments": {
        "span": {
          "start": 464,
          "end": 506
        },
        "value": "MINIO_VERSION=RELEASE.2022-05-03T20-36-08Z"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 507,
          "end": 510
        }
      },
      "arguments": {
        "span": {
          "start": 511,
          "end": 556
        },
        "value": "MINIO_MC_VERSION=RELEASE.2022-05-04T06-07-55Z"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 557,
          "end": 560
        }
      },
      "arguments": {
        "span": {
          "start": 561,
          "end": 583
        },
        "value": "AZURITE_VERSION=3.33.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 584,
          "end": 587
        }
      },
      "arguments": {
        "span": {
          "start": 588,
          "end": 612
        },
        "value": "GOTESTSUM_VERSION=v1.9.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 613,
          "end": 616
        }
      },
      "arguments": {
        "span": {
          "start": 617,
          "end": 638
        },
        "value": "DELVE_VERSION=v1.23.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 640,
          "end": 643
        }
      },
      "arguments": {
        "span": {
          "start": 644,
          "end": 659
        },
        "value": "GO_VERSION=1.24"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 660,
          "end": 663
        }
      },
      "arguments": {
        "span": {
          "start": 664,
          "end": 683
        },
        "value": "ALPINE_VERSION=3.22"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 684,
          "end": 687
        }
      },
      "arguments": {
        "span": {
          "start": 688,
          "end": 704
        },
        "value": "XX_VERSION=1.6.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 705,
          "end": 708
        }
      },
      "arguments": {
        "span": {
          "start": 709,
          "end": 723
        },
        "value": "BUILDKIT_DEBUG"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 724,
          "end": 727
        }
      },
      "arguments": {
        "span": {
          "start": 728,
          "end": 746
        },
        "value": "EXPORT_BASE=alpine"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 781,
          "end": 785
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 786,
          "end": 814
        },
        "value": "minio/minio:${MINIO_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 815,
            "end": 817
          }
        },
        {
          "span": {
            "start": 818,
            "end": 823
          },
          "value": "minio"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 824,
          "end": 828
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 829,
          "end": 857
        },
        "value": "minio/mc:${MINIO_MC_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 858,
            "end": 860
          }
        },
        {
          "span": {
            "start": 861,
            "end": 869
          },
          "value": "minio-mc"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 910,
          "end": 914
        }
      },
      "options": [
        {
          "flag_start": 915,
          "name": {
            "span": {
              "start": 917,
              "end": 925
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 926,
              "end": 940
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 941,
          "end": 968
        },
        "value": "tonistiigi/xx:${XX_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 969,
            "end": 971
          }
        },
        {
          "span": {
            "start": 972,
            "end": 974
          },
          "value": "xx"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 1014,
          "end": 1018
        }
      },
      "options": [
        {
          "flag_start": 1019,
          "name": {
            "span": {
              "start": 1021,
              "end": 1029
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 1030,
              "end": 1044
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 1045,
          "end": 1089
        },
        "value": "golang:${GO_VERSION}-alpine${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 1090,
            "end": 1092
          }
        },
        {
          "span": {
            "start": 1093,
            "end": 1101
          },
          "value": "golatest"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 1153,
          "end": 1157
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 1158,
          "end": 1166
        },
        "value": "golatest"
      },
      "as_": [
        {
          "span": {
            "start": 1167,
            "end": 1169
          }
        },
        {
          "span": {
            "start": 1170,
            "end": 1182
          },
          "value": "gobuild-base"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 1183,
          "end": 1186
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 1187,
            "end": 1253
          },
          "value": "apk add --no-cache file bash clang lld musl-dev pkgconfig git make"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 1254,
          "end": 1258
        }
      },
      "options": [
        {
          "flag_start": 1259,
          "name": {
            "span": {
              "start": 1261,
              "end": 1265
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 1266,
          "name": {
            "span": {
              "start": 1268,
              "end": 1272
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 1273,
              "end": 1275
            },
            "value": "xx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 1276,
              "end": 1277
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 1278,
          "end": 1279
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 1307,
          "end": 1311
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 1312,
          "end": 1324
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 1325,
            "end": 1327
          }
        },
        {
          "span": {
            "start": 1328,
            "end": 1332
          },
          "value": "runc"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 1333,
          "end": 1340
        }
      },
      "arguments": {
        "span": {
          "start": 1341,
          "end": 1383
        },
        "value": "$GOPATH/src/github.com/opencontainers/runc"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1384,
          "end": 1387
        }
      },
      "arguments": {
        "span": {
          "start": 1388,
          "end": 1400
        },
        "value": "RUNC_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 1401,
          "end": 1404
        }
      },
      "options": [
        {
          "flag_start": 1405,
          "name": {
            "span": {
              "start": 1407,
              "end": 1419
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 1420,
              "end": 1424
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 1425,
              "end": 1483
            },
            "value": "\"https://github.com/opencontainers/runc.git#$RUNC_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 1484,
          "end": 1485
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1486,
          "end": 1489
        }
      },
      "arguments": {
        "span": {
          "start": 1490,
          "end": 1504
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 1610,
          "end": 1613
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 1614,
            "end": 1775
          },
          "value": "set -e; xx-apk add musl-dev gcc libseccomp-dev libseccomp-static; \\\n  [ \"$(xx-info arch)\" != \"ppc64le\" ] || XX_CC_PREFER_LINKER=ld xx-clang --setup-target-triple"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 1776,
          "end": 1779
        }
      },
      "options": [
        {
          "flag_start": 1780,
          "name": {
            "span": {
              "start": 1782,
              "end": 1787
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 1788,
              "end": 1818
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 1824,
            "end": 1824
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 1825,
            "end": 2087
          },
          "expand": true,
          "value": "  set -ex\n  CGO_ENABLED=1 xx-go build -mod=vendor -ldflags '-extldflags -static' -tags 'apparmor seccomp netgo cgo static_build osusergo' -o /usr/bin/runc ./\n  xx-verify --static /usr/bin/runc\n  if [ \"$(xx-info os)\" = \"linux\" ]; then /usr/bin/runc --version; fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2092,
          "end": 2096
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 2097,
          "end": 2109
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 2110,
            "end": 2112
          }
        },
        {
          "span": {
            "start": 2113,
            "end": 2126
          },
          "value": "buildkit-base"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 2127,
          "end": 2134
        }
      },
      "arguments": {
        "span": {
          "start": 2135,
          "end": 2139
        },
        "value": "/src"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 2140,
          "end": 2143
        }
      },
      "arguments": {
        "span": {
          "start": 2144,
          "end": 2163
        },
        "value": "GOFLAGS=-mod=vendor"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2224,
          "end": 2228
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 2229,
          "end": 2242
        },
        "value": "buildkit-base"
      },
      "as_": [
        {
          "span": {
            "start": 2243,
            "end": 2245
          }
        },
        {
          "span": {
            "start": 2246,
            "end": 2262
          },
          "value": "buildkit-version"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2310,
          "end": 2313
        }
      },
      "options": [
        {
          "flag_start": 2314,
          "name": {
            "span": {
              "start": 2316,
              "end": 2321
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 2322,
              "end": 2330
            },
            "value": "target=."
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 2338,
            "end": 2338
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 2339,
            "end": 3015
          },
          "expand": false,
          "value": "  git rev-parse HEAD 2>/dev/null || {\n    echo >&2 \"Failed to get git revision, make sure --build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=1 is set when building from Git directly\"\n    exit 1\n  }\n  set -ex\n  export PKG=github.com/moby/buildkit VERSION=$(git describe --match 'v[0-9]*' --dirty='.m' --always --tags) REVISION=$(git rev-parse HEAD)$(if ! git diff --no-ext-diff --quiet --exit-code; then echo .m; fi) COMMIT_DATE=$(git show -s --format=%cI HEAD);\n  echo \"-X ${PKG}/version.Version=${VERSION} -X ${PKG}/version.Revision=${REVISION} -X ${PKG}/version.Package=${PKG}\" > /tmp/.ldflags;\n  echo -n \"${VERSION}\" > /tmp/.version;\n  echo -n \"${COMMIT_DATE}\" > /tmp/.commit_date;\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 3054,
          "end": 3058
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 3059,
          "end": 3072
        },
        "value": "buildkit-base"
      },
      "as_": [
        {
          "span": {
            "start": 3073,
            "end": 3075
          }
        },
        {
          "span": {
            "start": 3076,
            "end": 3084
          },
          "value": "buildctl"
        }
      ]
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 3085,
          "end": 3088
        }
      },
      "arguments": {
        "span": {
          "start": 3089,
          "end": 3102
        },
        "value": "CGO_ENABLED=0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3103,
          "end": 3106
        }
      },
      "arguments": {
        "span": {
          "start": 3107,
          "end": 3121
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3122,
          "end": 3125
        }
      },
      "arguments": {
        "span": {
          "start": 3126,
          "end": 3138
        },
        "value": "GOBUILDFLAGS"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3139,
          "end": 3142
        }
      },
      "options": [
        {
          "flag_start": 3143,
          "name": {
            "span": {
              "start": 3145,
              "end": 3150
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3151,
              "end": 3159
            },
            "value": "target=."
          }
        },
        {
          "flag_start": 3160,
          "name": {
            "span": {
              "start": 3162,
              "end": 3167
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3168,
              "end": 3198
            },
            "value": "target=/root/.cache,type=cache"
          }
        },
        {
          "flag_start": 3203,
          "name": {
            "span": {
              "start": 3205,
              "end": 3210
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3211,
              "end": 3240
            },
            "value": "target=/go/pkg/mod,type=cache"
          }
        },
        {
          "flag_start": 3245,
          "name": {
            "span": {
              "start": 3247,
              "end": 3252
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3253,
              "end": 3316
            },
            "value": "source=/tmp/.ldflags,target=/tmp/.ldflags,from=buildkit-version"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 3322,
            "end": 3322
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 3323,
            "end": 3543
          },
          "expand": true,
          "value": "  set -ex\n  xx-go build ${GOBUILDFLAGS} -ldflags \"$(cat /tmp/.ldflags)\" -o /usr/bin/buildctl ./cmd/buildctl\n  xx-verify --static /usr/bin/buildctl\n  if [ \"$(xx-info os)\" = \"linux\" ]; then /usr/bin/buildctl --version; fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 3581,
          "end": 3585
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 3586,
          "end": 3599
        },
        "value": "buildkit-base"
      },
      "as_": [
        {
          "span": {
            "start": 3600,
            "end": 3602
          }
        },
        {
          "span": {
            "start": 3603,
            "end": 3612
          },
          "value": "buildkitd"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3687,
          "end": 3690
        }
      },
      "arguments": {
        "span": {
          "start": 3691,
          "end": 3705
        },
        "value": "BUILDKITD_TAGS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3706,
          "end": 3709
        }
      },
      "arguments": {
        "span": {
          "start": 3710,
          "end": 3724
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3725,
          "end": 3728
        }
      },
      "arguments": {
        "span": {
          "start": 3729,
          "end": 3741
        },
        "value": "GOBUILDFLAGS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3742,
          "end": 3745
        }
      },
      "arguments": {
        "span": {
          "start": 3746,
          "end": 3768
        },
        "value": "VERIFYFLAGS=\"--static\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3769,
          "end": 3772
        }
      },
      "arguments": {
        "span": {
          "start": 3773,
          "end": 3786
        },
        "value": "CGO_ENABLED=0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3787,
          "end": 3790
        }
      },
      "arguments": {
        "span": {
          "start": 3791,
          "end": 3805
        },
        "value": "BUILDKIT_DEBUG"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3806,
          "end": 3809
        }
      },
      "arguments": {
        "span": {
          "start": 3810,
          "end": 3850
        },
        "value": "GOGCFLAGS=${BUILDKIT_DEBUG:+\"all=-N -l\"}"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3851,
          "end": 3854
        }
      },
      "options": [
        {
          "flag_start": 3855,
          "name": {
            "span": {
              "start": 3857,
              "end": 3862
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3863,
              "end": 3871
            },
            "value": "target=."
          }
        },
        {
          "flag_start": 3872,
          "name": {
            "span": {
              "start": 3874,
              "end": 3879
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3880,
              "end": 3910
            },
            "value": "target=/root/.cache,type=cache"
          }
        },
        {
          "flag_start": 3915,
          "name": {
            "span": {
              "start": 3917,
              "end": 3922
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3923,
              "end": 3952
            },
            "value": "target=/go/pkg/mod,type=cache"
          }
        },
        {
          "flag_start": 3957,
          "name": {
            "span": {
              "start": 3959,
              "end": 3964
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3965,
              "end": 4028
            },
            "value": "source=/tmp/.ldflags,target=/tmp/.ldflags,from=buildkit-version"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 4034,
            "end": 4034
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 4035,
            "end": 5095
          },
          "expand": true,
          "value": "  set -ex\n  xx-go build ${GOBUILDFLAGS} -gcflags=\"${GOGCFLAGS}\" -ldflags \"$(cat /tmp/.ldflags) -extldflags '-static'\" -tags \"osusergo netgo static_build seccomp ${BUILDKITD_TAGS}\" -o /usr/bin/buildkitd ./cmd/buildkitd\n  xx-verify ${VERIFYFLAGS} /usr/bin/buildkitd\n\n  # buildkitd --version can be flaky when running through emulation related to\n  # https://github.com/moby/buildkit/pull/4491. Retry a few times as a workaround.\n  set +ex\n  if [ \"$(xx-info os)\" = \"linux\" ]; then\n    max_retries=5\n    for attempt in $(seq \"$max_retries\"); do\n      timeout 3 /usr/bin/buildkitd --version\n      exitcode=$?\n      if ! xx-info is-cross; then\n        exit $exitcode\n      elif [ $exitcode -eq 0 ]; then\n        break\n      elif [ $exitcode -eq 124 ] || [ $exitcode -eq 143 ]; then\n        echo \"WARN: buildkitd --version timed out ($attempt/$max_retries)\"\n        if [ \"$attempt\" -eq \"$max_retries\" ]; then\n          exit $exitcode\n        fi\n      else\n        echo \"ERROR: buildkitd --version failed with exit code $exitcode\"\n      fi\n      sleep 1\n    done\n  fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 5148,
          "end": 5152
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 5153,
          "end": 5165
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 5166,
            "end": 5168
          }
        },
        {
          "span": {
            "start": 5169,
            "end": 5176
          },
          "value": "dnsname"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 5177,
          "end": 5184
        }
      },
      "arguments": {
        "span": {
          "start": 5185,
          "end": 5222
        },
        "value": "/go/src/github.com/containers/dnsname"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5223,
          "end": 5226
        }
      },
      "arguments": {
        "span": {
          "start": 5227,
          "end": 5242
        },
        "value": "DNSNAME_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 5243,
          "end": 5246
        }
      },
      "options": [
        {
          "flag_start": 5247,
          "name": {
            "span": {
              "start": 5249,
              "end": 5261
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 5262,
              "end": 5266
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 5267,
              "end": 5327
            },
            "value": "\"https://github.com/containers/dnsname.git#$DNSNAME_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 5328,
          "end": 5329
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5330,
          "end": 5333
        }
      },
      "arguments": {
        "span": {
          "start": 5334,
          "end": 5348
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5349,
          "end": 5352
        }
      },
      "options": [
        {
          "flag_start": 5353,
          "name": {
            "span": {
              "start": 5355,
              "end": 5360
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 5361,
              "end": 5391
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 5398,
            "end": 5511
          },
          "value": "CGO_ENABLED=0 xx-go build -o /usr/bin/dnsname ./plugins/meta/dnsname && \\\n    xx-verify --static /usr/bin/dnsname"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 5513,
          "end": 5517
        }
      },
      "options": [
        {
          "flag_start": 5518,
          "name": {
            "span": {
              "start": 5520,
              "end": 5528
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 5529,
              "end": 5543
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 5544,
          "end": 5568
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 5569,
            "end": 5571
          }
        },
        {
          "span": {
            "start": 5572,
            "end": 5583
          },
          "value": "cni-plugins"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5584,
          "end": 5587
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 5588,
            "end": 5611
          },
          "value": "apk add --no-cache curl"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 5612,
          "end": 5616
        }
      },
      "options": [
        {
          "flag_start": 5617,
          "name": {
            "span": {
              "start": 5619,
              "end": 5623
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 5624,
              "end": 5626
            },
            "value": "xx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 5627,
              "end": 5628
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 5629,
          "end": 5630
        },
        "value": "/"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5631,
          "end": 5634
        }
      },
      "arguments": {
        "span": {
          "start": 5635,
          "end": 5646
        },
        "value": "CNI_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5647,
          "end": 5650
        }
      },
      "arguments": {
        "span": {
          "start": 5651,
          "end": 5659
        },
        "value": "TARGETOS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5660,
          "end": 5663
        }
      },
      "arguments": {
        "span": {
          "start": 5664,
          "end": 5674
        },
        "value": "TARGETARCH"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5675,
          "end": 5678
        }
      },
      "arguments": {
        "span": {
          "start": 5679,
          "end": 5693
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 5694,
          "end": 5701
        }
      },
      "arguments": {
        "span": {
          "start": 5702,
          "end": 5714
        },
        "value": "/opt/cni/bin"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5715,
          "end": 5718
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 5719,
            "end": 5876
          },
          "value": "curl -fsSL https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-${TARGETOS}-${TARGETARCH}-${CNI_VERSION}.tgz | tar xzv"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5877,
          "end": 5880
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 5881,
            "end": 5926
          },
          "value": "xx-verify --static bridge loopback host-local"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 5927,
          "end": 5931
        }
      },
      "options": [
        {
          "flag_start": 5932,
          "name": {
            "span": {
              "start": 5934,
              "end": 5938
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 5939,
          "name": {
            "span": {
              "start": 5941,
              "end": 5945
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 5946,
              "end": 5953
            },
            "value": "dnsname"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 5954,
              "end": 5970
            },
            "value": "/usr/bin/dnsname"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 5971,
          "end": 5984
        },
        "value": "/opt/cni/bin/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 5986,
          "end": 5990
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 5991,
          "end": 5998
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 5999,
            "end": 6001
          }
        },
        {
          "span": {
            "start": 6002,
            "end": 6020
          },
          "value": "cni-plugins-export"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6021,
          "end": 6025
        }
      },
      "options": [
        {
          "flag_start": 6026,
          "name": {
            "span": {
              "start": 6028,
              "end": 6032
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6033,
          "name": {
            "span": {
              "start": 6035,
              "end": 6039
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6040,
              "end": 6051
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6052,
              "end": 6071
            },
            "value": "/opt/cni/bin/bridge"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6072,
          "end": 6092
        },
        "value": "/buildkit-cni-bridge"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6093,
          "end": 6097
        }
      },
      "options": [
        {
          "flag_start": 6098,
          "name": {
            "span": {
              "start": 6100,
              "end": 6104
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6105,
          "name": {
            "span": {
              "start": 6107,
              "end": 6111
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6112,
              "end": 6123
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6124,
              "end": 6145
            },
            "value": "/opt/cni/bin/loopback"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6146,
          "end": 6168
        },
        "value": "/buildkit-cni-loopback"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6169,
          "end": 6173
        }
      },
      "options": [
        {
          "flag_start": 6174,
          "name": {
            "span": {
              "start": 6176,
              "end": 6180
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6181,
          "name": {
            "span": {
              "start": 6183,
              "end": 6187
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6188,
              "end": 6199
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6200,
              "end": 6223
            },
            "value": "/opt/cni/bin/host-local"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6224,
          "end": 6248
        },
        "value": "/buildkit-cni-host-local"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6249,
          "end": 6253
        }
      },
      "options": [
        {
          "flag_start": 6254,
          "name": {
            "span": {
              "start": 6256,
              "end": 6260
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6261,
          "name": {
            "span": {
              "start": 6263,
              "end": 6267
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6268,
              "end": 6279
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6280,
              "end": 6301
            },
            "value": "/opt/cni/bin/firewall"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6302,
          "end": 6324
        },
        "value": "/buildkit-cni-firewall"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6326,
          "end": 6330
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6331,
          "end": 6338
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 6339,
            "end": 6341
          }
        },
        {
          "span": {
            "start": 6342,
            "end": 6369
          },
          "value": "cni-plugins-export-squashed"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6370,
          "end": 6374
        }
      },
      "options": [
        {
          "flag_start": 6375,
          "name": {
            "span": {
              "start": 6377,
              "end": 6381
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6382,
              "end": 6400
            },
            "value": "cni-plugins-export"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6401,
              "end": 6402
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6403,
          "end": 6404
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6406,
          "end": 6410
        }
      },
      "options": [
        {
          "flag_start": 6411,
          "name": {
            "span": {
              "start": 6413,
              "end": 6421
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 6422,
              "end": 6436
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 6437,
          "end": 6461
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 6462,
            "end": 6464
          }
        },
        {
          "span": {
            "start": 6465,
            "end": 6478
          },
          "value": "binfmt-filter"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6563,
          "end": 6567
        }
      },
      "options": [
        {
          "flag_start": 6568,
          "name": {
            "span": {
              "start": 6570,
              "end": 6574
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6575,
          "name": {
            "span": {
              "start": 6577,
              "end": 6581
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6582,
              "end": 6690
            },
            "value": "tonistiigi/binfmt:buildkit-v9.2.2-54@sha256:e60fbf01e26c75efa816224f4de31c2ef63c5486b20c3e8fa1e5da2aff368ba9"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6691,
              "end": 6692
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6693,
          "end": 6698
        },
        "value": "/out/"
      }
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 6699,
          "end": 6706
        }
      },
      "arguments": {
        "span": {
          "start": 6707,
          "end": 6712
        },
        "value": "/out/"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6713,
          "end": 6716
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 6717,
            "end": 6789
          },
          "value": "rm buildkit-qemu-loongarch64 buildkit-qemu-mips64 buildkit-qemu-mips64el"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6791,
          "end": 6795
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6796,
          "end": 6803
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 6804,
            "end": 6806
          }
        },
        {
          "span": {
            "start": 6807,
            "end": 6821
          },
          "value": "binaries-linux"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6822,
          "end": 6826
        }
      },
      "options": [
        {
          "flag_start": 6827,
          "name": {
            "span": {
              "start": 6829,
              "end": 6833
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6834,
          "name": {
            "span": {
              "start": 6836,
              "end": 6840
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6841,
              "end": 6845
            },
            "value": "runc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6846,
              "end": 6859
            },
            "value": "/usr/bin/runc"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6860,
          "end": 6874
        },
        "value": "/buildkit-runc"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6875,
          "end": 6879
        }
      },
      "options": [
        {
          "flag_start": 6880,
          "name": {
            "span": {
              "start": 6882,
              "end": 6886
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6887,
          "name": {
            "span": {
              "start": 6889,
              "end": 6893
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6894,
              "end": 6907
            },
            "value": "binfmt-filter"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6908,
              "end": 6913
            },
            "value": "/out/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6914,
          "end": 6915
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6916,
          "end": 6920
        }
      },
      "options": [
        {
          "flag_start": 6921,
          "name": {
            "span": {
              "start": 6923,
              "end": 6927
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6928,
          "name": {
            "span": {
              "start": 6930,
              "end": 6934
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6935,
              "end": 6962
            },
            "value": "cni-plugins-export-squashed"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6963,
              "end": 6964
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6965,
          "end": 6966
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6967,
          "end": 6971
        }
      },
      "options": [
        {
          "flag_start": 6972,
          "name": {
            "span": {
              "start": 6974,
              "end": 6978
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6979,
          "name": {
            "span": {
              "start": 6981,
              "end": 6985
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6986,
              "end": 6994
            },
            "value": "buildctl"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6995,
              "end": 7012
            },
            "value": "/usr/bin/buildctl"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7013,
          "end": 7014
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7015,
          "end": 7019
        }
      },
      "options": [
        {
          "flag_start": 7020,
          "name": {
            "span": {
              "start": 7022,
              "end": 7026
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7027,
          "name": {
            "span": {
              "start": 7029,
              "end": 7033
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7034,
              "end": 7043
            },
            "value": "buildkitd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7044,
              "end": 7062
            },
            "value": "/usr/bin/buildkitd"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7063,
          "end": 7064
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7066,
          "end": 7070
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7071,
          "end": 7078
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 7079,
            "end": 7081
          }
        },
        {
          "span": {
            "start": 7082,
            "end": 7097
          },
          "value": "binaries-darwin"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7098,
          "end": 7102
        }
      },
      "options": [
        {
          "flag_start": 7103,
          "name": {
            "span": {
              "start": 7105,
              "end": 7109
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7110,
          "name": {
            "span": {
              "start": 7112,
              "end": 7116
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7117,
              "end": 7125
            },
            "value": "buildctl"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7126,
              "end": 7143
            },
            "value": "/usr/bin/buildctl"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7144,
          "end": 7145
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7147,
          "end": 7151
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7152,
          "end": 7159
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 7160,
            "end": 7162
          }
        },
        {
          "span": {
            "start": 7163,
            "end": 7179
          },
          "value": "binaries-windows"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7180,
          "end": 7184
        }
      },
      "options": [
        {
          "flag_start": 7185,
          "name": {
            "span": {
              "start": 7187,
              "end": 7191
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7192,
          "name": {
            "span": {
              "start": 7194,
              "end": 7198
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7199,
              "end": 7207
            },
            "value": "buildctl"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7208,
              "end": 7225
            },
            "value": "/usr/bin/buildctl"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7226,
          "end": 7239
        },
        "value": "/buildctl.exe"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7240,
          "end": 7244
        }
      },
      "options": [
        {
          "flag_start": 7245,
          "name": {
            "span": {
              "start": 7247,
              "end": 7251
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7252,
          "name": {
            "span": {
              "start": 7254,
              "end": 7258
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7259,
              "end": 7268
            },
            "value": "buildkitd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7269,
              "end": 7287
            },
            "value": "/usr/bin/buildkitd"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7288,
          "end": 7302
        },
        "value": "/buildkitd.exe"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7304,
          "end": 7308
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7309,
          "end": 7316
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 7317,
            "end": 7319
          }
        },
        {
          "span": {
            "start": 7320,
            "end": 7336
          },
          "value": "binaries-freebsd"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7337,
          "end": 7341
        }
      },
      "options": [
        {
          "flag_start": 7342,
          "name": {
            "span": {
              "start": 7344,
              "end": 7348
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7349,
          "name": {
            "span": {
              "start": 7351,
              "end": 7355
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7356,
              "end": 7365
            },
            "value": "buildkitd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7366,
              "end": 7384
            },
            "value": "/usr/bin/buildkitd"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7385,
          "end": 7386
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7387,
          "end": 7391
        }
      },
      "options": [
        {
          "flag_start": 7392,
          "name": {
            "span": {
              "start": 7394,
              "end": 7398
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7399,
          "name": {
            "span": {
              "start": 7401,
              "end": 7405
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7406,
              "end": 7414
            },
            "value": "buildctl"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7415,
              "end": 7432
            },
            "value": "/usr/bin/buildctl"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7433,
          "end": 7434
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7436,
          "end": 7440
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7441,
          "end": 7459
        },
        "value": "binaries-$TARGETOS"
      },
      "as_": [
        {
          "span": {
            "start": 7460,
            "end": 7462
          }
        },
        {
          "span": {
            "start": 7463,
            "end": 7471
          },
          "value": "binaries"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7536,
          "end": 7539
        }
      },
      "arguments": {
        "span": {
          "start": 7540,
          "end": 7569
        },
        "value": "BUILDKIT_SBOM_SCAN_STAGE=true"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7571,
          "end": 7575
        }
      },
      "options": [
        {
          "flag_start": 7576,
          "name": {
            "span": {
              "start": 7578,
              "end": 7586
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 7587,
              "end": 7601
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 7602,
          "end": 7626
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 7627,
            "end": 7629
          }
        },
        {
          "span": {
            "start": 7630,
            "end": 7638
          },
          "value": "releaser"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7639,
          "end": 7642
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 7643,
            "end": 7670
          },
          "value": "apk add --no-cache tar gzip"
        }
      },
      "here_docs": []
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 7671,
          "end": 7678
        }
      },
      "arguments": {
        "span": {
          "start": 7679,
          "end": 7684
        },
        "value": "/work"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7685,
          "end": 7688
        }
      },
      "arguments": {
        "span": {
          "start": 7689,
          "end": 7703
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7704,
          "end": 7707
        }
      },
      "options": [
        {
          "flag_start": 7708,
          "name": {
            "span": {
              "start": 7710,
              "end": 7715
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7716,
              "end": 7729
            },
            "value": "from=binaries"
          }
        },
        {
          "flag_start": 7734,
          "name": {
            "span": {
              "start": 7736,
              "end": 7741
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7742,
              "end": 7805
            },
            "value": "source=/tmp/.version,target=/tmp/.version,from=buildkit-version"
          }
        },
        {
          "flag_start": 7810,
          "name": {
            "span": {
              "start": 7812,
              "end": 7817
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7818,
              "end": 7889
            },
            "value": "source=/tmp/.commit_date,target=/tmp/.commit_date,from=buildkit-version"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 7894,
            "end": 8077
          },
          "value": "mkdir -p /out && tar czvf \"/out/buildkit-$(cat /tmp/.version).$(echo $TARGETPLATFORM | sed 's/\\//-/g').tar.gz\" --mtime=\"$(cat /tmp/.commit_date)\" --sort=name --transform 's/^./bin/' ."
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8079,
          "end": 8083
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8084,
          "end": 8091
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 8092,
            "end": 8094
          }
        },
        {
          "span": {
            "start": 8095,
            "end": 8102
          },
          "value": "release"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 8103,
          "end": 8107
        }
      },
      "options": [
        {
          "flag_start": 8108,
          "name": {
            "span": {
              "start": 8110,
              "end": 8114
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 8115,
          "name": {
            "span": {
              "start": 8117,
              "end": 8121
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 8122,
              "end": 8130
            },
            "value": "releaser"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 8131,
              "end": 8136
            },
            "value": "/out/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 8137,
          "end": 8138
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8140,
          "end": 8144
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8145,
          "end": 8169
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 8170,
            "end": 8172
          }
        },
        {
          "span": {
            "start": 8173,
            "end": 8195
          },
          "value": "buildkit-export-alpine"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8196,
          "end": 8199
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 8200,
            "end": 8308
          },
          "value": "apk add --no-cache fuse3 git openssh pigz xz iptables ip6tables \\\n  && ln -s fusermount3 /usr/bin/fusermount"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 8309,
          "end": 8313
        }
      },
      "options": [
        {
          "flag_start": 8314,
          "name": {
            "span": {
              "start": 8316,
              "end": 8320
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 8321,
              "end": 8372
            },
            "value": "examples/buildctl-daemonless/buildctl-daemonless.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 8373,
          "end": 8382
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 8383,
          "end": 8389
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 8390,
              "end": 8407
            },
            "value": "/var/lib/buildkit"
          }
        ]
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8409,
          "end": 8413
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8414,
          "end": 8426
        },
        "value": "ubuntu:24.04"
      },
      "as_": [
        {
          "span": {
            "start": 8427,
            "end": 8429
          }
        },
        {
          "span": {
            "start": 8430,
            "end": 8452
          },
          "value": "buildkit-export-ubuntu"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8453,
          "end": 8456
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 8457,
            "end": 8662
          },
          "value": "apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    fuse3 \\\n    git \\\n    openssh-client \\\n    pigz \\\n    xz-utils \\\n    iptables \\\n    ca-certificates \\\n  && rm -rf /var/lib/apt/lists/*"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 8663,
          "end": 8667
        }
      },
      "options": [
        {
          "flag_start": 8668,
          "name": {
            "span": {
              "start": 8670,
              "end": 8674
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 8675,
              "end": 8726
            },
            "value": "examples/buildctl-daemonless/buildctl-daemonless.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 8727,
          "end": 8736
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 8737,
          "end": 8743
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 8744,
              "end": 8761
            },
            "value": "/var/lib/buildkit"
          }
        ]
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8763,
          "end": 8767
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8768,
          "end": 8798
        },
        "value": "buildkit-export-${EXPORT_BASE}"
      },
      "as_": [
        {
          "span": {
            "start": 8799,
            "end": 8801
          }
        },
        {
          "span": {
            "start": 8802,
            "end": 8817
          },
          "value": "buildkit-export"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8818,
          "end": 8821
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 8822,
            "end": 8870
          },
          "value": "mkdir -p /etc/cdi /var/run/cdi /etc/buildkit/cdi"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8872,
          "end": 8876
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8877,
          "end": 8889
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 8890,
            "end": 8892
          }
        },
        {
          "span": {
            "start": 8893,
            "end": 8909
          },
          "value": "containerd-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 8910,
          "end": 8917
        }
      },
      "arguments": {
        "span": {
          "start": 8918,
          "end": 8958
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 8959,
          "end": 8962
        }
      },
      "arguments": {
        "span": {
          "start": 8963,
          "end": 8977
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 8978,
          "end": 8981
        }
      },
      "arguments": {
        "span": {
          "start": 8982,
          "end": 9057
        },
        "value": "CGO_ENABLED=1 CGO_LDFLAGS=\"-fuse-ld=lld\" BUILDTAGS=no_btrfs GO111MODULE=off"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9058,
          "end": 9061
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 9062,
            "end": 9101
          },
          "value": "xx-apk add musl-dev gcc && xx-go --wrap"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 9102,
          "end": 9106
        }
      },
      "options": [
        {
          "flag_start": 9107,
          "name": {
            "span": {
              "start": 9109,
              "end": 9114
            },
            "value": "chmod"
          },
          "value": {
            "span": {
              "start": 9115,
              "end": 9118
            },
            "value": "755"
          }
        }
      ],
      "src": [
        {
          "here_doc": {
            "span": {
              "start": 9136,
              "end": 9620
            },
            "expand": true,
            "value": "#!/bin/sh\nset -ex\nmkdir /out\nif [ \"$(xx-info os)\" = \"linux\" ]; then\n  make bin/containerd\n  make bin/containerd-shim-runc-v2\n  mv bin/containerd bin/containerd-shim* /out\nelse\n  CGO_ENABLED=0 make STATIC=1 binaries\n  if [ \"$(xx-info os)\" = \"windows\" ]; then\n    mv bin/containerd.exe /out\n  else\n    mv bin/containerd /out\n  fi\n  # No shim binary is built for FreeBSD, since containerd v2.0.\n  if ls bin/containerd-shim* >/dev/null 2>&1; then\n    mv bin/containerd-shim* /out\n  fi\nfi\n"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 9126,
          "end": 9135
        },
        "value": "/build.sh"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9625,
          "end": 9629
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9630,
          "end": 9646
        },
        "value": "containerd-build"
      },
      "as_": [
        {
          "span": {
            "start": 9647,
            "end": 9649
          }
        },
        {
          "span": {
            "start": 9650,
            "end": 9660
          },
          "value": "containerd"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 9661,
          "end": 9668
        }
      },
      "arguments": {
        "span": {
          "start": 9669,
          "end": 9709
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9710,
          "end": 9713
        }
      },
      "arguments": {
        "span": {
          "start": 9714,
          "end": 9732
        },
        "value": "CONTAINERD_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 9733,
          "end": 9736
        }
      },
      "options": [
        {
          "flag_start": 9737,
          "name": {
            "span": {
              "start": 9739,
              "end": 9751
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 9752,
              "end": 9756
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 9757,
              "end": 9823
            },
            "value": "\"https://github.com/containerd/containerd.git#$CONTAINERD_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 9824,
          "end": 9825
        },
        "value": "."
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9826,
          "end": 9829
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 9830,
            "end": 9839
          },
          "value": "/build.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9906,
          "end": 9910
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9911,
          "end": 9927
        },
        "value": "containerd-build"
      },
      "as_": [
        {
          "span": {
            "start": 9928,
            "end": 9930
          }
        },
        {
          "span": {
            "start": 9931,
            "end": 9948
          },
          "value": "containerd-alt-20"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 9949,
          "end": 9956
        }
      },
      "arguments": {
        "span": {
          "start": 9957,
          "end": 9997
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9998,
          "end": 10001
        }
      },
      "arguments": {
        "span": {
          "start": 10002,
          "end": 10027
        },
        "value": "CONTAINERD_ALT_VERSION_20"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 10028,
          "end": 10031
        }
      },
      "options": [
        {
          "flag_start": 10032,
          "name": {
            "span": {
              "start": 10034,
              "end": 10046
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 10047,
              "end": 10051
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 10052,
              "end": 10125
            },
            "value": "\"https://github.com/containerd/containerd.git#$CONTAINERD_ALT_VERSION_20\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 10126,
          "end": 10127
        },
        "value": "."
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10128,
          "end": 10131
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 10132,
            "end": 10141
          },
          "value": "/build.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10208,
          "end": 10212
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10213,
          "end": 10229
        },
        "value": "containerd-build"
      },
      "as_": [
        {
          "span": {
            "start": 10230,
            "end": 10232
          }
        },
        {
          "span": {
            "start": 10233,
            "end": 10250
          },
          "value": "containerd-alt-17"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 10251,
          "end": 10258
        }
      },
      "arguments": {
        "span": {
          "start": 10259,
          "end": 10299
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10300,
          "end": 10303
        }
      },
      "arguments": {
        "span": {
          "start": 10304,
          "end": 10329
        },
        "value": "CONTAINERD_ALT_VERSION_17"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 10330,
          "end": 10333
        }
      },
      "options": [
        {
          "flag_start": 10334,
          "name": {
            "span": {
              "start": 10336,
              "end": 10348
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 10349,
              "end": 10353
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 10354,
              "end": 10427
            },
            "value": "\"https://github.com/containerd/containerd.git#$CONTAINERD_ALT_VERSION_17\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 10428,
          "end": 10429
        },
        "value": "."
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10430,
          "end": 10433
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 10434,
            "end": 10443
          },
          "value": "/build.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10445,
          "end": 10449
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10450,
          "end": 10462
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 10463,
            "end": 10465
          }
        },
        {
          "span": {
            "start": 10466,
            "end": 10474
          },
          "value": "registry"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 10475,
          "end": 10482
        }
      },
      "arguments": {
        "span": {
          "start": 10483,
          "end": 10521
        },
        "value": "/go/src/github.com/docker/distribution"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10522,
          "end": 10525
        }
      },
      "arguments": {
        "span": {
          "start": 10526,
          "end": 10542
        },
        "value": "REGISTRY_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 10543,
          "end": 10546
        }
      },
      "options": [
        {
          "flag_start": 10547,
          "name": {
            "span": {
              "start": 10549,
              "end": 10561
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 10562,
              "end": 10566
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 10567,
              "end": 10635
            },
            "value": "\"https://github.com/distribution/distribution.git#$REGISTRY_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 10636,
          "end": 10637
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10638,
          "end": 10641
        }
      },
      "arguments": {
        "span": {
          "start": 10642,
          "end": 10656
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10657,
          "end": 10660
        }
      },
      "options": [
        {
          "flag_start": 10661,
          "name": {
            "span": {
              "start": 10663,
              "end": 10668
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10669,
              "end": 10699
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 10705,
            "end": 10705
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 10706,
            "end": 10978
          },
          "expand": true,
          "value": "  set -ex\n  mkdir /out\n  export GOPATH=\"$(pwd)/Godeps/_workspace:$GOPATH\"\n  GO111MODULE=off CGO_ENABLED=0 xx-go build -o /out/registry ./cmd/registry\n  xx-verify --static /out/registry\n  if [ \"$(xx-info os)\" = \"windows\" ]; then\n    mv /out/registry /out/registry.exe\n  fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10983,
          "end": 10987
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10988,
          "end": 11000
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 11001,
            "end": 11003
          }
        },
        {
          "span": {
            "start": 11004,
            "end": 11015
          },
          "value": "rootlesskit"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 11016,
          "end": 11023
        }
      },
      "arguments": {
        "span": {
          "start": 11024,
          "end": 11074
        },
        "value": "/go/src/github.com/rootless-containers/rootlesskit"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11075,
          "end": 11078
        }
      },
      "arguments": {
        "span": {
          "start": 11079,
          "end": 11098
        },
        "value": "ROOTLESSKIT_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 11099,
          "end": 11102
        }
      },
      "options": [
        {
          "flag_start": 11103,
          "name": {
            "span": {
              "start": 11105,
              "end": 11117
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 11118,
              "end": 11122
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 11123,
              "end": 11200
            },
            "value": "\"https://github.com/rootless-containers/rootlesskit.git#$ROOTLESSKIT_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 11201,
          "end": 11202
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11203,
          "end": 11206
        }
      },
      "arguments": {
        "span": {
          "start": 11207,
          "end": 11221
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11222,
          "end": 11225
        }
      },
      "options": [
        {
          "flag_start": 11227,
          "name": {
            "span": {
              "start": 11229,
              "end": 11234
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11235,
              "end": 11265
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 11270,
            "end": 11368
          },
          "value": "CGO_ENABLED=0 xx-go build -o /rootlesskit ./cmd/rootlesskit && \\\n  xx-verify --static /rootlesskit"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 11370,
          "end": 11374
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 11375,
          "end": 11387
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 11388,
            "end": 11390
          }
        },
        {
          "span": {
            "start": 11391,
            "end": 11409
          },
          "value": "stargz-snapshotter"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 11410,
          "end": 11417
        }
      },
      "arguments": {
        "span": {
          "start": 11418,
          "end": 11466
        },
        "value": "/go/src/github.com/containerd/stargz-snapshotter"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11467,
          "end": 11470
        }
      },
      "arguments": {
        "span": {
          "start": 11471,
          "end": 11497
        },
        "value": "STARGZ_SNAPSHOTTER_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 11498,
          "end": 11501
        }
      },
      "options": [
        {
          "flag_start": 11502,
          "name": {
            "span": {
              "start": 11504,
              "end": 11516
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 11517,
              "end": 11521
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 11522,
              "end": 11604
            },
            "value": "\"https://github.com/containerd/stargz-snapshotter.git#$STARGZ_SNAPSHOTTER_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 11605,
          "end": 11606
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11607,
          "end": 11610
        }
      },
      "arguments": {
        "span": {
          "start": 11611,
          "end": 11625
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11626,
          "end": 11629
        }
      },
      "options": [
        {
          "flag_start": 11630,
          "name": {
            "span": {
              "start": 11632,
              "end": 11637
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11638,
              "end": 11668
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 11673,
            "end": 11834
          },
          "value": "xx-go --wrap && \\\n  mkdir /out && CGO_ENABLED=0 PREFIX=/out/ make && \\\n  xx-verify --static /out/containerd-stargz-grpc && \\\n  xx-verify --static /out/ctr-remote"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 11836,
          "end": 11840
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 11841,
          "end": 11853
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 11854,
            "end": 11856
          }
        },
        {
          "span": {
            "start": 11857,
            "end": 11862
          },
          "value": "nydus"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11863,
          "end": 11866
        }
      },
      "arguments": {
        "span": {
          "start": 11867,
          "end": 11880
        },
        "value": "NYDUS_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11881,
          "end": 11884
        }
      },
      "arguments": {
        "span": {
          "start": 11885,
          "end": 11893
        },
        "value": "TARGETOS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11894,
          "end": 11897
        }
      },
      "arguments": {
        "span": {
          "start": 11898,
          "end": 11908
        },
        "value": "TARGETARCH"
      }
    },
    {
      "kind": "SHELL",
      "shell": {
        "span": {
          "start": 11909,
          "end": 11914
        }
      },
      "arguments": [
        {
          "span": {
            "start": 11917,
            "end": 11926
          },
          "value": "/bin/bash"
        },
        {
          "span": {
            "start": 11930,
            "end": 11932
          },
          "value": "-c"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11935,
          "end": 11938
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 11939,
            "end": 12076
          },
          "value": "wget https://github.com/dragonflyoss/image-service/releases/download/$NYDUS_VERSION/nydus-static-$NYDUS_VERSION-$TARGETOS-$TARGETARCH.tgz"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12077,
          "end": 12080
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 12081,
            "end": 12181
          },
          "value": "mkdir -p /out/nydus-static && tar xzvf nydus-static-$NYDUS_VERSION-$TARGETOS-$TARGETARCH.tgz -C /out"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12183,
          "end": 12187
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12188,
          "end": 12200
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 12201,
            "end": 12203
          }
        },
        {
          "span": {
            "start": 12204,
            "end": 12213
          },
          "value": "gotestsum"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 12214,
          "end": 12217
        }
      },
      "arguments": {
        "span": {
          "start": 12218,
          "end": 12235
        },
        "value": "GOTESTSUM_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 12236,
          "end": 12239
        }
      },
      "arguments": {
        "span": {
          "start": 12240,
          "end": 12254
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12255,
          "end": 12258
        }
      },
      "options": [
        {
          "flag_start": 12259,
          "name": {
            "span": {
              "start": 12261,
              "end": 12266
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12267,
              "end": 12297
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 12303,
            "end": 12303
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 12304,
            "end": 12644
          },
          "expand": true,
          "value": "  set -ex\n  xx-go install \"gotest.tools/gotestsum@${GOTESTSUM_VERSION}\"\n  xx-go install \"github.com/wadey/gocovmerge@latest\"\n  mkdir /out\n  if ! xx-info is-cross; then\n    /go/bin/gotestsum --version\n    mv /go/bin/gotestsum /out\n    mv /go/bin/gocovmerge /out\n  else\n    mv /go/bin/*/gotestsum* /out\n    mv /go/bin/*/gocovmerge* /out\n  fi\n"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 12648,
          "end": 12652
        }
      },
      "options": [
        {
          "flag_start": 12653,
          "name": {
            "span": {
              "start": 12655,
              "end": 12660
            },
            "value": "chmod"
          },
          "value": {
            "span": {
              "start": 12661,
              "end": 12664
            },
            "value": "755"
          }
        }
      ],
      "src": [
        {
          "here_doc": {
            "span": {
              "start": 12696,
              "end": 13269
            },
            "expand": false,
            "value": "#!/bin/sh\nset -x\nif [ -z \"$GO_TEST_COVERPROFILE\" ]; then\n  exec gotestsum \"$@\"\nfi\ncoverdir=\"$(dirname \"$GO_TEST_COVERPROFILE\")\"\nmkdir -p \"$coverdir/helpers\"\ngotestsum \"$@\" \"-coverprofile=$GO_TEST_COVERPROFILE\"\necode=$?\ngo tool covdata textfmt -i=$coverdir/helpers -o=$coverdir/helpers-report.txt\ngocovmerge \"$coverdir/helpers-report.txt\" \"$GO_TEST_COVERPROFILE\" > \"$coverdir/merged-report.txt\"\nmv \"$coverdir/merged-report.txt\" \"$GO_TEST_COVERPROFILE\"\nrm \"$coverdir/helpers-report.txt\"\nfor f in \"$coverdir/helpers\"/*; do\n  rm \"$f\"\ndone\nrmdir \"$coverdir/helpers\"\nexit $ecode\n"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 12673,
          "end": 12695
        },
        "value": "/out/gotestsumandcover"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13318,
          "end": 13322
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13323,
          "end": 13335
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 13336,
            "end": 13338
          }
        },
        {
          "span": {
            "start": 13339,
            "end": 13342
          },
          "value": "dlv"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 13343,
          "end": 13346
        }
      },
      "arguments": {
        "span": {
          "start": 13347,
          "end": 13360
        },
        "value": "DELVE_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 13361,
          "end": 13364
        }
      },
      "arguments": {
        "span": {
          "start": 13365,
          "end": 13379
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13380,
          "end": 13383
        }
      },
      "options": [
        {
          "flag_start": 13384,
          "name": {
            "span": {
              "start": 13386,
              "end": 13391
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13392,
              "end": 13424
            },
            "value": "target=/root/.cache,type=cache"
          }
        },
        {
          "flag_start": 13428,
          "name": {
            "span": {
              "start": 13430,
              "end": 13435
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13436,
              "end": 13465
            },
            "value": "target=/go/pkg/mod,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 13471,
            "end": 13471
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 13472,
            "end": 13871
          },
          "expand": true,
          "value": "  set -ex\n  mkdir /out\n  if [ \"$(xx-info os)\" = \"freebsd\" ]; then\n    echo \"WARN: dlv requires cgo enabled on FreeBSD, skipping: https://github.com/moby/buildkit/pull/5497#issuecomment-2462031339\"\n    exit 0\n  fi\n  xx-go install \"github.com/go-delve/delve/cmd/dlv@${DELVE_VERSION}\"\n  if ! xx-info is-cross; then\n    /go/bin/dlv version\n    mv /go/bin/dlv /out\n  else\n    mv /go/bin/*/dlv* /out\n  fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13876,
          "end": 13880
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13881,
          "end": 13896
        },
        "value": "buildkit-export"
      },
      "as_": [
        {
          "span": {
            "start": 13897,
            "end": 13899
          }
        },
        {
          "span": {
            "start": 13900,
            "end": 13914
          },
          "value": "buildkit-linux"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 13915,
          "end": 13919
        }
      },
      "options": [
        {
          "flag_start": 13920,
          "name": {
            "span": {
              "start": 13922,
              "end": 13926
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 13927,
          "name": {
            "span": {
              "start": 13929,
              "end": 13933
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 13934,
              "end": 13942
            },
            "value": "binaries"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 13943,
              "end": 13944
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 13945,
          "end": 13954
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 13955,
          "end": 13958
        }
      },
      "arguments": {
        "span": {
          "start": 13959,
          "end": 13989
        },
        "value": "BUILDKIT_SETUP_CGROUPV2_ROOT=1"
      }
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 13990,
          "end": 14000
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 14001,
            "end": 14014
          },
          "value": [
            {
              "span": {
                "start": 14003,
                "end": 14012
              },
              "value": "buildkitd"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14016,
          "end": 14020
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14021,
          "end": 14035
        },
        "value": "buildkit-linux"
      },
      "as_": [
        {
          "span": {
            "start": 14036,
            "end": 14038
          }
        },
        {
          "span": {
            "start": 14039,
            "end": 14059
          },
          "value": "buildkit-linux-debug"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14060,
          "end": 14064
        }
      },
      "options": [
        {
          "flag_start": 14065,
          "name": {
            "span": {
              "start": 14067,
              "end": 14071
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14072,
          "name": {
            "span": {
              "start": 14074,
              "end": 14078
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14079,
              "end": 14082
            },
            "value": "dlv"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14083,
              "end": 14091
            },
            "value": "/out/dlv"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14092,
          "end": 14104
        },
        "value": "/usr/bin/dlv"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14105,
          "end": 14109
        }
      },
      "options": [
        {
          "flag_start": 14110,
          "name": {
            "span": {
              "start": 14112,
              "end": 14116
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14117,
          "name": {
            "span": {
              "start": 14119,
              "end": 14124
            },
            "value": "chmod"
          },
          "value": {
            "span": {
              "start": 14125,
              "end": 14128
            },
            "value": "755"
          }
        }
      ],
      "src": [
        {
          "here_doc": {
            "span": {
              "start": 14157,
              "end": 14335
            },
            "expand": true,
            "value": "#!/bin/sh\nexec dlv exec /usr/bin/buildkitd \\\\\n  --api-version=2 \\\\\n  -l 0.0.0.0:\\${DELVE_PORT:-5000} \\\\\n  --headless=true \\\\\n  --accept-multiclient \\\\\n  --continue \\\\\n  -- \"\\$@\"\n"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14135,
          "end": 14156
        },
        "value": "/docker-entrypoint.sh"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 14339,
          "end": 14342
        }
      },
      "arguments": {
        "span": {
          "start": 14343,
          "end": 14358
        },
        "value": "DELVE_PORT=5000"
      }
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 14359,
          "end": 14369
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 14370,
            "end": 14395
          },
          "value": [
            {
              "span": {
                "start": 14372,
                "end": 14393
              },
              "value": "/docker-entrypoint.sh"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14397,
          "end": 14401
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14402,
          "end": 14410
        },
        "value": "binaries"
      },
      "as_": [
        {
          "span": {
            "start": 14411,
            "end": 14413
          }
        },
        {
          "span": {
            "start": 14414,
            "end": 14429
          },
          "value": "buildkit-darwin"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14431,
          "end": 14435
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14436,
          "end": 14444
        },
        "value": "binaries"
      },
      "as_": [
        {
          "span": {
            "start": 14445,
            "end": 14447
          }
        },
        {
          "span": {
            "start": 14448,
            "end": 14464
          },
          "value": "buildkit-freebsd"
        }
      ]
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 14465,
          "end": 14475
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 14476,
            "end": 14490
          },
          "value": [
            {
              "span": {
                "start": 14478,
                "end": 14488
              },
              "value": "/buildkitd"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14492,
          "end": 14496
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14497,
          "end": 14505
        },
        "value": "binaries"
      },
      "as_": [
        {
          "span": {
            "start": 14506,
            "end": 14508
          }
        },
        {
          "span": {
            "start": 14509,
            "end": 14525
          },
          "value": "buildkit-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14527,
          "end": 14531
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14532,
          "end": 14539
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 14540,
            "end": 14542
          }
        },
        {
          "span": {
            "start": 14543,
            "end": 14560
          },
          "value": "binaries-for-test"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14561,
          "end": 14565
        }
      },
      "options": [
        {
          "flag_start": 14566,
          "name": {
            "span": {
              "start": 14568,
              "end": 14572
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14573,
          "name": {
            "span": {
              "start": 14575,
              "end": 14579
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14580,
              "end": 14589
            },
            "value": "gotestsum"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14590,
              "end": 14594
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14595,
          "end": 14596
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14597,
          "end": 14601
        }
      },
      "options": [
        {
          "flag_start": 14602,
          "name": {
            "span": {
              "start": 14604,
              "end": 14608
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14609,
          "name": {
            "span": {
              "start": 14611,
              "end": 14615
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14616,
              "end": 14619
            },
            "value": "dlv"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14620,
              "end": 14624
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14625,
          "end": 14626
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14627,
          "end": 14631
        }
      },
      "options": [
        {
          "flag_start": 14632,
          "name": {
            "span": {
              "start": 14634,
              "end": 14638
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14639,
          "name": {
            "span": {
              "start": 14641,
              "end": 14645
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14646,
              "end": 14654
            },
            "value": "registry"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14655,
              "end": 14659
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14660,
          "end": 14661
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14662,
          "end": 14666
        }
      },
      "options": [
        {
          "flag_start": 14667,
          "name": {
            "span": {
              "start": 14669,
              "end": 14673
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14674,
          "name": {
            "span": {
              "start": 14676,
              "end": 14680
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14681,
              "end": 14691
            },
            "value": "containerd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14692,
              "end": 14696
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14697,
          "end": 14698
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14699,
          "end": 14703
        }
      },
      "options": [
        {
          "flag_start": 14704,
          "name": {
            "span": {
              "start": 14706,
              "end": 14710
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14711,
          "name": {
            "span": {
              "start": 14713,
              "end": 14717
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14718,
              "end": 14726
            },
            "value": "binaries"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14727,
              "end": 14728
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14729,
          "end": 14730
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14732,
          "end": 14736
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14737,
          "end": 14750
        },
        "value": "buildkit-base"
      },
      "as_": [
        {
          "span": {
            "start": 14751,
            "end": 14753
          }
        },
        {
          "span": {
            "start": 14754,
            "end": 14776
          },
          "value": "integration-tests-base"
        }
      ]
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 14777,
          "end": 14780
        }
      },
      "arguments": {
        "span": {
          "start": 14781,
          "end": 14829
        },
        "value": "BUILDKIT_INTEGRATION_ROOTLESS_IDPAIR=\"1000:1000\""
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14830,
          "end": 14833
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 14834,
            "end": 15295
          },
          "value": "apk add --no-cache shadow shadow-uidmap sudo vim iptables ip6tables dnsmasq fuse curl git-daemon openssh-client slirp4netns iproute2 \\\n  && useradd --create-home --home-dir /home/user --uid 1000 -s /bin/sh user \\\n  && echo \"XDG_RUNTIME_DIR=/run/user/1000; export XDG_RUNTIME_DIR\" >> /home/user/.profile \\\n  && mkdir -m 0700 -p /run/user/1000 \\\n  && chown -R user /run/user/1000 /home/user \\\n  && ln -s /sbin/iptables-legacy /usr/bin/iptables \\\n  && xx-go --wrap"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 15296,
          "end": 15299
        }
      },
      "arguments": {
        "span": {
          "start": 15300,
          "end": 15315
        },
        "value": "NERDCTL_VERSION"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15316,
          "end": 15319
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 15320,
            "end": 15523
          },
          "value": "curl -fsSL https://raw.githubusercontent.com/containerd/nerdctl/$NERDCTL_VERSION/extras/rootless/containerd-rootless.sh > /usr/bin/containerd-rootless.sh \\\n  && chmod 0755 /usr/bin/containerd-rootless.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 15524,
          "end": 15527
        }
      },
      "arguments": {
        "span": {
          "start": 15528,
          "end": 15543
        },
        "value": "AZURITE_VERSION"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15544,
          "end": 15547
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 15548,
            "end": 15626
          },
          "value": "apk add --no-cache nodejs npm \\\n  && npm install -g azurite@${AZURITE_VERSION}"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15762,
          "end": 15765
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 15766,
            "end": 15902
          },
          "value": "curl -fsSL https://raw.githubusercontent.com/moby/moby/v25.0.1/hack/dind > /docker-entrypoint.sh \\\n  && chmod 0755 /docker-entrypoint.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 15903,
          "end": 15913
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 15914,
            "end": 15939
          },
          "value": [
            {
              "span": {
                "start": 15916,
                "end": 15937
              },
              "value": "/docker-entrypoint.sh"
            }
          ]
        }
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16017,
          "end": 16020
        }
      },
      "arguments": {
        "span": {
          "start": 16021,
          "end": 16144
        },
        "value": "BUILDKIT_INTEGRATION_CONTAINERD_EXTRA=\"containerd-2.0=/opt/containerd-alt-20/bin,containerd-1.7=/opt/containerd-alt-17/bin\""
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16145,
          "end": 16148
        }
      },
      "arguments": {
        "span": {
          "start": 16149,
          "end": 16188
        },
        "value": "BUILDKIT_INTEGRATION_SNAPSHOTTER=stargz"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16189,
          "end": 16192
        }
      },
      "arguments": {
        "span": {
          "start": 16193,
          "end": 16223
        },
        "value": "BUILDKIT_SETUP_CGROUPV2_ROOT=1"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16224,
          "end": 16227
        }
      },
      "arguments": {
        "span": {
          "start": 16228,
          "end": 16241
        },
        "value": "CGO_ENABLED=0"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16242,
          "end": 16245
        }
      },
      "arguments": {
        "span": {
          "start": 16246,
          "end": 16279
        },
        "value": "GOTESTSUM_FORMAT=standard-verbose"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16280,
          "end": 16284
        }
      },
      "options": [
        {
          "flag_start": 16285,
          "name": {
            "span": {
              "start": 16287,
              "end": 16291
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16292,
          "name": {
            "span": {
              "start": 16294,
              "end": 16298
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16299,
              "end": 16308
            },
            "value": "gotestsum"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16309,
              "end": 16313
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16314,
          "end": 16323
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16324,
          "end": 16328
        }
      },
      "options": [
        {
          "flag_start": 16329,
          "name": {
            "span": {
              "start": 16331,
              "end": 16335
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16336,
          "name": {
            "span": {
              "start": 16338,
              "end": 16342
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16343,
              "end": 16348
            },
            "value": "minio"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16349,
              "end": 16363
            },
            "value": "/opt/bin/minio"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16364,
          "end": 16373
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16374,
          "end": 16378
        }
      },
      "options": [
        {
          "flag_start": 16379,
          "name": {
            "span": {
              "start": 16381,
              "end": 16385
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16386,
          "name": {
            "span": {
              "start": 16388,
              "end": 16392
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16393,
              "end": 16401
            },
            "value": "minio-mc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16402,
              "end": 16413
            },
            "value": "/usr/bin/mc"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16414,
          "end": 16423
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16424,
          "end": 16428
        }
      },
      "options": [
        {
          "flag_start": 16429,
          "name": {
            "span": {
              "start": 16431,
              "end": 16435
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16436,
          "name": {
            "span": {
              "start": 16438,
              "end": 16442
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16443,
              "end": 16448
            },
            "value": "nydus"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16449,
              "end": 16468
            },
            "value": "/out/nydus-static/*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16469,
          "end": 16478
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16479,
          "end": 16483
        }
      },
      "options": [
        {
          "flag_start": 16484,
          "name": {
            "span": {
              "start": 16486,
              "end": 16490
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16491,
          "name": {
            "span": {
              "start": 16493,
              "end": 16497
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16498,
              "end": 16516
            },
            "value": "stargz-snapshotter"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16517,
              "end": 16523
            },
            "value": "/out/*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16524,
          "end": 16533
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16534,
          "end": 16538
        }
      },
      "options": [
        {
          "flag_start": 16539,
          "name": {
            "span": {
              "start": 16541,
              "end": 16545
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16546,
          "name": {
            "span": {
              "start": 16548,
              "end": 16552
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16553,
              "end": 16564
            },
            "value": "rootlesskit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16565,
              "end": 16577
            },
            "value": "/rootlesskit"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16578,
          "end": 16587
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16588,
          "end": 16592
        }
      },
      "options": [
        {
          "flag_start": 16593,
          "name": {
            "span": {
              "start": 16595,
              "end": 16599
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16600,
          "name": {
            "span": {
              "start": 16602,
              "end": 16606
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16607,
              "end": 16624
            },
            "value": "containerd-alt-20"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16625,
              "end": 16641
            },
            "value": "/out/containerd*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16642,
          "end": 16669
        },
        "value": "/opt/containerd-alt-20/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16670,
          "end": 16674
        }
      },
      "options": [
        {
          "flag_start": 16675,
          "name": {
            "span": {
              "start": 16677,
              "end": 16681
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16682,
          "name": {
            "span": {
              "start": 16684,
              "end": 16688
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16689,
              "end": 16706
            },
            "value": "containerd-alt-17"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16707,
              "end": 16723
            },
            "value": "/out/containerd*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16724,
          "end": 16751
        },
        "value": "/opt/containerd-alt-17/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16752,
          "end": 16756
        }
      },
      "options": [
        {
          "flag_start": 16757,
          "name": {
            "span": {
              "start": 16759,
              "end": 16763
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16764,
          "name": {
            "span": {
              "start": 16766,
              "end": 16770
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16771,
              "end": 16779
            },
            "value": "registry"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16780,
              "end": 16784
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16785,
          "end": 16794
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16795,
          "end": 16799
        }
      },
      "options": [
        {
          "flag_start": 16800,
          "name": {
            "span": {
              "start": 16802,
              "end": 16806
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16807,
          "name": {
            "span": {
              "start": 16809,
              "end": 16813
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16814,
              "end": 16818
            },
            "value": "runc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16819,
              "end": 16832
            },
            "value": "/usr/bin/runc"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16833,
          "end": 16842
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16843,
          "end": 16847
        }
      },
      "options": [
        {
          "flag_start": 16848,
          "name": {
            "span": {
              "start": 16850,
              "end": 16854
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16855,
          "name": {
            "span": {
              "start": 16857,
              "end": 16861
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16862,
              "end": 16872
            },
            "value": "containerd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16873,
              "end": 16889
            },
            "value": "/out/containerd*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16890,
          "end": 16899
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16900,
          "end": 16904
        }
      },
      "options": [
        {
          "flag_start": 16905,
          "name": {
            "span": {
              "start": 16907,
              "end": 16911
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16912,
          "name": {
            "span": {
              "start": 16914,
              "end": 16918
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16919,
              "end": 16930
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16931,
              "end": 16950
            },
            "value": "/opt/cni/bin/bridge"
          }
        },
        {
          "path": {
            "span": {
              "start": 16951,
              "end": 16974
            },
            "value": "/opt/cni/bin/host-local"
          }
        },
        {
          "path": {
            "span": {
              "start": 16975,
              "end": 16996
            },
            "value": "/opt/cni/bin/loopback"
          }
        },
        {
          "path": {
            "span": {
              "start": 16997,
              "end": 17018
            },
            "value": "/opt/cni/bin/firewall"
          }
        },
        {
          "path": {
            "span": {
              "start": 17019,
              "end": 17039
            },
            "value": "/opt/cni/bin/dnsname"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17040,
          "end": 17053
        },
        "value": "/opt/cni/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17054,
          "end": 17058
        }
      },
      "options": [
        {
          "flag_start": 17059,
          "name": {
            "span": {
              "start": 17061,
              "end": 17065
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 17066,
              "end": 17088
            },
            "value": "hack/fixtures/cni.json"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17089,
          "end": 17111
        },
        "value": "/etc/buildkit/cni.json"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17112,
          "end": 17116
        }
      },
      "options": [
        {
          "flag_start": 17117,
          "name": {
            "span": {
              "start": 17119,
              "end": 17123
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 17124,
              "end": 17154
            },
            "value": "hack/fixtures/dns-cni.conflist"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17155,
          "end": 17185
        },
        "value": "/etc/buildkit/dns-cni.conflist"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17186,
          "end": 17190
        }
      },
      "options": [
        {
          "flag_start": 17191,
          "name": {
            "span": {
              "start": 17193,
              "end": 17197
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 17198,
          "name": {
            "span": {
              "start": 17200,
              "end": 17204
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 17205,
              "end": 17213
            },
            "value": "binaries"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 17214,
              "end": 17215
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17216,
          "end": 17225
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17296,
          "end": 17300
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17301,
          "end": 17323
        },
        "value": "integration-tests-base"
      },
      "as_": [
        {
          "span": {
            "start": 17324,
            "end": 17326
          }
        },
        {
          "span": {
            "start": 17327,
            "end": 17344
          },
          "value": "integration-tests"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17345,
          "end": 17349
        }
      },
      "options": [],
      "src": [
        {
          "path": {
            "span": {
              "start": 17350,
              "end": 17351
            },
            "value": "."
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17352,
          "end": 17353
        },
        "value": "."
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 17354,
          "end": 17357
        }
      },
      "arguments": {
        "span": {
          "start": 17358,
          "end": 17456
        },
        "value": "BUILDKIT_RUN_NETWORK_INTEGRATION_TESTS=1 BUILDKIT_CNI_INIT_LOCK_PATH=/run/buildkit_cni_bridge.lock"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17458,
          "end": 17462
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17463,
          "end": 17480
        },
        "value": "integration-tests"
      },
      "as_": [
        {
          "span": {
            "start": 17481,
            "end": 17483
          }
        },
        {
          "span": {
            "start": 17484,
            "end": 17491
          },
          "value": "dev-env"
        }
      ]
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 17492,
          "end": 17498
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 17499,
              "end": 17516
            },
            "value": "/var/lib/buildkit"
          }
        ]
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17574,
          "end": 17578
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17579,
          "end": 17603
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 17604,
            "end": 17606
          }
        },
        {
          "span": {
            "start": 17607,
            "end": 17615
          },
          "value": "rootless"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17616,
          "end": 17619
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17620,
            "end": 17693
          },
          "value": "apk add --no-cache fuse3 fuse-overlayfs git openssh pigz shadow-uidmap xz"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17694,
          "end": 17697
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17698,
            "end": 17920
          },
          "value": "adduser -D -u 1000 user \\\n  && mkdir -p /run/user/1000 /home/user/.local/tmp /home/user/.local/share/buildkit \\\n  && chown -R user /run/user/1000 /home/user \\\n  && echo user:100000:65536 | tee /etc/subuid | tee /etc/subgid"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17921,
          "end": 17925
        }
      },
      "options": [
        {
          "flag_start": 17926,
          "name": {
            "span": {
              "start": 17928,
              "end": 17932
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 17933,
          "name": {
            "span": {
              "start": 17935,
              "end": 17939
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 17940,
              "end": 17951
            },
            "value": "rootlesskit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 17952,
              "end": 17964
            },
            "value": "/rootlesskit"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17965,
          "end": 17974
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17975,
          "end": 17979
        }
      },
      "options": [
        {
          "flag_start": 17980,
          "name": {
            "span": {
              "start": 17982,
              "end": 17986
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 17987,
          "name": {
            "span": {
              "start": 17989,
              "end": 17993
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 17994,
              "end": 18002
            },
            "value": "binaries"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18003,
              "end": 18004
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18005,
          "end": 18014
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18015,
          "end": 18019
        }
      },
      "options": [
        {
          "flag_start": 18020,
          "name": {
            "span": {
              "start": 18022,
              "end": 18026
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18027,
              "end": 18078
            },
            "value": "examples/buildctl-daemonless/buildctl-daemonless.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18079,
          "end": 18088
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "USER",
      "user": {
        "span": {
          "start": 18143,
          "end": 18147
        }
      },
      "arguments": {
        "span": {
          "start": 18148,
          "end": 18157
        },
        "value": "1000:1000"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18158,
          "end": 18161
        }
      },
      "arguments": {
        "span": {
          "start": 18162,
          "end": 18177
        },
        "value": "HOME=/home/user"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18178,
          "end": 18181
        }
      },
      "arguments": {
        "span": {
          "start": 18182,
          "end": 18191
        },
        "value": "USER=user"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18192,
          "end": 18195
        }
      },
      "arguments": {
        "span": {
          "start": 18196,
          "end": 18226
        },
        "value": "XDG_RUNTIME_DIR=/run/user/1000"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18227,
          "end": 18230
        }
      },
      "arguments": {
        "span": {
          "start": 18231,
          "end": 18259
        },
        "value": "TMPDIR=/home/user/.local/tmp"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18260,
          "end": 18263
        }
      },
      "arguments": {
        "span": {
          "start": 18264,
          "end": 18323
        },
        "value": "BUILDKIT_HOST=unix:///run/user/1000/buildkit/buildkitd.sock"
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 18324,
          "end": 18330
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 18331,
              "end": 18363
            },
            "value": "/home/user/.local/share/buildkit"
          }
        ]
      }
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 18364,
          "end": 18374
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 18375,
            "end": 18403
          },
          "value": [
            {
              "span": {
                "start": 18377,
                "end": 18388
              },
              "value": "rootlesskit"
            },
            {
              "span": {
                "start": 18392,
                "end": 18401
              },
              "value": "buildkitd"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18452,
          "end": 18456
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18457,
          "end": 18500
        },
        "value": "buildkit-$TARGETOS${BUILDKIT_DEBUG:+-debug}"
      },
      "as_": [
        {
          "span": {
            "start": 18501,
            "end": 18503
          }
        },
        {
          "span": {
            "start": 18504,
            "end": 18512
          },
          "value": "buildkit"
        }
      ]
    }
  ]
}