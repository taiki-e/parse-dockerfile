{
  "parser_directives": {
    "syntax": {
      "start": 2,
      "value": {
        "span": {
          "start": 9,
          "end": 28
        },
        "value": "docker/dockerfile:1"
      }
    },
    "escape": null,
    "check": null
  },
  "instructions": [
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 30,
          "end": 33
        }
      },
      "arguments": {
        "span": {
          "start": 34,
          "end": 51
        },
        "value": "GO_VERSION=1.24.5"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 52,
          "end": 55
        }
      },
      "arguments": {
        "span": {
          "start": 56,
          "end": 85
        },
        "value": "BASE_DEBIAN_DISTRO=\"bookworm\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 86,
          "end": 89
        }
      },
      "arguments": {
        "span": {
          "start": 90,
          "end": 147
        },
        "value": "GOLANG_IMAGE=\"golang:${GO_VERSION}-${BASE_DEBIAN_DISTRO}\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 148,
          "end": 151
        }
      },
      "arguments": {
        "span": {
          "start": 152,
          "end": 168
        },
        "value": "XX_VERSION=1.6.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 282,
          "end": 285
        }
      },
      "arguments": {
        "span": {
          "start": 286,
          "end": 306
        },
        "value": "VPNKIT_VERSION=0.6.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 387,
          "end": 390
        }
      },
      "arguments": {
        "span": {
          "start": 391,
          "end": 416
        },
        "value": "DOCKERCLI_VERSION=v28.3.2"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 417,
          "end": 420
        }
      },
      "arguments": {
        "span": {
          "start": 421,
          "end": 477
        },
        "value": "DOCKERCLI_REPOSITORY=\"https://github.com/docker/cli.git\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 524,
          "end": 527
        }
      },
      "arguments": {
        "span": {
          "start": 528,
          "end": 596
        },
        "value": "DOCKERCLI_INTEGRATION_REPOSITORY=\"https://github.com/docker/cli.git\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 597,
          "end": 600
        }
      },
      "arguments": {
        "span": {
          "start": 601,
          "end": 642
        },
        "value": "DOCKERCLI_INTEGRATION_VERSION=v18.06.3-ce"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 719,
          "end": 722
        }
      },
      "arguments": {
        "span": {
          "start": 723,
          "end": 744
        },
        "value": "BUILDX_VERSION=0.25.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 823,
          "end": 826
        }
      },
      "arguments": {
        "span": {
          "start": 827,
          "end": 850
        },
        "value": "COMPOSE_VERSION=v2.38.2"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 852,
          "end": 855
        }
      },
      "arguments": {
        "span": {
          "start": 856,
          "end": 871
        },
        "value": "SYSTEMD=\"false\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 872,
          "end": 875
        }
      },
      "arguments": {
        "span": {
          "start": 876,
          "end": 893
        },
        "value": "FIREWALLD=\"false\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 894,
          "end": 897
        }
      },
      "arguments": {
        "span": {
          "start": 898,
          "end": 913
        },
        "value": "DOCKER_STATIC=1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1183,
          "end": 1186
        }
      },
      "arguments": {
        "span": {
          "start": 1187,
          "end": 1209
        },
        "value": "REGISTRY_VERSION=3.0.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1679,
          "end": 1682
        }
      },
      "arguments": {
        "span": {
          "start": 1683,
          "end": 1824
        },
        "value": "DELVE_SUPPORTED=${TARGETPLATFORM#linux/amd64} DELVE_SUPPORTED=${DELVE_SUPPORTED#linux/arm64} DELVE_SUPPORTED=${DELVE_SUPPORTED#linux/ppc64le}"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1825,
          "end": 1828
        }
      },
      "arguments": {
        "span": {
          "start": 1829,
          "end": 1878
        },
        "value": "DELVE_SUPPORTED=${DELVE_SUPPORTED:+\"unsupported\"}"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1879,
          "end": 1882
        }
      },
      "arguments": {
        "span": {
          "start": 1883,
          "end": 1930
        },
        "value": "DELVE_SUPPORTED=${DELVE_SUPPORTED:-\"supported\"}"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 1959,
          "end": 1963
        }
      },
      "options": [
        {
          "flag_start": 1964,
          "name": {
            "span": {
              "start": 1966,
              "end": 1974
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 1975,
              "end": 1989
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 1990,
          "end": 2017
        },
        "value": "tonistiigi/xx:${XX_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 2018,
            "end": 2020
          }
        },
        {
          "span": {
            "start": 2021,
            "end": 2023
          },
          "value": "xx"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2120,
          "end": 2124
        }
      },
      "options": [
        {
          "flag_start": 2125,
          "name": {
            "span": {
              "start": 2127,
              "end": 2135
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 2136,
              "end": 2150
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 2151,
          "end": 2158
        },
        "value": "busybox"
      },
      "as_": [
        {
          "span": {
            "start": 2159,
            "end": 2161
          }
        },
        {
          "span": {
            "start": 2162,
            "end": 2173
          },
          "value": "build-dummy"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2174,
          "end": 2177
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2178,
            "end": 2193
          },
          "value": "mkdir -p /build"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2194,
          "end": 2198
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 2199,
          "end": 2206
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 2207,
            "end": 2209
          }
        },
        {
          "span": {
            "start": 2210,
            "end": 2222
          },
          "value": "binary-dummy"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 2223,
          "end": 2227
        }
      },
      "options": [
        {
          "flag_start": 2228,
          "name": {
            "span": {
              "start": 2230,
              "end": 2234
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 2235,
              "end": 2246
            },
            "value": "build-dummy"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 2247,
              "end": 2253
            },
            "value": "/build"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 2254,
          "end": 2260
        },
        "value": "/build"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2269,
          "end": 2273
        }
      },
      "options": [
        {
          "flag_start": 2274,
          "name": {
            "span": {
              "start": 2276,
              "end": 2284
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 2285,
              "end": 2299
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 2300,
          "end": 2315
        },
        "value": "${GOLANG_IMAGE}"
      },
      "as_": [
        {
          "span": {
            "start": 2316,
            "end": 2318
          }
        },
        {
          "span": {
            "start": 2319,
            "end": 2323
          },
          "value": "base"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 2324,
          "end": 2328
        }
      },
      "options": [
        {
          "flag_start": 2329,
          "name": {
            "span": {
              "start": 2331,
              "end": 2335
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 2336,
              "end": 2338
            },
            "value": "xx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 2339,
              "end": 2340
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 2341,
          "end": 2342
        },
        "value": "/"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2537,
          "end": 2540
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2541,
            "end": 2644
          },
          "value": "go telemetry off && [ \"$(go telemetry)\" = \"off\" ] || { echo \"Failed to disable Go telemetry\"; exit 1; }"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2645,
          "end": 2648
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2649,
            "end": 2739
          },
          "value": "echo 'Binary::apt::APT::Keep-Downloaded-Packages \"true\";' > /etc/apt/apt.conf.d/keep-cache"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2740,
          "end": 2743
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2744,
            "end": 2809
          },
          "value": "apt-get update && apt-get install --no-install-recommends -y file"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 2810,
          "end": 2813
        }
      },
      "arguments": {
        "span": {
          "start": 2814,
          "end": 2829
        },
        "value": "GO111MODULE=off"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 2830,
          "end": 2833
        }
      },
      "arguments": {
        "span": {
          "start": 2834,
          "end": 2851
        },
        "value": "GOTOOLCHAIN=local"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2853,
          "end": 2857
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 2858,
          "end": 2862
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 2863,
            "end": 2865
          }
        },
        {
          "span": {
            "start": 2866,
            "end": 2870
          },
          "value": "criu"
        }
      ]
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 2871,
          "end": 2874
        }
      },
      "options": [
        {
          "flag_start": 2875,
          "name": {
            "span": {
              "start": 2877,
              "end": 2882
            },
            "value": "chmod"
          },
          "value": {
            "span": {
              "start": 2883,
              "end": 2887
            },
            "value": "0644"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 2888,
              "end": 2971
            },
            "value": "https://download.opensuse.org/repositories/devel:/tools:/criu/Debian_11/Release.key"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 2972,
          "end": 3007
        },
        "value": "/etc/apt/trusted.gpg.d/criu.gpg.asc"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3008,
          "end": 3011
        }
      },
      "options": [
        {
          "flag_start": 3012,
          "name": {
            "span": {
              "start": 3014,
              "end": 3019
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3020,
              "end": 3085
            },
            "value": "type=cache,sharing=locked,id=moby-criu-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 3092,
          "name": {
            "span": {
              "start": 3094,
              "end": 3099
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3100,
              "end": 3169
            },
            "value": "type=cache,sharing=locked,id=moby-criu-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 3180,
            "end": 3476
          },
          "value": "echo 'deb https://download.opensuse.org/repositories/devel:/tools:/criu/Debian_12/ /' > /etc/apt/sources.list.d/criu.list \\\n        && apt-get update \\\n        && apt-get install -y --no-install-recommends criu \\\n        && install -D /usr/sbin/criu /build/criu \\\n        && /build/criu --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 3489,
          "end": 3493
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 3494,
          "end": 3537
        },
        "value": "distribution/distribution:$REGISTRY_VERSION"
      },
      "as_": [
        {
          "span": {
            "start": 3538,
            "end": 3540
          }
        },
        {
          "span": {
            "start": 3541,
            "end": 3549
          },
          "value": "registry"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3550,
          "end": 3553
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 3554,
            "end": 3602
          },
          "value": "mkdir /build && mv /bin/registry /build/registry"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 3617,
          "end": 3621
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 3622,
          "end": 3626
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 3627,
            "end": 3629
          }
        },
        {
          "span": {
            "start": 3630,
            "end": 3641
          },
          "value": "swagger-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 3642,
          "end": 3649
        }
      },
      "arguments": {
        "span": {
          "start": 3650,
          "end": 3666
        },
        "value": "/usr/src/swagger"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3828,
          "end": 3831
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 3832,
            "end": 3913
          },
          "value": "git init . && git remote add origin \"https://github.com/kolyshkin/go-swagger.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 4087,
          "end": 4090
        }
      },
      "arguments": {
        "span": {
          "start": 4091,
          "end": 4149
        },
        "value": "GO_SWAGGER_COMMIT=c56166c036004ba7a3a321e5951ba472b9ae298c"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 4150,
          "end": 4153
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 4154,
            "end": 4236
          },
          "value": "git fetch -q --depth 1 origin \"${GO_SWAGGER_COMMIT}\" && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 4238,
          "end": 4242
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 4243,
          "end": 4247
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 4248,
            "end": 4250
          }
        },
        {
          "span": {
            "start": 4251,
            "end": 4258
          },
          "value": "swagger"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 4259,
          "end": 4266
        }
      },
      "arguments": {
        "span": {
          "start": 4267,
          "end": 4307
        },
        "value": "/go/src/github.com/go-swagger/go-swagger"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 4308,
          "end": 4311
        }
      },
      "arguments": {
        "span": {
          "start": 4312,
          "end": 4326
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 4327,
          "end": 4330
        }
      },
      "options": [
        {
          "flag_start": 4331,
          "name": {
            "span": {
              "start": 4333,
              "end": 4338
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4339,
              "end": 4379
            },
            "value": "from=swagger-src,src=/usr/src/swagger,rw"
          }
        },
        {
          "flag_start": 4386,
          "name": {
            "span": {
              "start": 4388,
              "end": 4393
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4394,
              "end": 4466
            },
            "value": "type=cache,target=/root/.cache/go-build,id=swagger-build-$TARGETPLATFORM"
          }
        },
        {
          "flag_start": 4473,
          "name": {
            "span": {
              "start": 4475,
              "end": 4480
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4481,
              "end": 4510
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        },
        {
          "flag_start": 4517,
          "name": {
            "span": {
              "start": 4519,
              "end": 4524
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4525,
              "end": 4551
            },
            "value": "type=tmpfs,target=/go/src/"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 4557,
            "end": 4557
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 4558,
            "end": 4640
          },
          "expand": true,
          "value": "  set -e\n  xx-go build -o /build/swagger ./cmd/swagger\n  xx-verify /build/swagger\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 4784,
          "end": 4788
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 4789,
          "end": 4817
        },
        "value": "debian:${BASE_DEBIAN_DISTRO}"
      },
      "as_": [
        {
          "span": {
            "start": 4818,
            "end": 4820
          }
        },
        {
          "span": {
            "start": 4821,
            "end": 4834
          },
          "value": "frozen-images"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 4835,
          "end": 4838
        }
      },
      "options": [
        {
          "flag_start": 4839,
          "name": {
            "span": {
              "start": 4841,
              "end": 4846
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4847,
              "end": 4921
            },
            "value": "type=cache,sharing=locked,id=moby-frozen-images-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 4928,
          "name": {
            "span": {
              "start": 4930,
              "end": 4935
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4936,
              "end": 5014
            },
            "value": "type=cache,sharing=locked,id=moby-frozen-images-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 5024,
            "end": 5147
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n           ca-certificates \\\n           curl \\\n           jq"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 5237,
          "end": 5241
        }
      },
      "options": [],
      "src": [
        {
          "path": {
            "span": {
              "start": 5242,
              "end": 5277
            },
            "value": "contrib/download-frozen-image-v2.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 5278,
          "end": 5279
        },
        "value": "/"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5280,
          "end": 5283
        }
      },
      "arguments": {
        "span": {
          "start": 5284,
          "end": 5294
        },
        "value": "TARGETARCH"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5295,
          "end": 5298
        }
      },
      "arguments": {
        "span": {
          "start": 5299,
          "end": 5312
        },
        "value": "TARGETVARIANT"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5313,
          "end": 5316
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 5317,
            "end": 6058
          },
          "value": "/download-frozen-image-v2.sh /build \\\n        busybox:latest@sha256:95cf004f559831017cdf4628aaf1bb30133677be8702a8c5f2994629f637a209 \\\n        busybox:glibc@sha256:1f81263701cddf6402afe9f33fca0266d9fff379e59b1748f33d3072da71ee85 \\\n        debian:bookworm-slim@sha256:2bc5c236e9b262645a323e9088dfa3bb1ecb16cc75811daf40a23a824d665be9 \\\n        hello-world:latest@sha256:d58e752213a51785838f9eed2b7a498ffa1cb3aa7f946dda11af39286c3db9a9 \\\n        arm32v7/hello-world:latest@sha256:50b8560ad574c779908da71f7ce370c0a2471c098d44d1c8f6b513c5a55eeeb1 \\\n        hello-world:amd64@sha256:90659bf80b44ce6be8234e6ff90a1ac34acbeb826903b02cfa0da11c82cbc042 \\\n        hello-world:arm64@sha256:963612c5503f3f1674f315c67089dee577d8cc6afc18565e0b4183ae355fb343"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6068,
          "end": 6072
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6073,
          "end": 6077
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 6078,
            "end": 6080
          }
        },
        {
          "span": {
            "start": 6081,
            "end": 6090
          },
          "value": "delve-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 6091,
          "end": 6098
        }
      },
      "arguments": {
        "span": {
          "start": 6099,
          "end": 6113
        },
        "value": "/usr/src/delve"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6114,
          "end": 6117
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 6118,
            "end": 6193
          },
          "value": "git init . && git remote add origin \"https://github.com/go-delve/delve.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 6399,
          "end": 6402
        }
      },
      "arguments": {
        "span": {
          "start": 6403,
          "end": 6424
        },
        "value": "DELVE_VERSION=v1.25.0"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6425,
          "end": 6428
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 6429,
            "end": 6532
          },
          "value": "git fetch -q --depth 1 origin \"${DELVE_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6534,
          "end": 6538
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6539,
          "end": 6543
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 6544,
            "end": 6546
          }
        },
        {
          "span": {
            "start": 6547,
            "end": 6562
          },
          "value": "delve-supported"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 6563,
          "end": 6570
        }
      },
      "arguments": {
        "span": {
          "start": 6571,
          "end": 6585
        },
        "value": "/usr/src/delve"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 6586,
          "end": 6589
        }
      },
      "arguments": {
        "span": {
          "start": 6590,
          "end": 6604
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6605,
          "end": 6608
        }
      },
      "options": [
        {
          "flag_start": 6609,
          "name": {
            "span": {
              "start": 6611,
              "end": 6616
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6617,
              "end": 6653
            },
            "value": "from=delve-src,src=/usr/src/delve,rw"
          }
        },
        {
          "flag_start": 6660,
          "name": {
            "span": {
              "start": 6662,
              "end": 6667
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6668,
              "end": 6738
            },
            "value": "type=cache,target=/root/.cache/go-build,id=delve-build-$TARGETPLATFORM"
          }
        },
        {
          "flag_start": 6745,
          "name": {
            "span": {
              "start": 6747,
              "end": 6752
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6753,
              "end": 6782
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 6788,
            "end": 6788
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 6789,
            "end": 6874
          },
          "expand": true,
          "value": "  set -e\n  GO111MODULE=on xx-go build -o /build/dlv ./cmd/dlv\n  xx-verify /build/dlv\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6879,
          "end": 6883
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6884,
          "end": 6896
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 6897,
            "end": 6899
          }
        },
        {
          "span": {
            "start": 6900,
            "end": 6917
          },
          "value": "delve-unsupported"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6918,
          "end": 6922
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6923,
          "end": 6947
        },
        "value": "delve-${DELVE_SUPPORTED}"
      },
      "as_": [
        {
          "span": {
            "start": 6948,
            "end": 6950
          }
        },
        {
          "span": {
            "start": 6951,
            "end": 6956
          },
          "value": "delve"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6958,
          "end": 6962
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6963,
          "end": 6967
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 6968,
            "end": 6970
          }
        },
        {
          "span": {
            "start": 6971,
            "end": 6979
          },
          "value": "gowinres"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7030,
          "end": 7033
        }
      },
      "arguments": {
        "span": {
          "start": 7034,
          "end": 7057
        },
        "value": "GOWINRES_VERSION=v0.3.1"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7058,
          "end": 7061
        }
      },
      "options": [
        {
          "flag_start": 7062,
          "name": {
            "span": {
              "start": 7064,
              "end": 7069
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7070,
              "end": 7109
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 7116,
          "name": {
            "span": {
              "start": 7118,
              "end": 7123
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7124,
              "end": 7153
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 7164,
            "end": 7287
          },
          "value": "GOBIN=/build/ GO111MODULE=on go install \"github.com/tc-hib/go-winres@${GOWINRES_VERSION}\" \\\n     && /build/go-winres --help"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7302,
          "end": 7306
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7307,
          "end": 7311
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 7312,
            "end": 7314
          }
        },
        {
          "span": {
            "start": 7315,
            "end": 7329
          },
          "value": "containerd-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 7330,
          "end": 7337
        }
      },
      "arguments": {
        "span": {
          "start": 7338,
          "end": 7357
        },
        "value": "/usr/src/containerd"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7358,
          "end": 7361
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 7362,
            "end": 7444
          },
          "value": "git init . && git remote add origin \"https://github.com/containerd/containerd.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7954,
          "end": 7957
        }
      },
      "arguments": {
        "span": {
          "start": 7958,
          "end": 7984
        },
        "value": "CONTAINERD_VERSION=v1.7.27"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7985,
          "end": 7988
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 7989,
            "end": 8097
          },
          "value": "git fetch -q --depth 1 origin \"${CONTAINERD_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8099,
          "end": 8103
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8104,
          "end": 8108
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 8109,
            "end": 8111
          }
        },
        {
          "span": {
            "start": 8112,
            "end": 8128
          },
          "value": "containerd-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 8129,
          "end": 8136
        }
      },
      "arguments": {
        "span": {
          "start": 8137,
          "end": 8177
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 8178,
          "end": 8181
        }
      },
      "arguments": {
        "span": {
          "start": 8182,
          "end": 8196
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8197,
          "end": 8200
        }
      },
      "options": [
        {
          "flag_start": 8201,
          "name": {
            "span": {
              "start": 8203,
              "end": 8208
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 8209,
              "end": 8280
            },
            "value": "type=cache,sharing=locked,id=moby-containerd-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 8287,
          "name": {
            "span": {
              "start": 8289,
              "end": 8294
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 8295,
              "end": 8370
            },
            "value": "type=cache,sharing=locked,id=moby-containerd-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 8381,
            "end": 8487
          },
          "value": "apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 8488,
          "end": 8491
        }
      },
      "arguments": {
        "span": {
          "start": 8492,
          "end": 8505
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8506,
          "end": 8509
        }
      },
      "options": [
        {
          "flag_start": 8510,
          "name": {
            "span": {
              "start": 8512,
              "end": 8517
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 8518,
              "end": 8564
            },
            "value": "from=containerd-src,src=/usr/src/containerd,rw"
          }
        },
        {
          "flag_start": 8571,
          "name": {
            "span": {
              "start": 8573,
              "end": 8578
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 8579,
              "end": 8654
            },
            "value": "type=cache,target=/root/.cache/go-build,id=containerd-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 8660,
            "end": 8660
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 8661,
            "end": 9164
          },
          "expand": true,
          "value": "  set -e\n  export CC=$(xx-info)-gcc\n  export CGO_ENABLED=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"0\" || echo \"1\")\n  xx-go --wrap\n  make $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"STATIC=1\") binaries\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/containerd\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/containerd-shim-runc-v2\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/ctr\n  mkdir /build\n  mv bin/containerd bin/containerd-shim-runc-v2 bin/ctr /build\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9169,
          "end": 9173
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9174,
          "end": 9190
        },
        "value": "containerd-build"
      },
      "as_": [
        {
          "span": {
            "start": 9191,
            "end": 9193
          }
        },
        {
          "span": {
            "start": 9194,
            "end": 9210
          },
          "value": "containerd-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9211,
          "end": 9215
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9216,
          "end": 9228
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 9229,
            "end": 9231
          }
        },
        {
          "span": {
            "start": 9232,
            "end": 9250
          },
          "value": "containerd-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9251,
          "end": 9255
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9256,
          "end": 9278
        },
        "value": "containerd-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 9279,
            "end": 9281
          }
        },
        {
          "span": {
            "start": 9282,
            "end": 9292
          },
          "value": "containerd"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9294,
          "end": 9298
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9299,
          "end": 9303
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 9304,
            "end": 9306
          }
        },
        {
          "span": {
            "start": 9307,
            "end": 9320
          },
          "value": "golangci_lint"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9321,
          "end": 9324
        }
      },
      "arguments": {
        "span": {
          "start": 9325,
          "end": 9353
        },
        "value": "GOLANGCI_LINT_VERSION=v2.1.5"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9354,
          "end": 9357
        }
      },
      "options": [
        {
          "flag_start": 9358,
          "name": {
            "span": {
              "start": 9360,
              "end": 9365
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9366,
              "end": 9405
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 9412,
          "name": {
            "span": {
              "start": 9414,
              "end": 9419
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9420,
              "end": 9449
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 9460,
            "end": 9622
          },
          "value": "GOBIN=/build/ GO111MODULE=on go install \"github.com/golangci/golangci-lint/v2/cmd/golangci-lint@${GOLANGCI_LINT_VERSION}\" \\\n     && /build/golangci-lint --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9624,
          "end": 9628
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9629,
          "end": 9633
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 9634,
            "end": 9636
          }
        },
        {
          "span": {
            "start": 9637,
            "end": 9646
          },
          "value": "gotestsum"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9720,
          "end": 9723
        }
      },
      "arguments": {
        "span": {
          "start": 9724,
          "end": 9749
        },
        "value": "GOTESTSUM_VERSION=v1.12.3"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9750,
          "end": 9753
        }
      },
      "options": [
        {
          "flag_start": 9754,
          "name": {
            "span": {
              "start": 9756,
              "end": 9761
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9762,
              "end": 9801
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 9808,
          "name": {
            "span": {
              "start": 9810,
              "end": 9815
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9816,
              "end": 9845
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 9856,
            "end": 9978
          },
          "value": "GOBIN=/build/ GO111MODULE=on go install \"gotest.tools/gotestsum@${GOTESTSUM_VERSION}\" \\\n     && /build/gotestsum --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9980,
          "end": 9984
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9985,
          "end": 9989
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 9990,
            "end": 9992
          }
        },
        {
          "span": {
            "start": 9993,
            "end": 9998
          },
          "value": "shfmt"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9999,
          "end": 10002
        }
      },
      "arguments": {
        "span": {
          "start": 10003,
          "end": 10023
        },
        "value": "SHFMT_VERSION=v3.8.0"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10024,
          "end": 10027
        }
      },
      "options": [
        {
          "flag_start": 10028,
          "name": {
            "span": {
              "start": 10030,
              "end": 10035
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10036,
              "end": 10075
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 10082,
          "name": {
            "span": {
              "start": 10084,
              "end": 10089
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10090,
              "end": 10119
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 10130,
            "end": 10246
          },
          "value": "GOBIN=/build/ GO111MODULE=on go install \"mvdan.cc/sh/v3/cmd/shfmt@${SHFMT_VERSION}\" \\\n     && /build/shfmt --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10248,
          "end": 10252
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10253,
          "end": 10257
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 10258,
            "end": 10260
          }
        },
        {
          "span": {
            "start": 10261,
            "end": 10266
          },
          "value": "gopls"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10267,
          "end": 10270
        }
      },
      "options": [
        {
          "flag_start": 10271,
          "name": {
            "span": {
              "start": 10273,
              "end": 10278
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10279,
              "end": 10318
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 10325,
          "name": {
            "span": {
              "start": 10327,
              "end": 10332
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10333,
              "end": 10362
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 10373,
            "end": 10477
          },
          "value": "GOBIN=/build/ GO111MODULE=on go install \"golang.org/x/tools/gopls@latest\" \\\n     && /build/gopls version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10479,
          "end": 10483
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10484,
          "end": 10488
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 10489,
            "end": 10491
          }
        },
        {
          "span": {
            "start": 10492,
            "end": 10501
          },
          "value": "dockercli"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 10502,
          "end": 10509
        }
      },
      "arguments": {
        "span": {
          "start": 10510,
          "end": 10539
        },
        "value": "/go/src/github.com/docker/cli"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10540,
          "end": 10543
        }
      },
      "arguments": {
        "span": {
          "start": 10544,
          "end": 10564
        },
        "value": "DOCKERCLI_REPOSITORY"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10565,
          "end": 10568
        }
      },
      "arguments": {
        "span": {
          "start": 10569,
          "end": 10586
        },
        "value": "DOCKERCLI_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10587,
          "end": 10590
        }
      },
      "arguments": {
        "span": {
          "start": 10591,
          "end": 10605
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10606,
          "end": 10609
        }
      },
      "options": [
        {
          "flag_start": 10610,
          "name": {
            "span": {
              "start": 10612,
              "end": 10617
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10618,
              "end": 10680
            },
            "value": "source=hack/dockerfile/cli.sh,target=/download-or-build-cli.sh"
          }
        },
        {
          "flag_start": 10687,
          "name": {
            "span": {
              "start": 10689,
              "end": 10694
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10695,
              "end": 10767
            },
            "value": "type=cache,id=dockercli-git-$TARGETPLATFORM,sharing=locked,target=./.git"
          }
        },
        {
          "flag_start": 10774,
          "name": {
            "span": {
              "start": 10776,
              "end": 10781
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10782,
              "end": 10856
            },
            "value": "type=cache,target=/root/.cache/go-build,id=dockercli-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 10867,
            "end": 11066
          },
          "value": "rm -f ./.git/*.lock \\\n     && /download-or-build-cli.sh ${DOCKERCLI_VERSION} ${DOCKERCLI_REPOSITORY} /build \\\n     && /build/docker --version \\\n     && /build/docker completion bash >/completion.bash"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 11068,
          "end": 11072
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 11073,
          "end": 11077
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 11078,
            "end": 11080
          }
        },
        {
          "span": {
            "start": 11081,
            "end": 11102
          },
          "value": "dockercli-integration"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 11103,
          "end": 11110
        }
      },
      "arguments": {
        "span": {
          "start": 11111,
          "end": 11140
        },
        "value": "/go/src/github.com/docker/cli"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11141,
          "end": 11144
        }
      },
      "arguments": {
        "span": {
          "start": 11145,
          "end": 11177
        },
        "value": "DOCKERCLI_INTEGRATION_REPOSITORY"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11178,
          "end": 11181
        }
      },
      "arguments": {
        "span": {
          "start": 11182,
          "end": 11211
        },
        "value": "DOCKERCLI_INTEGRATION_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11212,
          "end": 11215
        }
      },
      "arguments": {
        "span": {
          "start": 11216,
          "end": 11230
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11231,
          "end": 11234
        }
      },
      "options": [
        {
          "flag_start": 11235,
          "name": {
            "span": {
              "start": 11237,
              "end": 11242
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11243,
              "end": 11305
            },
            "value": "source=hack/dockerfile/cli.sh,target=/download-or-build-cli.sh"
          }
        },
        {
          "flag_start": 11312,
          "name": {
            "span": {
              "start": 11314,
              "end": 11319
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11320,
              "end": 11392
            },
            "value": "type=cache,id=dockercli-git-$TARGETPLATFORM,sharing=locked,target=./.git"
          }
        },
        {
          "flag_start": 11399,
          "name": {
            "span": {
              "start": 11401,
              "end": 11406
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11407,
              "end": 11481
            },
            "value": "type=cache,target=/root/.cache/go-build,id=dockercli-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 11492,
            "end": 11657
          },
          "value": "rm -f ./.git/*.lock \\\n     && /download-or-build-cli.sh ${DOCKERCLI_INTEGRATION_VERSION} ${DOCKERCLI_INTEGRATION_REPOSITORY} /build \\\n     && /build/docker --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 11666,
          "end": 11670
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 11671,
          "end": 11675
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 11676,
            "end": 11678
          }
        },
        {
          "span": {
            "start": 11679,
            "end": 11687
          },
          "value": "runc-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 11688,
          "end": 11695
        }
      },
      "arguments": {
        "span": {
          "start": 11696,
          "end": 11709
        },
        "value": "/usr/src/runc"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11710,
          "end": 11713
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 11714,
            "end": 11794
          },
          "value": "git init . && git remote add origin \"https://github.com/opencontainers/runc.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 12091,
          "end": 12094
        }
      },
      "arguments": {
        "span": {
          "start": 12095,
          "end": 12114
        },
        "value": "RUNC_VERSION=v1.2.6"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12115,
          "end": 12118
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 12119,
            "end": 12221
          },
          "value": "git fetch -q --depth 1 origin \"${RUNC_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12223,
          "end": 12227
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12228,
          "end": 12232
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 12233,
            "end": 12235
          }
        },
        {
          "span": {
            "start": 12236,
            "end": 12246
          },
          "value": "runc-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 12247,
          "end": 12254
        }
      },
      "arguments": {
        "span": {
          "start": 12255,
          "end": 12293
        },
        "value": "/go/src/github.com/opencontainers/runc"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 12294,
          "end": 12297
        }
      },
      "arguments": {
        "span": {
          "start": 12298,
          "end": 12312
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12313,
          "end": 12316
        }
      },
      "options": [
        {
          "flag_start": 12317,
          "name": {
            "span": {
              "start": 12319,
              "end": 12324
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12325,
              "end": 12390
            },
            "value": "type=cache,sharing=locked,id=moby-runc-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 12397,
          "name": {
            "span": {
              "start": 12399,
              "end": 12404
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12405,
              "end": 12474
            },
            "value": "type=cache,sharing=locked,id=moby-runc-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 12485,
            "end": 12644
          },
          "value": "apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            libseccomp-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 12645,
          "end": 12648
        }
      },
      "arguments": {
        "span": {
          "start": 12649,
          "end": 12662
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12663,
          "end": 12666
        }
      },
      "options": [
        {
          "flag_start": 12667,
          "name": {
            "span": {
              "start": 12669,
              "end": 12674
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12675,
              "end": 12709
            },
            "value": "from=runc-src,src=/usr/src/runc,rw"
          }
        },
        {
          "flag_start": 12716,
          "name": {
            "span": {
              "start": 12718,
              "end": 12723
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12724,
              "end": 12793
            },
            "value": "type=cache,target=/root/.cache/go-build,id=runc-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 12799,
            "end": 12799
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 12800,
            "end": 13008
          },
          "expand": true,
          "value": "  set -e\n  xx-go --wrap\n  CGO_ENABLED=1 make \"$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"static\" || echo \"runc\")\"\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") runc\n  mkdir /build\n  mv runc /build/\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13013,
          "end": 13017
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13018,
          "end": 13028
        },
        "value": "runc-build"
      },
      "as_": [
        {
          "span": {
            "start": 13029,
            "end": 13031
          }
        },
        {
          "span": {
            "start": 13032,
            "end": 13042
          },
          "value": "runc-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13043,
          "end": 13047
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13048,
          "end": 13060
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 13061,
            "end": 13063
          }
        },
        {
          "span": {
            "start": 13064,
            "end": 13076
          },
          "value": "runc-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13077,
          "end": 13081
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13082,
          "end": 13098
        },
        "value": "runc-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 13099,
            "end": 13101
          }
        },
        {
          "span": {
            "start": 13102,
            "end": 13106
          },
          "value": "runc"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13115,
          "end": 13119
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13120,
          "end": 13124
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 13125,
            "end": 13127
          }
        },
        {
          "span": {
            "start": 13128,
            "end": 13136
          },
          "value": "tini-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 13137,
          "end": 13144
        }
      },
      "arguments": {
        "span": {
          "start": 13145,
          "end": 13158
        },
        "value": "/usr/src/tini"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13159,
          "end": 13162
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 13163,
            "end": 13236
          },
          "value": "git init . && git remote add origin \"https://github.com/krallin/tini.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 13379,
          "end": 13382
        }
      },
      "arguments": {
        "span": {
          "start": 13383,
          "end": 13403
        },
        "value": "TINI_VERSION=v0.19.0"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13404,
          "end": 13407
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 13408,
            "end": 13510
          },
          "value": "git fetch -q --depth 1 origin \"${TINI_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13512,
          "end": 13516
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13517,
          "end": 13521
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 13522,
            "end": 13524
          }
        },
        {
          "span": {
            "start": 13525,
            "end": 13535
          },
          "value": "tini-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 13536,
          "end": 13543
        }
      },
      "arguments": {
        "span": {
          "start": 13544,
          "end": 13575
        },
        "value": "/go/src/github.com/krallin/tini"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13576,
          "end": 13579
        }
      },
      "options": [
        {
          "flag_start": 13580,
          "name": {
            "span": {
              "start": 13582,
              "end": 13587
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13588,
              "end": 13653
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 13660,
          "name": {
            "span": {
              "start": 13662,
              "end": 13667
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13668,
              "end": 13737
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 13748,
            "end": 13814
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends cmake"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 13815,
          "end": 13818
        }
      },
      "arguments": {
        "span": {
          "start": 13819,
          "end": 13833
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13834,
          "end": 13837
        }
      },
      "options": [
        {
          "flag_start": 13838,
          "name": {
            "span": {
              "start": 13840,
              "end": 13845
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13846,
              "end": 13911
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 13918,
          "name": {
            "span": {
              "start": 13920,
              "end": 13925
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13926,
              "end": 13995
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 14006,
            "end": 14118
          },
          "value": "xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14119,
          "end": 14122
        }
      },
      "options": [
        {
          "flag_start": 14123,
          "name": {
            "span": {
              "start": 14125,
              "end": 14130
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14131,
              "end": 14165
            },
            "value": "from=tini-src,src=/usr/src/tini,rw"
          }
        },
        {
          "flag_start": 14172,
          "name": {
            "span": {
              "start": 14174,
              "end": 14179
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14180,
              "end": 14249
            },
            "value": "type=cache,target=/root/.cache/go-build,id=tini-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 14255,
            "end": 14255
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 14256,
            "end": 14396
          },
          "expand": true,
          "value": "  set -e\n  CC=$(xx-info)-gcc cmake .\n  make tini-static\n  xx-verify --static tini-static\n  mkdir /build\n  mv tini-static /build/docker-init\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14401,
          "end": 14405
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14406,
          "end": 14416
        },
        "value": "tini-build"
      },
      "as_": [
        {
          "span": {
            "start": 14417,
            "end": 14419
          }
        },
        {
          "span": {
            "start": 14420,
            "end": 14430
          },
          "value": "tini-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14431,
          "end": 14435
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14436,
          "end": 14448
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 14449,
            "end": 14451
          }
        },
        {
          "span": {
            "start": 14452,
            "end": 14464
          },
          "value": "tini-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14465,
          "end": 14469
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14470,
          "end": 14486
        },
        "value": "tini-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 14487,
            "end": 14489
          }
        },
        {
          "span": {
            "start": 14490,
            "end": 14494
          },
          "value": "tini"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14510,
          "end": 14514
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14515,
          "end": 14519
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 14520,
            "end": 14522
          }
        },
        {
          "span": {
            "start": 14523,
            "end": 14538
          },
          "value": "rootlesskit-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 14539,
          "end": 14546
        }
      },
      "arguments": {
        "span": {
          "start": 14547,
          "end": 14567
        },
        "value": "/usr/src/rootlesskit"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14568,
          "end": 14571
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 14572,
            "end": 14664
          },
          "value": "git init . && git remote add origin \"https://github.com/rootless-containers/rootlesskit.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 14768,
          "end": 14771
        }
      },
      "arguments": {
        "span": {
          "start": 14772,
          "end": 14798
        },
        "value": "ROOTLESSKIT_VERSION=v2.3.4"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14799,
          "end": 14802
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 14803,
            "end": 14912
          },
          "value": "git fetch -q --depth 1 origin \"${ROOTLESSKIT_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14914,
          "end": 14918
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14919,
          "end": 14923
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 14924,
            "end": 14926
          }
        },
        {
          "span": {
            "start": 14927,
            "end": 14944
          },
          "value": "rootlesskit-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 14945,
          "end": 14952
        }
      },
      "arguments": {
        "span": {
          "start": 14953,
          "end": 15003
        },
        "value": "/go/src/github.com/rootless-containers/rootlesskit"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 15004,
          "end": 15007
        }
      },
      "arguments": {
        "span": {
          "start": 15008,
          "end": 15022
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15023,
          "end": 15026
        }
      },
      "options": [
        {
          "flag_start": 15027,
          "name": {
            "span": {
              "start": 15029,
              "end": 15034
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 15035,
              "end": 15107
            },
            "value": "type=cache,sharing=locked,id=moby-rootlesskit-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 15114,
          "name": {
            "span": {
              "start": 15116,
              "end": 15121
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 15122,
              "end": 15198
            },
            "value": "type=cache,sharing=locked,id=moby-rootlesskit-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 15209,
            "end": 15339
          },
          "value": "apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 15340,
          "end": 15343
        }
      },
      "arguments": {
        "span": {
          "start": 15344,
          "end": 15358
        },
        "value": "GO111MODULE=on"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 15359,
          "end": 15362
        }
      },
      "arguments": {
        "span": {
          "start": 15363,
          "end": 15376
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15377,
          "end": 15380
        }
      },
      "options": [
        {
          "flag_start": 15381,
          "name": {
            "span": {
              "start": 15383,
              "end": 15388
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 15389,
              "end": 15437
            },
            "value": "from=rootlesskit-src,src=/usr/src/rootlesskit,rw"
          }
        },
        {
          "flag_start": 15444,
          "name": {
            "span": {
              "start": 15446,
              "end": 15451
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 15452,
              "end": 15481
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        },
        {
          "flag_start": 15488,
          "name": {
            "span": {
              "start": 15490,
              "end": 15495
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 15496,
              "end": 15572
            },
            "value": "type=cache,target=/root/.cache/go-build,id=rootlesskit-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 15578,
            "end": 15578
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 15579,
            "end": 15868
          },
          "expand": true,
          "value": "  set -e\n  export CGO_ENABLED=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"0\" || echo \"1\")\n  xx-go build -o /build/rootlesskit -ldflags=\"$([ \"$DOCKER_STATIC\" != \"1\" ] && echo \"-linkmode=external\")\" ./cmd/rootlesskit\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /build/rootlesskit\n"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 15872,
          "end": 15876
        }
      },
      "options": [
        {
          "flag_start": 15877,
          "name": {
            "span": {
              "start": 15879,
              "end": 15883
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 15884,
              "end": 15913
            },
            "value": "./contrib/dockerd-rootless.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 15914,
          "end": 15921
        },
        "value": "/build/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 15922,
          "end": 15926
        }
      },
      "options": [
        {
          "flag_start": 15927,
          "name": {
            "span": {
              "start": 15929,
              "end": 15933
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 15934,
              "end": 15973
            },
            "value": "./contrib/dockerd-rootless-setuptool.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 15974,
          "end": 15981
        },
        "value": "/build/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 15983,
          "end": 15987
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 15988,
          "end": 16005
        },
        "value": "rootlesskit-build"
      },
      "as_": [
        {
          "span": {
            "start": 16006,
            "end": 16008
          }
        },
        {
          "span": {
            "start": 16009,
            "end": 16026
          },
          "value": "rootlesskit-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16027,
          "end": 16031
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16032,
          "end": 16044
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 16045,
            "end": 16047
          }
        },
        {
          "span": {
            "start": 16048,
            "end": 16067
          },
          "value": "rootlesskit-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16068,
          "end": 16072
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16073,
          "end": 16096
        },
        "value": "rootlesskit-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 16097,
            "end": 16099
          }
        },
        {
          "span": {
            "start": 16100,
            "end": 16111
          },
          "value": "rootlesskit"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16113,
          "end": 16117
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16118,
          "end": 16122
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 16123,
            "end": 16125
          }
        },
        {
          "span": {
            "start": 16126,
            "end": 16130
          },
          "value": "crun"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 16202,
          "end": 16205
        }
      },
      "arguments": {
        "span": {
          "start": 16206,
          "end": 16223
        },
        "value": "CRUN_VERSION=1.21"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 16224,
          "end": 16227
        }
      },
      "options": [
        {
          "flag_start": 16228,
          "name": {
            "span": {
              "start": 16230,
              "end": 16235
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 16236,
              "end": 16301
            },
            "value": "type=cache,sharing=locked,id=moby-crun-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 16308,
          "name": {
            "span": {
              "start": 16310,
              "end": 16315
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 16316,
              "end": 16385
            },
            "value": "type=cache,sharing=locked,id=moby-crun-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 16396,
            "end": 16733
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            autoconf \\\n            automake \\\n            build-essential \\\n            libcap-dev \\\n            libprotobuf-c-dev \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            libtool \\\n            libyajl-dev \\\n            python3 \\\n            ;"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 16734,
          "end": 16737
        }
      },
      "options": [
        {
          "flag_start": 16738,
          "name": {
            "span": {
              "start": 16740,
              "end": 16745
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 16746,
              "end": 16779
            },
            "value": "type=tmpfs,target=/tmp/crun-build"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 16786,
            "end": 17005
          },
          "value": "git clone https://github.com/containers/crun.git /tmp/crun-build && \\\n    cd /tmp/crun-build && \\\n    git checkout -q \"${CRUN_VERSION}\" && \\\n    ./autogen.sh && \\\n    ./configure --bindir=/build && \\\n    make -j install"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17091,
          "end": 17095
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17096,
          "end": 17103
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 17104,
            "end": 17106
          }
        },
        {
          "span": {
            "start": 17107,
            "end": 17121
          },
          "value": "vpnkit-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17122,
          "end": 17126
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17127,
          "end": 17134
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 17135,
            "end": 17137
          }
        },
        {
          "span": {
            "start": 17138,
            "end": 17154
          },
          "value": "vpnkit-linux-386"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17155,
          "end": 17159
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17160,
          "end": 17167
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 17168,
            "end": 17170
          }
        },
        {
          "span": {
            "start": 17171,
            "end": 17187
          },
          "value": "vpnkit-linux-arm"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17188,
          "end": 17192
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17193,
          "end": 17200
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 17201,
            "end": 17203
          }
        },
        {
          "span": {
            "start": 17204,
            "end": 17224
          },
          "value": "vpnkit-linux-ppc64le"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17225,
          "end": 17229
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17230,
          "end": 17237
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 17238,
            "end": 17240
          }
        },
        {
          "span": {
            "start": 17241,
            "end": 17261
          },
          "value": "vpnkit-linux-riscv64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17262,
          "end": 17266
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17267,
          "end": 17274
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 17275,
            "end": 17277
          }
        },
        {
          "span": {
            "start": 17278,
            "end": 17296
          },
          "value": "vpnkit-linux-s390x"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17297,
          "end": 17301
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17302,
          "end": 17335
        },
        "value": "moby/vpnkit-bin:${VPNKIT_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 17336,
            "end": 17338
          }
        },
        {
          "span": {
            "start": 17339,
            "end": 17357
          },
          "value": "vpnkit-linux-amd64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17358,
          "end": 17362
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17363,
          "end": 17396
        },
        "value": "moby/vpnkit-bin:${VPNKIT_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 17397,
            "end": 17399
          }
        },
        {
          "span": {
            "start": 17400,
            "end": 17418
          },
          "value": "vpnkit-linux-arm64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17419,
          "end": 17423
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17424,
          "end": 17450
        },
        "value": "vpnkit-linux-${TARGETARCH}"
      },
      "as_": [
        {
          "span": {
            "start": 17451,
            "end": 17453
          }
        },
        {
          "span": {
            "start": 17454,
            "end": 17466
          },
          "value": "vpnkit-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17467,
          "end": 17471
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17472,
          "end": 17490
        },
        "value": "vpnkit-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 17491,
            "end": 17493
          }
        },
        {
          "span": {
            "start": 17494,
            "end": 17500
          },
          "value": "vpnkit"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17521,
          "end": 17525
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17526,
          "end": 17530
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 17531,
            "end": 17533
          }
        },
        {
          "span": {
            "start": 17534,
            "end": 17551
          },
          "value": "containerutil-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 17552,
          "end": 17559
        }
      },
      "arguments": {
        "span": {
          "start": 17560,
          "end": 17582
        },
        "value": "/usr/src/containerutil"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17583,
          "end": 17586
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17587,
            "end": 17688
          },
          "value": "git init . && git remote add origin \"https://github.com/docker-archive/windows-container-utility.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 17689,
          "end": 17692
        }
      },
      "arguments": {
        "span": {
          "start": 17693,
          "end": 17758
        },
        "value": "CONTAINERUTILITY_VERSION=aa1ba87e99b68e0113bd27ec26c60b88f9d4ccd9"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17759,
          "end": 17762
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17763,
            "end": 17877
          },
          "value": "git fetch -q --depth 1 origin \"${CONTAINERUTILITY_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17879,
          "end": 17883
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17884,
          "end": 17888
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 17889,
            "end": 17891
          }
        },
        {
          "span": {
            "start": 17892,
            "end": 17911
          },
          "value": "containerutil-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 17912,
          "end": 17919
        }
      },
      "arguments": {
        "span": {
          "start": 17920,
          "end": 17942
        },
        "value": "/usr/src/containerutil"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 17943,
          "end": 17946
        }
      },
      "arguments": {
        "span": {
          "start": 17947,
          "end": 17961
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17962,
          "end": 17965
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17966,
            "end": 18080
          },
          "value": "xx-apt-get install -y --no-install-recommends \\\n        gcc \\\n        g++ \\\n        libc6-dev \\\n        pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 18081,
          "end": 18084
        }
      },
      "options": [
        {
          "flag_start": 18085,
          "name": {
            "span": {
              "start": 18087,
              "end": 18092
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 18093,
              "end": 18145
            },
            "value": "from=containerutil-src,src=/usr/src/containerutil,rw"
          }
        },
        {
          "flag_start": 18152,
          "name": {
            "span": {
              "start": 18154,
              "end": 18159
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 18160,
              "end": 18238
            },
            "value": "type=cache,target=/root/.cache/go-build,id=containerutil-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 18244,
            "end": 18244
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 18245,
            "end": 18393
          },
          "expand": true,
          "value": "  set -e\n  CC=\"$(xx-info)-gcc\" CXX=\"$(xx-info)-g++\" make\n  xx-verify --static containerutility.exe\n  mkdir /build\n  mv containerutility.exe /build/\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18398,
          "end": 18402
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18403,
          "end": 18415
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 18416,
            "end": 18418
          }
        },
        {
          "span": {
            "start": 18419,
            "end": 18438
          },
          "value": "containerutil-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18439,
          "end": 18443
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18444,
          "end": 18463
        },
        "value": "containerutil-build"
      },
      "as_": [
        {
          "span": {
            "start": 18464,
            "end": 18466
          }
        },
        {
          "span": {
            "start": 18467,
            "end": 18494
          },
          "value": "containerutil-windows-amd64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18495,
          "end": 18499
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18500,
          "end": 18535
        },
        "value": "containerutil-windows-${TARGETARCH}"
      },
      "as_": [
        {
          "span": {
            "start": 18536,
            "end": 18538
          }
        },
        {
          "span": {
            "start": 18539,
            "end": 18560
          },
          "value": "containerutil-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18561,
          "end": 18565
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18566,
          "end": 18591
        },
        "value": "containerutil-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 18592,
            "end": 18594
          }
        },
        {
          "span": {
            "start": 18595,
            "end": 18608
          },
          "value": "containerutil"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18609,
          "end": 18613
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18614,
          "end": 18649
        },
        "value": "docker/buildx-bin:${BUILDX_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 18650,
            "end": 18652
          }
        },
        {
          "span": {
            "start": 18653,
            "end": 18659
          },
          "value": "buildx"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18660,
          "end": 18664
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18665,
          "end": 18702
        },
        "value": "docker/compose-bin:${COMPOSE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 18703,
            "end": 18705
          }
        },
        {
          "span": {
            "start": 18706,
            "end": 18713
          },
          "value": "compose"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18715,
          "end": 18719
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18720,
          "end": 18724
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 18725,
            "end": 18727
          }
        },
        {
          "span": {
            "start": 18728,
            "end": 18745
          },
          "value": "dev-systemd-false"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18746,
          "end": 18750
        }
      },
      "options": [
        {
          "flag_start": 18751,
          "name": {
            "span": {
              "start": 18753,
              "end": 18757
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18758,
          "name": {
            "span": {
              "start": 18760,
              "end": 18764
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18765,
              "end": 18778
            },
            "value": "frozen-images"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18779,
              "end": 18786
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18787,
          "end": 18808
        },
        "value": "/docker-frozen-images"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18809,
          "end": 18813
        }
      },
      "options": [
        {
          "flag_start": 18814,
          "name": {
            "span": {
              "start": 18816,
              "end": 18820
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18821,
          "name": {
            "span": {
              "start": 18823,
              "end": 18827
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18828,
              "end": 18835
            },
            "value": "swagger"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18842,
              "end": 18849
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18850,
          "end": 18865
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18866,
          "end": 18870
        }
      },
      "options": [
        {
          "flag_start": 18871,
          "name": {
            "span": {
              "start": 18873,
              "end": 18877
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18878,
          "name": {
            "span": {
              "start": 18880,
              "end": 18884
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18885,
              "end": 18890
            },
            "value": "delve"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18899,
              "end": 18906
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18907,
          "end": 18922
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18923,
          "end": 18927
        }
      },
      "options": [
        {
          "flag_start": 18928,
          "name": {
            "span": {
              "start": 18930,
              "end": 18934
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18935,
          "name": {
            "span": {
              "start": 18937,
              "end": 18941
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18942,
              "end": 18950
            },
            "value": "gowinres"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18956,
              "end": 18963
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18964,
          "end": 18979
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18980,
          "end": 18984
        }
      },
      "options": [
        {
          "flag_start": 18985,
          "name": {
            "span": {
              "start": 18987,
              "end": 18991
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18992,
          "name": {
            "span": {
              "start": 18994,
              "end": 18998
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18999,
              "end": 19003
            },
            "value": "tini"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19013,
              "end": 19020
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19021,
          "end": 19036
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19037,
          "end": 19041
        }
      },
      "options": [
        {
          "flag_start": 19042,
          "name": {
            "span": {
              "start": 19044,
              "end": 19048
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19049,
          "name": {
            "span": {
              "start": 19051,
              "end": 19055
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19056,
              "end": 19064
            },
            "value": "registry"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19070,
              "end": 19077
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19078,
          "end": 19093
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19433,
          "end": 19437
        }
      },
      "options": [
        {
          "flag_start": 19438,
          "name": {
            "span": {
              "start": 19440,
              "end": 19444
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19445,
          "name": {
            "span": {
              "start": 19447,
              "end": 19451
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19452,
              "end": 19461
            },
            "value": "gotestsum"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19466,
              "end": 19473
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19474,
          "end": 19489
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19490,
          "end": 19494
        }
      },
      "options": [
        {
          "flag_start": 19495,
          "name": {
            "span": {
              "start": 19497,
              "end": 19501
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19502,
          "name": {
            "span": {
              "start": 19504,
              "end": 19508
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19509,
              "end": 19522
            },
            "value": "golangci_lint"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19523,
              "end": 19530
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19531,
          "end": 19546
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19547,
          "end": 19551
        }
      },
      "options": [
        {
          "flag_start": 19552,
          "name": {
            "span": {
              "start": 19554,
              "end": 19558
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19559,
          "name": {
            "span": {
              "start": 19561,
              "end": 19565
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19566,
              "end": 19571
            },
            "value": "shfmt"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19580,
              "end": 19587
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19588,
          "end": 19603
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19604,
          "end": 19608
        }
      },
      "options": [
        {
          "flag_start": 19609,
          "name": {
            "span": {
              "start": 19611,
              "end": 19615
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19616,
          "name": {
            "span": {
              "start": 19618,
              "end": 19622
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19623,
              "end": 19627
            },
            "value": "runc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19637,
              "end": 19644
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19645,
          "end": 19660
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19661,
          "end": 19665
        }
      },
      "options": [
        {
          "flag_start": 19666,
          "name": {
            "span": {
              "start": 19668,
              "end": 19672
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19673,
          "name": {
            "span": {
              "start": 19675,
              "end": 19679
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19680,
              "end": 19690
            },
            "value": "containerd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19694,
              "end": 19701
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19702,
          "end": 19717
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19718,
          "end": 19722
        }
      },
      "options": [
        {
          "flag_start": 19723,
          "name": {
            "span": {
              "start": 19725,
              "end": 19729
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19730,
          "name": {
            "span": {
              "start": 19732,
              "end": 19736
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19737,
              "end": 19748
            },
            "value": "rootlesskit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19751,
              "end": 19758
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19759,
          "end": 19774
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19775,
          "end": 19779
        }
      },
      "options": [
        {
          "flag_start": 19780,
          "name": {
            "span": {
              "start": 19782,
              "end": 19786
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19787,
          "name": {
            "span": {
              "start": 19789,
              "end": 19793
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19794,
              "end": 19800
            },
            "value": "vpnkit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19808,
              "end": 19809
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19816,
          "end": 19831
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19832,
          "end": 19836
        }
      },
      "options": [
        {
          "flag_start": 19837,
          "name": {
            "span": {
              "start": 19839,
              "end": 19843
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19844,
          "name": {
            "span": {
              "start": 19846,
              "end": 19850
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19851,
              "end": 19864
            },
            "value": "containerutil"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19865,
              "end": 19872
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19873,
          "end": 19888
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19889,
          "end": 19893
        }
      },
      "options": [
        {
          "flag_start": 19894,
          "name": {
            "span": {
              "start": 19896,
              "end": 19900
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19901,
          "name": {
            "span": {
              "start": 19903,
              "end": 19907
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19908,
              "end": 19912
            },
            "value": "crun"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19922,
              "end": 19929
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19930,
          "end": 19945
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19946,
          "end": 19950
        }
      },
      "options": [
        {
          "flag_start": 19951,
          "name": {
            "span": {
              "start": 19953,
              "end": 19957
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19958,
              "end": 19985
            },
            "value": "hack/dockerfile/etc/docker/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19987,
          "end": 19999
        },
        "value": "/etc/docker/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 20000,
          "end": 20004
        }
      },
      "options": [
        {
          "flag_start": 20005,
          "name": {
            "span": {
              "start": 20007,
              "end": 20011
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 20012,
          "name": {
            "span": {
              "start": 20014,
              "end": 20018
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 20019,
              "end": 20025
            },
            "value": "buildx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 20033,
              "end": 20040
            },
            "value": "/buildx"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 20041,
          "end": 20092
        },
        "value": "/usr/local/libexec/docker/cli-plugins/docker-buildx"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 20093,
          "end": 20097
        }
      },
      "options": [
        {
          "flag_start": 20098,
          "name": {
            "span": {
              "start": 20100,
              "end": 20104
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 20105,
          "name": {
            "span": {
              "start": 20107,
              "end": 20111
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 20112,
              "end": 20119
            },
            "value": "compose"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 20126,
              "end": 20141
            },
            "value": "/docker-compose"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 20142,
          "end": 20188
        },
        "value": "/usr/libexec/docker/cli-plugins/docker-compose"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 20190,
          "end": 20193
        }
      },
      "arguments": {
        "span": {
          "start": 20194,
          "end": 20219
        },
        "value": "PATH=/usr/local/cli:$PATH"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 20220,
          "end": 20223
        }
      },
      "arguments": {
        "span": {
          "start": 20224,
          "end": 20276
        },
        "value": "TEST_CLIENT_BINARY=/usr/local/cli-integration/docker"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 20277,
          "end": 20280
        }
      },
      "arguments": {
        "span": {
          "start": 20281,
          "end": 20338
        },
        "value": "CONTAINERD_ADDRESS=/run/docker/containerd/containerd.sock"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 20339,
          "end": 20342
        }
      },
      "arguments": {
        "span": {
          "start": 20343,
          "end": 20368
        },
        "value": "CONTAINERD_NAMESPACE=moby"
      }
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 20369,
          "end": 20376
        }
      },
      "arguments": {
        "span": {
          "start": 20377,
          "end": 20409
        },
        "value": "/go/src/github.com/docker/docker"
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 20410,
          "end": 20416
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 20417,
              "end": 20432
            },
            "value": "/var/lib/docker"
          }
        ]
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 20433,
          "end": 20439
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 20440,
              "end": 20482
            },
            "value": "/home/unprivilegeduser/.local/share/docker"
          }
        ]
      }
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 20563,
          "end": 20573
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 20574,
            "end": 20587
          },
          "value": [
            {
              "span": {
                "start": 20576,
                "end": 20585
              },
              "value": "hack/dind"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 20589,
          "end": 20593
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 20594,
          "end": 20611
        },
        "value": "dev-systemd-false"
      },
      "as_": [
        {
          "span": {
            "start": 20612,
            "end": 20614
          }
        },
        {
          "span": {
            "start": 20615,
            "end": 20631
          },
          "value": "dev-systemd-true"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 20632,
          "end": 20635
        }
      },
      "options": [
        {
          "flag_start": 20636,
          "name": {
            "span": {
              "start": 20638,
              "end": 20643
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 20644,
              "end": 20708
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 20715,
          "name": {
            "span": {
              "start": 20717,
              "end": 20722
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 20723,
              "end": 20791
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 20802,
            "end": 20962
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            dbus \\\n            dbus-user-session \\\n            systemd \\\n            systemd-sysv"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 20963,
          "end": 20973
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 20974,
            "end": 20995
          },
          "value": [
            {
              "span": {
                "start": 20976,
                "end": 20993
              },
              "value": "hack/dind-systemd"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 20997,
          "end": 21001
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 21002,
          "end": 21024
        },
        "value": "dev-systemd-${SYSTEMD}"
      },
      "as_": [
        {
          "span": {
            "start": 21025,
            "end": 21027
          }
        },
        {
          "span": {
            "start": 21028,
            "end": 21047
          },
          "value": "dev-firewalld-false"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 21049,
          "end": 21053
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 21054,
          "end": 21070
        },
        "value": "dev-systemd-true"
      },
      "as_": [
        {
          "span": {
            "start": 21071,
            "end": 21073
          }
        },
        {
          "span": {
            "start": 21074,
            "end": 21092
          },
          "value": "dev-firewalld-true"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21093,
          "end": 21096
        }
      },
      "options": [
        {
          "flag_start": 21097,
          "name": {
            "span": {
              "start": 21099,
              "end": 21104
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 21105,
              "end": 21169
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 21176,
          "name": {
            "span": {
              "start": 21178,
              "end": 21183
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 21184,
              "end": 21252
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 21263,
            "end": 21347
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            firewalld"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 21349,
          "end": 21353
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 21354,
          "end": 21380
        },
        "value": "dev-firewalld-${FIREWALLD}"
      },
      "as_": [
        {
          "span": {
            "start": 21381,
            "end": 21383
          }
        },
        {
          "span": {
            "start": 21384,
            "end": 21392
          },
          "value": "dev-base"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21393,
          "end": 21396
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21397,
            "end": 21415
          },
          "value": "groupadd -r docker"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21416,
          "end": 21419
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21420,
            "end": 21584
          },
          "value": "useradd --create-home --gid docker unprivilegeduser \\\n && mkdir -p /home/unprivilegeduser/.local/share/docker \\\n && chown -R unprivilegeduser /home/unprivilegeduser"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21613,
          "end": 21616
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21617,
            "end": 21675
          },
          "value": "ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21703,
          "end": 21706
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21707,
            "end": 21783
          },
          "value": "echo \"source /usr/share/bash-completion/bash_completion\" >> /etc/bash.bashrc"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21784,
          "end": 21787
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21788,
            "end": 21796
          },
          "value": "ldconfig"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21979,
          "end": 21982
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21983,
            "end": 22060
          },
          "value": "git config --global --add safe.directory $GOPATH/src/github.com/docker/docker"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 22260,
          "end": 22263
        }
      },
      "options": [
        {
          "flag_start": 22264,
          "name": {
            "span": {
              "start": 22266,
              "end": 22271
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 22272,
              "end": 22336
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 22343,
          "name": {
            "span": {
              "start": 22345,
              "end": 22350
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 22351,
              "end": 22419
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 22430,
            "end": 23156
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            apparmor \\\n            bash-completion \\\n            bzip2 \\\n            inetutils-ping \\\n            iproute2 \\\n            iptables \\\n            nftables \\\n            jq \\\n            libcap2-bin \\\n            libnet1 \\\n            libnl-3-200 \\\n            libprotobuf-c1 \\\n            libyajl2 \\\n            nano \\\n            net-tools \\\n            netcat-openbsd \\\n            patch \\\n            pigz \\\n            sudo \\\n            systemd-journal-remote \\\n            thin-provisioning-tools \\\n            uidmap \\\n            vim \\\n            vim-common \\\n            xfsprogs \\\n            xz-utils \\\n            zip \\\n            zstd"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 23157,
          "end": 23160
        }
      },
      "options": [
        {
          "flag_start": 23161,
          "name": {
            "span": {
              "start": 23163,
              "end": 23168
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23169,
              "end": 23233
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 23240,
          "name": {
            "span": {
              "start": 23242,
              "end": 23247
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23248,
              "end": 23316
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 23327,
            "end": 23511
          },
          "value": "apt-get update && apt-get install --no-install-recommends -y \\\n            gcc \\\n            pkg-config \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            yamllint"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 23512,
          "end": 23516
        }
      },
      "options": [
        {
          "flag_start": 23517,
          "name": {
            "span": {
              "start": 23519,
              "end": 23523
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 23524,
          "name": {
            "span": {
              "start": 23526,
              "end": 23530
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 23531,
              "end": 23540
            },
            "value": "dockercli"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 23553,
              "end": 23560
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 23561,
          "end": 23575
        },
        "value": "/usr/local/cli"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 23576,
          "end": 23580
        }
      },
      "options": [
        {
          "flag_start": 23581,
          "name": {
            "span": {
              "start": 23583,
              "end": 23587
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 23588,
          "name": {
            "span": {
              "start": 23590,
              "end": 23594
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 23595,
              "end": 23604
            },
            "value": "dockercli"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 23617,
              "end": 23633
            },
            "value": "/completion.bash"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 23634,
          "end": 23663
        },
        "value": "/etc/bash_completion.d/docker"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 23664,
          "end": 23668
        }
      },
      "options": [
        {
          "flag_start": 23669,
          "name": {
            "span": {
              "start": 23671,
              "end": 23675
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 23676,
          "name": {
            "span": {
              "start": 23678,
              "end": 23682
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 23683,
              "end": 23704
            },
            "value": "dockercli-integration"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 23705,
              "end": 23712
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 23713,
          "end": 23739
        },
        "value": "/usr/local/cli-integration"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 23741,
          "end": 23745
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 23746,
          "end": 23750
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 23751,
            "end": 23753
          }
        },
        {
          "span": {
            "start": 23754,
            "end": 23759
          },
          "value": "build"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 23760,
          "end": 23764
        }
      },
      "options": [
        {
          "flag_start": 23765,
          "name": {
            "span": {
              "start": 23767,
              "end": 23771
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 23772,
              "end": 23780
            },
            "value": "gowinres"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 23781,
              "end": 23788
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 23789,
          "end": 23804
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 23805,
          "end": 23812
        }
      },
      "arguments": {
        "span": {
          "start": 23813,
          "end": 23845
        },
        "value": "/go/src/github.com/docker/docker"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 23846,
          "end": 23849
        }
      },
      "arguments": {
        "span": {
          "start": 23850,
          "end": 23865
        },
        "value": "GO111MODULE=off"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 23866,
          "end": 23869
        }
      },
      "arguments": {
        "span": {
          "start": 23870,
          "end": 23883
        },
        "value": "CGO_ENABLED=1"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 23884,
          "end": 23887
        }
      },
      "options": [
        {
          "flag_start": 23888,
          "name": {
            "span": {
              "start": 23890,
              "end": 23895
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23896,
              "end": 23962
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 23969,
          "name": {
            "span": {
              "start": 23971,
              "end": 23976
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23977,
              "end": 24047
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 24058,
            "end": 24198
          },
          "value": "apt-get update && apt-get install --no-install-recommends -y \\\n            clang \\\n            lld \\\n            llvm \\\n            icoutils"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24199,
          "end": 24202
        }
      },
      "arguments": {
        "span": {
          "start": 24203,
          "end": 24217
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 24218,
          "end": 24221
        }
      },
      "options": [
        {
          "flag_start": 24222,
          "name": {
            "span": {
              "start": 24224,
              "end": 24229
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 24230,
              "end": 24296
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 24303,
          "name": {
            "span": {
              "start": 24305,
              "end": 24310
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 24311,
              "end": 24381
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 24392,
            "end": 24562
          },
          "value": "xx-apt-get install --no-install-recommends -y \\\n            gcc \\\n            libc6-dev \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24563,
          "end": 24566
        }
      },
      "arguments": {
        "span": {
          "start": 24567,
          "end": 24583
        },
        "value": "DOCKER_BUILDTAGS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24584,
          "end": 24587
        }
      },
      "arguments": {
        "span": {
          "start": 24588,
          "end": 24600
        },
        "value": "DOCKER_DEBUG"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24601,
          "end": 24604
        }
      },
      "arguments": {
        "span": {
          "start": 24605,
          "end": 24626
        },
        "value": "DOCKER_GITCOMMIT=HEAD"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24627,
          "end": 24630
        }
      },
      "arguments": {
        "span": {
          "start": 24631,
          "end": 24645
        },
        "value": "DOCKER_LDFLAGS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24646,
          "end": 24649
        }
      },
      "arguments": {
        "span": {
          "start": 24650,
          "end": 24663
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24664,
          "end": 24667
        }
      },
      "arguments": {
        "span": {
          "start": 24668,
          "end": 24675
        },
        "value": "VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24676,
          "end": 24679
        }
      },
      "arguments": {
        "span": {
          "start": 24680,
          "end": 24688
        },
        "value": "PLATFORM"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24689,
          "end": 24692
        }
      },
      "arguments": {
        "span": {
          "start": 24693,
          "end": 24700
        },
        "value": "PRODUCT"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24701,
          "end": 24704
        }
      },
      "arguments": {
        "span": {
          "start": 24705,
          "end": 24728
        },
        "value": "DEFAULT_PRODUCT_LICENSE"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24729,
          "end": 24732
        }
      },
      "arguments": {
        "span": {
          "start": 24733,
          "end": 24746
        },
        "value": "PACKAGER_NAME"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 24861,
          "end": 24864
        }
      },
      "arguments": {
        "span": {
          "start": 24865,
          "end": 24876
        },
        "value": "PREFIX=/tmp"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 24877,
          "end": 24880
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 24886,
            "end": 24886
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 24887,
            "end": 25079
          },
          "expand": true,
          "value": "  # in bullseye arm64 target does not link with lld so configure it to use ld instead\n  if [ \"$(xx-info arch)\" = \"arm64\" ]; then\n    XX_CC_PREFER_LINKER=ld xx-clang --setup-target-triple\n  fi\n"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 25083,
          "end": 25086
        }
      },
      "options": [
        {
          "flag_start": 25087,
          "name": {
            "span": {
              "start": 25089,
              "end": 25094
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 25095,
              "end": 25116
            },
            "value": "type=bind,target=.,rw"
          }
        },
        {
          "flag_start": 25123,
          "name": {
            "span": {
              "start": 25125,
              "end": 25130
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 25131,
              "end": 25200
            },
            "value": "type=cache,target=/root/.cache/go-build,id=moby-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 25206,
            "end": 25206
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 25207,
            "end": 25713
          },
          "expand": true,
          "value": "  set -e\n  target=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"binary\" || echo \"dynbinary\")\n  xx-go --wrap\n  PKG_CONFIG=$(xx-go env PKG_CONFIG) ./hack/make.sh $target\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /tmp/bundles/${target}-daemon/dockerd$([ \"$(xx-info os)\" = \"windows\" ] && echo \".exe\")\n  [ \"$(xx-info os)\" != \"linux\" ] || xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /tmp/bundles/${target}-daemon/docker-proxy\n  mkdir /build\n  mv /tmp/bundles/${target}-daemon/* /build/\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 25843,
          "end": 25847
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 25848,
          "end": 25855
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 25856,
            "end": 25858
          }
        },
        {
          "span": {
            "start": 25859,
            "end": 25865
          },
          "value": "binary"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25866,
          "end": 25870
        }
      },
      "options": [
        {
          "flag_start": 25871,
          "name": {
            "span": {
              "start": 25873,
              "end": 25877
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25878,
              "end": 25883
            },
            "value": "build"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25884,
              "end": 25891
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25892,
          "end": 25893
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 25931,
          "end": 25935
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 25936,
          "end": 25943
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 25944,
            "end": 25946
          }
        },
        {
          "span": {
            "start": 25947,
            "end": 25950
          },
          "value": "all"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25951,
          "end": 25955
        }
      },
      "options": [
        {
          "flag_start": 25956,
          "name": {
            "span": {
              "start": 25958,
              "end": 25962
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25963,
          "name": {
            "span": {
              "start": 25965,
              "end": 25969
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25970,
              "end": 25974
            },
            "value": "tini"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25984,
              "end": 25991
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25992,
          "end": 25993
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25994,
          "end": 25998
        }
      },
      "options": [
        {
          "flag_start": 25999,
          "name": {
            "span": {
              "start": 26001,
              "end": 26005
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26006,
          "name": {
            "span": {
              "start": 26008,
              "end": 26012
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26013,
              "end": 26017
            },
            "value": "runc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26027,
              "end": 26034
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26035,
          "end": 26036
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26037,
          "end": 26041
        }
      },
      "options": [
        {
          "flag_start": 26042,
          "name": {
            "span": {
              "start": 26044,
              "end": 26048
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26049,
          "name": {
            "span": {
              "start": 26051,
              "end": 26055
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26056,
              "end": 26066
            },
            "value": "containerd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26070,
              "end": 26077
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26078,
          "end": 26079
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26080,
          "end": 26084
        }
      },
      "options": [
        {
          "flag_start": 26085,
          "name": {
            "span": {
              "start": 26087,
              "end": 26091
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26092,
          "name": {
            "span": {
              "start": 26094,
              "end": 26098
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26099,
              "end": 26110
            },
            "value": "rootlesskit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26113,
              "end": 26120
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26121,
          "end": 26122
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26123,
          "end": 26127
        }
      },
      "options": [
        {
          "flag_start": 26128,
          "name": {
            "span": {
              "start": 26130,
              "end": 26134
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26135,
          "name": {
            "span": {
              "start": 26137,
              "end": 26141
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26142,
              "end": 26155
            },
            "value": "containerutil"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26156,
              "end": 26163
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26164,
          "end": 26165
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26166,
          "end": 26170
        }
      },
      "options": [
        {
          "flag_start": 26171,
          "name": {
            "span": {
              "start": 26173,
              "end": 26177
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26178,
          "name": {
            "span": {
              "start": 26180,
              "end": 26184
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26185,
              "end": 26191
            },
            "value": "vpnkit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26199,
              "end": 26200
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26207,
          "end": 26208
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26209,
          "end": 26213
        }
      },
      "options": [
        {
          "flag_start": 26214,
          "name": {
            "span": {
              "start": 26216,
              "end": 26220
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26221,
          "name": {
            "span": {
              "start": 26223,
              "end": 26227
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26228,
              "end": 26233
            },
            "value": "build"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26242,
              "end": 26248
            },
            "value": "/build"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26250,
          "end": 26251
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 26316,
          "end": 26320
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 26321,
          "end": 26325
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 26326,
            "end": 26328
          }
        },
        {
          "span": {
            "start": 26329,
            "end": 26338
          },
          "value": "smoketest"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 26339,
          "end": 26346
        }
      },
      "arguments": {
        "span": {
          "start": 26347,
          "end": 26361
        },
        "value": "/usr/local/bin"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26362,
          "end": 26366
        }
      },
      "options": [
        {
          "flag_start": 26367,
          "name": {
            "span": {
              "start": 26369,
              "end": 26373
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26374,
              "end": 26379
            },
            "value": "build"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26380,
              "end": 26386
            },
            "value": "/build"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26387,
          "end": 26388
        },
        "value": "."
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 26389,
          "end": 26392
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 26398,
            "end": 26398
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 26399,
            "end": 26489
          },
          "expand": true,
          "value": "  set -ex\n  file dockerd\n  dockerd --version\n  file docker-proxy\n  docker-proxy --version\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 26560,
          "end": 26564
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 26565,
          "end": 26573
        },
        "value": "dev-base"
      },
      "as_": [
        {
          "span": {
            "start": 26574,
            "end": 26576
          }
        },
        {
          "span": {
            "start": 26577,
            "end": 26589
          },
          "value": "devcontainer"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26590,
          "end": 26594
        }
      },
      "options": [
        {
          "flag_start": 26595,
          "name": {
            "span": {
              "start": 26597,
              "end": 26601
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26602,
              "end": 26603
            },
            "value": "."
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26604,
          "end": 26605
        },
        "value": "."
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26606,
          "end": 26610
        }
      },
      "options": [
        {
          "flag_start": 26611,
          "name": {
            "span": {
              "start": 26613,
              "end": 26617
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26618,
          "name": {
            "span": {
              "start": 26620,
              "end": 26624
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26625,
              "end": 26630
            },
            "value": "gopls"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26639,
              "end": 26646
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26647,
          "end": 26662
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 26842,
          "end": 26846
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 26847,
          "end": 26858
        },
        "value": "docker:dind"
      },
      "as_": [
        {
          "span": {
            "start": 26859,
            "end": 26861
          }
        },
        {
          "span": {
            "start": 26862,
            "end": 26866
          },
          "value": "dind"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26867,
          "end": 26871
        }
      },
      "options": [
        {
          "flag_start": 26872,
          "name": {
            "span": {
              "start": 26874,
              "end": 26878
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26879,
          "name": {
            "span": {
              "start": 26881,
              "end": 26885
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26886,
              "end": 26895
            },
            "value": "dockercli"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26896,
              "end": 26909
            },
            "value": "/build/docker"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26910,
          "end": 26925
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26926,
          "end": 26930
        }
      },
      "options": [
        {
          "flag_start": 26931,
          "name": {
            "span": {
              "start": 26933,
              "end": 26937
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26938,
          "name": {
            "span": {
              "start": 26940,
              "end": 26944
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26945,
              "end": 26951
            },
            "value": "buildx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26955,
              "end": 26962
            },
            "value": "/buildx"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26963,
          "end": 27014
        },
        "value": "/usr/local/libexec/docker/cli-plugins/docker-buildx"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 27015,
          "end": 27019
        }
      },
      "options": [
        {
          "flag_start": 27020,
          "name": {
            "span": {
              "start": 27022,
              "end": 27026
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 27027,
          "name": {
            "span": {
              "start": 27029,
              "end": 27033
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 27034,
              "end": 27041
            },
            "value": "compose"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 27044,
              "end": 27059
            },
            "value": "/docker-compose"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 27060,
          "end": 27112
        },
        "value": "/usr/local/libexec/docker/cli-plugins/docker-compose"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 27113,
          "end": 27117
        }
      },
      "options": [
        {
          "flag_start": 27118,
          "name": {
            "span": {
              "start": 27120,
              "end": 27124
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 27125,
          "name": {
            "span": {
              "start": 27127,
              "end": 27131
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 27132,
              "end": 27135
            },
            "value": "all"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 27142,
              "end": 27143
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 27144,
          "end": 27159
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 27213,
          "end": 27217
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 27218,
          "end": 27226
        },
        "value": "dev-base"
      },
      "as_": [
        {
          "span": {
            "start": 27227,
            "end": 27229
          }
        },
        {
          "span": {
            "start": 27230,
            "end": 27233
          },
          "value": "dev"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 27234,
          "end": 27238
        }
      },
      "options": [
        {
          "flag_start": 27239,
          "name": {
            "span": {
              "start": 27241,
              "end": 27245
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 27246,
              "end": 27247
            },
            "value": "."
          }
        }
      ],
      "dest": {
        "span": {
          "start": 27248,
          "end": 27249
        },
        "value": "."
      }
    }
  ]
}