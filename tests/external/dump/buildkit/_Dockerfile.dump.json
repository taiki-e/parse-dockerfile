{
  "parser_directives": {
    "syntax": {
      "start": 2,
      "value": {
        "span": {
          "start": 9,
          "end": 42
        },
        "value": "docker/dockerfile-upstream:master"
      }
    },
    "escape": null,
    "check": null
  },
  "instructions": [
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 44,
          "end": 47
        }
      },
      "arguments": {
        "span": {
          "start": 48,
          "end": 67
        },
        "value": "RUNC_VERSION=v1.3.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 68,
          "end": 71
        }
      },
      "arguments": {
        "span": {
          "start": 72,
          "end": 97
        },
        "value": "CONTAINERD_VERSION=v2.1.4"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 185,
          "end": 188
        }
      },
      "arguments": {
        "span": {
          "start": 189,
          "end": 221
        },
        "value": "CONTAINERD_ALT_VERSION_20=v2.0.6"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 222,
          "end": 225
        }
      },
      "arguments": {
        "span": {
          "start": 226,
          "end": 259
        },
        "value": "CONTAINERD_ALT_VERSION_17=v1.7.28"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 260,
          "end": 263
        }
      },
      "arguments": {
        "span": {
          "start": 264,
          "end": 287
        },
        "value": "REGISTRY_VERSION=v2.8.3"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 288,
          "end": 291
        }
      },
      "arguments": {
        "span": {
          "start": 292,
          "end": 318
        },
        "value": "ROOTLESSKIT_VERSION=v2.3.5"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 319,
          "end": 322
        }
      },
      "arguments": {
        "span": {
          "start": 323,
          "end": 341
        },
        "value": "CNI_VERSION=v1.8.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 342,
          "end": 345
        }
      },
      "arguments": {
        "span": {
          "start": 346,
          "end": 380
        },
        "value": "STARGZ_SNAPSHOTTER_VERSION=v0.15.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 381,
          "end": 384
        }
      },
      "arguments": {
        "span": {
          "start": 385,
          "end": 407
        },
        "value": "NERDCTL_VERSION=v2.1.2"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 408,
          "end": 411
        }
      },
      "arguments": {
        "span": {
          "start": 412,
          "end": 434
        },
        "value": "DNSNAME_VERSION=v1.3.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 435,
          "end": 438
        }
      },
      "arguments": {
        "span": {
          "start": 439,
          "end": 459
        },
        "value": "NYDUS_VERSION=v2.3.7"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 460,
          "end": 463
        }
      },
      "arguments": {
        "span": {
          "start": 464,
          "end": 506
        },
        "value": "MINIO_VERSION=RELEASE.2025-09-07T16-13-09Z"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 507,
          "end": 510
        }
      },
      "arguments": {
        "span": {
          "start": 511,
          "end": 556
        },
        "value": "MINIO_MC_VERSION=RELEASE.2025-08-13T08-35-41Z"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 557,
          "end": 560
        }
      },
      "arguments": {
        "span": {
          "start": 561,
          "end": 583
        },
        "value": "AZURITE_VERSION=3.33.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 584,
          "end": 587
        }
      },
      "arguments": {
        "span": {
          "start": 588,
          "end": 612
        },
        "value": "GOTESTSUM_VERSION=v1.9.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 613,
          "end": 616
        }
      },
      "arguments": {
        "span": {
          "start": 617,
          "end": 638
        },
        "value": "DELVE_VERSION=v1.23.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 640,
          "end": 643
        }
      },
      "arguments": {
        "span": {
          "start": 644,
          "end": 659
        },
        "value": "GO_VERSION=1.25"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 660,
          "end": 663
        }
      },
      "arguments": {
        "span": {
          "start": 664,
          "end": 683
        },
        "value": "ALPINE_VERSION=3.22"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 684,
          "end": 687
        }
      },
      "arguments": {
        "span": {
          "start": 688,
          "end": 704
        },
        "value": "XX_VERSION=1.7.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 705,
          "end": 708
        }
      },
      "arguments": {
        "span": {
          "start": 709,
          "end": 723
        },
        "value": "BUILDKIT_DEBUG"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 724,
          "end": 727
        }
      },
      "arguments": {
        "span": {
          "start": 728,
          "end": 746
        },
        "value": "EXPORT_BASE=alpine"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 781,
          "end": 785
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 786,
          "end": 822
        },
        "value": "quay.io/minio/minio:${MINIO_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 823,
            "end": 825
          }
        },
        {
          "span": {
            "start": 826,
            "end": 831
          },
          "value": "minio"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 832,
          "end": 836
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 837,
          "end": 873
        },
        "value": "quay.io/minio/mc:${MINIO_MC_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 874,
            "end": 876
          }
        },
        {
          "span": {
            "start": 877,
            "end": 885
          },
          "value": "minio-mc"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 926,
          "end": 930
        }
      },
      "options": [
        {
          "flag_start": 931,
          "name": {
            "span": {
              "start": 933,
              "end": 941
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 942,
              "end": 956
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 957,
          "end": 984
        },
        "value": "tonistiigi/xx:${XX_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 985,
            "end": 987
          }
        },
        {
          "span": {
            "start": 988,
            "end": 990
          },
          "value": "xx"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 1030,
          "end": 1034
        }
      },
      "options": [
        {
          "flag_start": 1035,
          "name": {
            "span": {
              "start": 1037,
              "end": 1045
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 1046,
              "end": 1060
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 1061,
          "end": 1105
        },
        "value": "golang:${GO_VERSION}-alpine${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 1106,
            "end": 1108
          }
        },
        {
          "span": {
            "start": 1109,
            "end": 1117
          },
          "value": "golatest"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 1169,
          "end": 1173
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 1174,
          "end": 1182
        },
        "value": "golatest"
      },
      "as_": [
        {
          "span": {
            "start": 1183,
            "end": 1185
          }
        },
        {
          "span": {
            "start": 1186,
            "end": 1198
          },
          "value": "gobuild-base"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 1199,
          "end": 1202
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 1203,
            "end": 1269
          },
          "value": "apk add --no-cache file bash clang lld musl-dev pkgconfig git make"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 1270,
          "end": 1274
        }
      },
      "options": [
        {
          "flag_start": 1275,
          "name": {
            "span": {
              "start": 1277,
              "end": 1281
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 1282,
          "name": {
            "span": {
              "start": 1284,
              "end": 1288
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 1289,
              "end": 1291
            },
            "value": "xx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 1292,
              "end": 1293
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 1294,
          "end": 1295
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 1323,
          "end": 1327
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 1328,
          "end": 1340
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 1341,
            "end": 1343
          }
        },
        {
          "span": {
            "start": 1344,
            "end": 1348
          },
          "value": "runc"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 1349,
          "end": 1356
        }
      },
      "arguments": {
        "span": {
          "start": 1357,
          "end": 1399
        },
        "value": "$GOPATH/src/github.com/opencontainers/runc"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1400,
          "end": 1403
        }
      },
      "arguments": {
        "span": {
          "start": 1404,
          "end": 1416
        },
        "value": "RUNC_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 1417,
          "end": 1420
        }
      },
      "options": [
        {
          "flag_start": 1421,
          "name": {
            "span": {
              "start": 1423,
              "end": 1435
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 1436,
              "end": 1440
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 1441,
              "end": 1499
            },
            "value": "\"https://github.com/opencontainers/runc.git#$RUNC_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 1500,
          "end": 1501
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1502,
          "end": 1505
        }
      },
      "arguments": {
        "span": {
          "start": 1506,
          "end": 1520
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 1626,
          "end": 1629
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 1630,
            "end": 1791
          },
          "value": "set -e; xx-apk add musl-dev gcc libseccomp-dev libseccomp-static; \\\n  [ \"$(xx-info arch)\" != \"ppc64le\" ] || XX_CC_PREFER_LINKER=ld xx-clang --setup-target-triple"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 1792,
          "end": 1795
        }
      },
      "options": [
        {
          "flag_start": 1796,
          "name": {
            "span": {
              "start": 1798,
              "end": 1803
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 1804,
              "end": 1834
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 1840,
            "end": 1840
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 1841,
            "end": 2103
          },
          "expand": true,
          "value": "  set -ex\n  CGO_ENABLED=1 xx-go build -mod=vendor -ldflags '-extldflags -static' -tags 'apparmor seccomp netgo cgo static_build osusergo' -o /usr/bin/runc ./\n  xx-verify --static /usr/bin/runc\n  if [ \"$(xx-info os)\" = \"linux\" ]; then /usr/bin/runc --version; fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2108,
          "end": 2112
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 2113,
          "end": 2125
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 2126,
            "end": 2128
          }
        },
        {
          "span": {
            "start": 2129,
            "end": 2142
          },
          "value": "buildkit-base"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 2143,
          "end": 2150
        }
      },
      "arguments": {
        "span": {
          "start": 2151,
          "end": 2155
        },
        "value": "/src"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 2156,
          "end": 2159
        }
      },
      "arguments": {
        "span": {
          "start": 2160,
          "end": 2179
        },
        "value": "GOFLAGS=-mod=vendor"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2240,
          "end": 2244
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 2245,
          "end": 2258
        },
        "value": "buildkit-base"
      },
      "as_": [
        {
          "span": {
            "start": 2259,
            "end": 2261
          }
        },
        {
          "span": {
            "start": 2262,
            "end": 2278
          },
          "value": "buildkit-version"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2326,
          "end": 2329
        }
      },
      "options": [
        {
          "flag_start": 2330,
          "name": {
            "span": {
              "start": 2332,
              "end": 2337
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 2338,
              "end": 2346
            },
            "value": "target=."
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 2354,
            "end": 2354
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 2355,
            "end": 3031
          },
          "expand": false,
          "value": "  git rev-parse HEAD 2>/dev/null || {\n    echo >&2 \"Failed to get git revision, make sure --build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=1 is set when building from Git directly\"\n    exit 1\n  }\n  set -ex\n  export PKG=github.com/moby/buildkit VERSION=$(git describe --match 'v[0-9]*' --dirty='.m' --always --tags) REVISION=$(git rev-parse HEAD)$(if ! git diff --no-ext-diff --quiet --exit-code; then echo .m; fi) COMMIT_DATE=$(git show -s --format=%cI HEAD);\n  echo \"-X ${PKG}/version.Version=${VERSION} -X ${PKG}/version.Revision=${REVISION} -X ${PKG}/version.Package=${PKG}\" > /tmp/.ldflags;\n  echo -n \"${VERSION}\" > /tmp/.version;\n  echo -n \"${COMMIT_DATE}\" > /tmp/.commit_date;\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 3070,
          "end": 3074
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 3075,
          "end": 3088
        },
        "value": "buildkit-base"
      },
      "as_": [
        {
          "span": {
            "start": 3089,
            "end": 3091
          }
        },
        {
          "span": {
            "start": 3092,
            "end": 3100
          },
          "value": "buildctl"
        }
      ]
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 3101,
          "end": 3104
        }
      },
      "arguments": {
        "span": {
          "start": 3105,
          "end": 3118
        },
        "value": "CGO_ENABLED=0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3119,
          "end": 3122
        }
      },
      "arguments": {
        "span": {
          "start": 3123,
          "end": 3137
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3138,
          "end": 3141
        }
      },
      "arguments": {
        "span": {
          "start": 3142,
          "end": 3154
        },
        "value": "GOBUILDFLAGS"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3155,
          "end": 3158
        }
      },
      "options": [
        {
          "flag_start": 3159,
          "name": {
            "span": {
              "start": 3161,
              "end": 3166
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3167,
              "end": 3175
            },
            "value": "target=."
          }
        },
        {
          "flag_start": 3176,
          "name": {
            "span": {
              "start": 3178,
              "end": 3183
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3184,
              "end": 3214
            },
            "value": "target=/root/.cache,type=cache"
          }
        },
        {
          "flag_start": 3219,
          "name": {
            "span": {
              "start": 3221,
              "end": 3226
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3227,
              "end": 3256
            },
            "value": "target=/go/pkg/mod,type=cache"
          }
        },
        {
          "flag_start": 3261,
          "name": {
            "span": {
              "start": 3263,
              "end": 3268
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3269,
              "end": 3332
            },
            "value": "source=/tmp/.ldflags,target=/tmp/.ldflags,from=buildkit-version"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 3338,
            "end": 3338
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 3339,
            "end": 3559
          },
          "expand": true,
          "value": "  set -ex\n  xx-go build ${GOBUILDFLAGS} -ldflags \"$(cat /tmp/.ldflags)\" -o /usr/bin/buildctl ./cmd/buildctl\n  xx-verify --static /usr/bin/buildctl\n  if [ \"$(xx-info os)\" = \"linux\" ]; then /usr/bin/buildctl --version; fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 3597,
          "end": 3601
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 3602,
          "end": 3615
        },
        "value": "buildkit-base"
      },
      "as_": [
        {
          "span": {
            "start": 3616,
            "end": 3618
          }
        },
        {
          "span": {
            "start": 3619,
            "end": 3628
          },
          "value": "buildkitd"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3703,
          "end": 3706
        }
      },
      "arguments": {
        "span": {
          "start": 3707,
          "end": 3721
        },
        "value": "BUILDKITD_TAGS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3722,
          "end": 3725
        }
      },
      "arguments": {
        "span": {
          "start": 3726,
          "end": 3740
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3741,
          "end": 3744
        }
      },
      "arguments": {
        "span": {
          "start": 3745,
          "end": 3757
        },
        "value": "GOBUILDFLAGS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3758,
          "end": 3761
        }
      },
      "arguments": {
        "span": {
          "start": 3762,
          "end": 3784
        },
        "value": "VERIFYFLAGS=\"--static\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3785,
          "end": 3788
        }
      },
      "arguments": {
        "span": {
          "start": 3789,
          "end": 3802
        },
        "value": "CGO_ENABLED=0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3803,
          "end": 3806
        }
      },
      "arguments": {
        "span": {
          "start": 3807,
          "end": 3821
        },
        "value": "BUILDKIT_DEBUG"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3822,
          "end": 3825
        }
      },
      "arguments": {
        "span": {
          "start": 3826,
          "end": 3866
        },
        "value": "GOGCFLAGS=${BUILDKIT_DEBUG:+\"all=-N -l\"}"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3867,
          "end": 3870
        }
      },
      "options": [
        {
          "flag_start": 3871,
          "name": {
            "span": {
              "start": 3873,
              "end": 3878
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3879,
              "end": 3887
            },
            "value": "target=."
          }
        },
        {
          "flag_start": 3888,
          "name": {
            "span": {
              "start": 3890,
              "end": 3895
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3896,
              "end": 3926
            },
            "value": "target=/root/.cache,type=cache"
          }
        },
        {
          "flag_start": 3931,
          "name": {
            "span": {
              "start": 3933,
              "end": 3938
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3939,
              "end": 3968
            },
            "value": "target=/go/pkg/mod,type=cache"
          }
        },
        {
          "flag_start": 3973,
          "name": {
            "span": {
              "start": 3975,
              "end": 3980
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3981,
              "end": 4044
            },
            "value": "source=/tmp/.ldflags,target=/tmp/.ldflags,from=buildkit-version"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 4050,
            "end": 4050
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 4051,
            "end": 5111
          },
          "expand": true,
          "value": "  set -ex\n  xx-go build ${GOBUILDFLAGS} -gcflags=\"${GOGCFLAGS}\" -ldflags \"$(cat /tmp/.ldflags) -extldflags '-static'\" -tags \"osusergo netgo static_build seccomp ${BUILDKITD_TAGS}\" -o /usr/bin/buildkitd ./cmd/buildkitd\n  xx-verify ${VERIFYFLAGS} /usr/bin/buildkitd\n\n  # buildkitd --version can be flaky when running through emulation related to\n  # https://github.com/moby/buildkit/pull/4491. Retry a few times as a workaround.\n  set +ex\n  if [ \"$(xx-info os)\" = \"linux\" ]; then\n    max_retries=5\n    for attempt in $(seq \"$max_retries\"); do\n      timeout 3 /usr/bin/buildkitd --version\n      exitcode=$?\n      if ! xx-info is-cross; then\n        exit $exitcode\n      elif [ $exitcode -eq 0 ]; then\n        break\n      elif [ $exitcode -eq 124 ] || [ $exitcode -eq 143 ]; then\n        echo \"WARN: buildkitd --version timed out ($attempt/$max_retries)\"\n        if [ \"$attempt\" -eq \"$max_retries\" ]; then\n          exit $exitcode\n        fi\n      else\n        echo \"ERROR: buildkitd --version failed with exit code $exitcode\"\n      fi\n      sleep 1\n    done\n  fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 5164,
          "end": 5168
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 5169,
          "end": 5181
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 5182,
            "end": 5184
          }
        },
        {
          "span": {
            "start": 5185,
            "end": 5192
          },
          "value": "dnsname"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 5193,
          "end": 5200
        }
      },
      "arguments": {
        "span": {
          "start": 5201,
          "end": 5238
        },
        "value": "/go/src/github.com/containers/dnsname"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5239,
          "end": 5242
        }
      },
      "arguments": {
        "span": {
          "start": 5243,
          "end": 5258
        },
        "value": "DNSNAME_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 5259,
          "end": 5262
        }
      },
      "options": [
        {
          "flag_start": 5263,
          "name": {
            "span": {
              "start": 5265,
              "end": 5277
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 5278,
              "end": 5282
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 5283,
              "end": 5343
            },
            "value": "\"https://github.com/containers/dnsname.git#$DNSNAME_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 5344,
          "end": 5345
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5346,
          "end": 5349
        }
      },
      "arguments": {
        "span": {
          "start": 5350,
          "end": 5364
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5365,
          "end": 5368
        }
      },
      "options": [
        {
          "flag_start": 5369,
          "name": {
            "span": {
              "start": 5371,
              "end": 5376
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 5377,
              "end": 5407
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 5414,
            "end": 5527
          },
          "value": "CGO_ENABLED=0 xx-go build -o /usr/bin/dnsname ./plugins/meta/dnsname && \\\n    xx-verify --static /usr/bin/dnsname"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 5529,
          "end": 5533
        }
      },
      "options": [
        {
          "flag_start": 5534,
          "name": {
            "span": {
              "start": 5536,
              "end": 5544
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 5545,
              "end": 5559
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 5560,
          "end": 5584
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 5585,
            "end": 5587
          }
        },
        {
          "span": {
            "start": 5588,
            "end": 5599
          },
          "value": "cni-plugins"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5600,
          "end": 5603
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 5604,
            "end": 5627
          },
          "value": "apk add --no-cache curl"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 5628,
          "end": 5632
        }
      },
      "options": [
        {
          "flag_start": 5633,
          "name": {
            "span": {
              "start": 5635,
              "end": 5639
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 5640,
              "end": 5642
            },
            "value": "xx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 5643,
              "end": 5644
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 5645,
          "end": 5646
        },
        "value": "/"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5647,
          "end": 5650
        }
      },
      "arguments": {
        "span": {
          "start": 5651,
          "end": 5662
        },
        "value": "CNI_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5663,
          "end": 5666
        }
      },
      "arguments": {
        "span": {
          "start": 5667,
          "end": 5675
        },
        "value": "TARGETOS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5676,
          "end": 5679
        }
      },
      "arguments": {
        "span": {
          "start": 5680,
          "end": 5690
        },
        "value": "TARGETARCH"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5691,
          "end": 5694
        }
      },
      "arguments": {
        "span": {
          "start": 5695,
          "end": 5709
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 5710,
          "end": 5717
        }
      },
      "arguments": {
        "span": {
          "start": 5718,
          "end": 5730
        },
        "value": "/opt/cni/bin"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5731,
          "end": 5734
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 5735,
            "end": 5892
          },
          "value": "curl -fsSL https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-${TARGETOS}-${TARGETARCH}-${CNI_VERSION}.tgz | tar xzv"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5893,
          "end": 5896
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 5897,
            "end": 5942
          },
          "value": "xx-verify --static bridge loopback host-local"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 5943,
          "end": 5947
        }
      },
      "options": [
        {
          "flag_start": 5948,
          "name": {
            "span": {
              "start": 5950,
              "end": 5954
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 5955,
          "name": {
            "span": {
              "start": 5957,
              "end": 5961
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 5962,
              "end": 5969
            },
            "value": "dnsname"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 5970,
              "end": 5986
            },
            "value": "/usr/bin/dnsname"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 5987,
          "end": 6000
        },
        "value": "/opt/cni/bin/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6002,
          "end": 6006
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6007,
          "end": 6014
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 6015,
            "end": 6017
          }
        },
        {
          "span": {
            "start": 6018,
            "end": 6036
          },
          "value": "cni-plugins-export"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6037,
          "end": 6041
        }
      },
      "options": [
        {
          "flag_start": 6042,
          "name": {
            "span": {
              "start": 6044,
              "end": 6048
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6049,
          "name": {
            "span": {
              "start": 6051,
              "end": 6055
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6056,
              "end": 6067
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6068,
              "end": 6087
            },
            "value": "/opt/cni/bin/bridge"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6088,
          "end": 6108
        },
        "value": "/buildkit-cni-bridge"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6109,
          "end": 6113
        }
      },
      "options": [
        {
          "flag_start": 6114,
          "name": {
            "span": {
              "start": 6116,
              "end": 6120
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6121,
          "name": {
            "span": {
              "start": 6123,
              "end": 6127
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6128,
              "end": 6139
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6140,
              "end": 6161
            },
            "value": "/opt/cni/bin/loopback"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6162,
          "end": 6184
        },
        "value": "/buildkit-cni-loopback"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6185,
          "end": 6189
        }
      },
      "options": [
        {
          "flag_start": 6190,
          "name": {
            "span": {
              "start": 6192,
              "end": 6196
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6197,
          "name": {
            "span": {
              "start": 6199,
              "end": 6203
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6204,
              "end": 6215
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6216,
              "end": 6239
            },
            "value": "/opt/cni/bin/host-local"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6240,
          "end": 6264
        },
        "value": "/buildkit-cni-host-local"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6265,
          "end": 6269
        }
      },
      "options": [
        {
          "flag_start": 6270,
          "name": {
            "span": {
              "start": 6272,
              "end": 6276
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6277,
          "name": {
            "span": {
              "start": 6279,
              "end": 6283
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6284,
              "end": 6295
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6296,
              "end": 6317
            },
            "value": "/opt/cni/bin/firewall"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6318,
          "end": 6340
        },
        "value": "/buildkit-cni-firewall"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6342,
          "end": 6346
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6347,
          "end": 6354
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 6355,
            "end": 6357
          }
        },
        {
          "span": {
            "start": 6358,
            "end": 6385
          },
          "value": "cni-plugins-export-squashed"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6386,
          "end": 6390
        }
      },
      "options": [
        {
          "flag_start": 6391,
          "name": {
            "span": {
              "start": 6393,
              "end": 6397
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6398,
              "end": 6416
            },
            "value": "cni-plugins-export"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6417,
              "end": 6418
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6419,
          "end": 6420
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6422,
          "end": 6426
        }
      },
      "options": [
        {
          "flag_start": 6427,
          "name": {
            "span": {
              "start": 6429,
              "end": 6437
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 6438,
              "end": 6452
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 6453,
          "end": 6477
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 6478,
            "end": 6480
          }
        },
        {
          "span": {
            "start": 6481,
            "end": 6494
          },
          "value": "binfmt-filter"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6580,
          "end": 6584
        }
      },
      "options": [
        {
          "flag_start": 6585,
          "name": {
            "span": {
              "start": 6587,
              "end": 6591
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6592,
          "name": {
            "span": {
              "start": 6594,
              "end": 6598
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6599,
              "end": 6708
            },
            "value": "tonistiigi/binfmt:buildkit-v10.0.4-57@sha256:370775754cd56094fff210b44968bf15777aed7eb3302df4f7ab2b647630899e"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6709,
              "end": 6710
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6711,
          "end": 6716
        },
        "value": "/out/"
      }
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 6717,
          "end": 6724
        }
      },
      "arguments": {
        "span": {
          "start": 6725,
          "end": 6730
        },
        "value": "/out/"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6731,
          "end": 6734
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 6735,
            "end": 6810
          },
          "value": "rm -f buildkit-qemu-loongarch64 buildkit-qemu-mips64 buildkit-qemu-mips64el"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6812,
          "end": 6816
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6817,
          "end": 6824
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 6825,
            "end": 6827
          }
        },
        {
          "span": {
            "start": 6828,
            "end": 6842
          },
          "value": "binaries-linux"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6843,
          "end": 6847
        }
      },
      "options": [
        {
          "flag_start": 6848,
          "name": {
            "span": {
              "start": 6850,
              "end": 6854
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6855,
          "name": {
            "span": {
              "start": 6857,
              "end": 6861
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6862,
              "end": 6866
            },
            "value": "runc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6867,
              "end": 6880
            },
            "value": "/usr/bin/runc"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6881,
          "end": 6895
        },
        "value": "/buildkit-runc"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6896,
          "end": 6900
        }
      },
      "options": [
        {
          "flag_start": 6901,
          "name": {
            "span": {
              "start": 6903,
              "end": 6907
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6908,
          "name": {
            "span": {
              "start": 6910,
              "end": 6914
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6915,
              "end": 6928
            },
            "value": "binfmt-filter"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6929,
              "end": 6934
            },
            "value": "/out/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6935,
          "end": 6936
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6937,
          "end": 6941
        }
      },
      "options": [
        {
          "flag_start": 6942,
          "name": {
            "span": {
              "start": 6944,
              "end": 6948
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6949,
          "name": {
            "span": {
              "start": 6951,
              "end": 6955
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6956,
              "end": 6983
            },
            "value": "cni-plugins-export-squashed"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6984,
              "end": 6985
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6986,
          "end": 6987
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6988,
          "end": 6992
        }
      },
      "options": [
        {
          "flag_start": 6993,
          "name": {
            "span": {
              "start": 6995,
              "end": 6999
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7000,
          "name": {
            "span": {
              "start": 7002,
              "end": 7006
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7007,
              "end": 7015
            },
            "value": "buildctl"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7016,
              "end": 7033
            },
            "value": "/usr/bin/buildctl"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7034,
          "end": 7035
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7036,
          "end": 7040
        }
      },
      "options": [
        {
          "flag_start": 7041,
          "name": {
            "span": {
              "start": 7043,
              "end": 7047
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7048,
          "name": {
            "span": {
              "start": 7050,
              "end": 7054
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7055,
              "end": 7064
            },
            "value": "buildkitd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7065,
              "end": 7083
            },
            "value": "/usr/bin/buildkitd"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7084,
          "end": 7085
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7087,
          "end": 7091
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7092,
          "end": 7099
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 7100,
            "end": 7102
          }
        },
        {
          "span": {
            "start": 7103,
            "end": 7118
          },
          "value": "binaries-darwin"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7119,
          "end": 7123
        }
      },
      "options": [
        {
          "flag_start": 7124,
          "name": {
            "span": {
              "start": 7126,
              "end": 7130
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7131,
          "name": {
            "span": {
              "start": 7133,
              "end": 7137
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7138,
              "end": 7146
            },
            "value": "buildctl"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7147,
              "end": 7164
            },
            "value": "/usr/bin/buildctl"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7165,
          "end": 7166
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7168,
          "end": 7172
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7173,
          "end": 7180
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 7181,
            "end": 7183
          }
        },
        {
          "span": {
            "start": 7184,
            "end": 7200
          },
          "value": "binaries-windows"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7201,
          "end": 7205
        }
      },
      "options": [
        {
          "flag_start": 7206,
          "name": {
            "span": {
              "start": 7208,
              "end": 7212
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7213,
          "name": {
            "span": {
              "start": 7215,
              "end": 7219
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7220,
              "end": 7228
            },
            "value": "buildctl"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7229,
              "end": 7246
            },
            "value": "/usr/bin/buildctl"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7247,
          "end": 7260
        },
        "value": "/buildctl.exe"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7261,
          "end": 7265
        }
      },
      "options": [
        {
          "flag_start": 7266,
          "name": {
            "span": {
              "start": 7268,
              "end": 7272
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7273,
          "name": {
            "span": {
              "start": 7275,
              "end": 7279
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7280,
              "end": 7289
            },
            "value": "buildkitd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7290,
              "end": 7308
            },
            "value": "/usr/bin/buildkitd"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7309,
          "end": 7323
        },
        "value": "/buildkitd.exe"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7325,
          "end": 7329
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7330,
          "end": 7337
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 7338,
            "end": 7340
          }
        },
        {
          "span": {
            "start": 7341,
            "end": 7357
          },
          "value": "binaries-freebsd"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7358,
          "end": 7362
        }
      },
      "options": [
        {
          "flag_start": 7363,
          "name": {
            "span": {
              "start": 7365,
              "end": 7369
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7370,
          "name": {
            "span": {
              "start": 7372,
              "end": 7376
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7377,
              "end": 7386
            },
            "value": "buildkitd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7387,
              "end": 7405
            },
            "value": "/usr/bin/buildkitd"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7406,
          "end": 7407
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7408,
          "end": 7412
        }
      },
      "options": [
        {
          "flag_start": 7413,
          "name": {
            "span": {
              "start": 7415,
              "end": 7419
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7420,
          "name": {
            "span": {
              "start": 7422,
              "end": 7426
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7427,
              "end": 7435
            },
            "value": "buildctl"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7436,
              "end": 7453
            },
            "value": "/usr/bin/buildctl"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7454,
          "end": 7455
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7457,
          "end": 7461
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7462,
          "end": 7480
        },
        "value": "binaries-$TARGETOS"
      },
      "as_": [
        {
          "span": {
            "start": 7481,
            "end": 7483
          }
        },
        {
          "span": {
            "start": 7484,
            "end": 7492
          },
          "value": "binaries"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7557,
          "end": 7560
        }
      },
      "arguments": {
        "span": {
          "start": 7561,
          "end": 7590
        },
        "value": "BUILDKIT_SBOM_SCAN_STAGE=true"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7592,
          "end": 7596
        }
      },
      "options": [
        {
          "flag_start": 7597,
          "name": {
            "span": {
              "start": 7599,
              "end": 7607
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 7608,
              "end": 7622
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 7623,
          "end": 7647
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 7648,
            "end": 7650
          }
        },
        {
          "span": {
            "start": 7651,
            "end": 7659
          },
          "value": "releaser"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7660,
          "end": 7663
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 7664,
            "end": 7691
          },
          "value": "apk add --no-cache tar gzip"
        }
      },
      "here_docs": []
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 7692,
          "end": 7699
        }
      },
      "arguments": {
        "span": {
          "start": 7700,
          "end": 7705
        },
        "value": "/work"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7706,
          "end": 7709
        }
      },
      "arguments": {
        "span": {
          "start": 7710,
          "end": 7724
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7725,
          "end": 7728
        }
      },
      "options": [
        {
          "flag_start": 7729,
          "name": {
            "span": {
              "start": 7731,
              "end": 7736
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7737,
              "end": 7750
            },
            "value": "from=binaries"
          }
        },
        {
          "flag_start": 7755,
          "name": {
            "span": {
              "start": 7757,
              "end": 7762
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7763,
              "end": 7826
            },
            "value": "source=/tmp/.version,target=/tmp/.version,from=buildkit-version"
          }
        },
        {
          "flag_start": 7831,
          "name": {
            "span": {
              "start": 7833,
              "end": 7838
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7839,
              "end": 7910
            },
            "value": "source=/tmp/.commit_date,target=/tmp/.commit_date,from=buildkit-version"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 7915,
            "end": 8098
          },
          "value": "mkdir -p /out && tar czvf \"/out/buildkit-$(cat /tmp/.version).$(echo $TARGETPLATFORM | sed 's/\\//-/g').tar.gz\" --mtime=\"$(cat /tmp/.commit_date)\" --sort=name --transform 's/^./bin/' ."
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8100,
          "end": 8104
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8105,
          "end": 8112
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 8113,
            "end": 8115
          }
        },
        {
          "span": {
            "start": 8116,
            "end": 8123
          },
          "value": "release"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 8124,
          "end": 8128
        }
      },
      "options": [
        {
          "flag_start": 8129,
          "name": {
            "span": {
              "start": 8131,
              "end": 8135
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 8136,
          "name": {
            "span": {
              "start": 8138,
              "end": 8142
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 8143,
              "end": 8151
            },
            "value": "releaser"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 8152,
              "end": 8157
            },
            "value": "/out/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 8158,
          "end": 8159
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8161,
          "end": 8165
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8166,
          "end": 8190
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 8191,
            "end": 8193
          }
        },
        {
          "span": {
            "start": 8194,
            "end": 8216
          },
          "value": "buildkit-export-alpine"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8217,
          "end": 8220
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 8221,
            "end": 8337
          },
          "value": "apk add --no-cache fuse3 git openssh openssl pigz xz iptables ip6tables \\\n  && ln -s fusermount3 /usr/bin/fusermount"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 8338,
          "end": 8342
        }
      },
      "options": [
        {
          "flag_start": 8343,
          "name": {
            "span": {
              "start": 8345,
              "end": 8349
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 8350,
              "end": 8401
            },
            "value": "examples/buildctl-daemonless/buildctl-daemonless.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 8402,
          "end": 8411
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 8412,
          "end": 8418
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 8419,
              "end": 8436
            },
            "value": "/var/lib/buildkit"
          }
        ]
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8438,
          "end": 8442
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8443,
          "end": 8455
        },
        "value": "ubuntu:24.04"
      },
      "as_": [
        {
          "span": {
            "start": 8456,
            "end": 8458
          }
        },
        {
          "span": {
            "start": 8459,
            "end": 8481
          },
          "value": "buildkit-export-ubuntu"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8482,
          "end": 8485
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 8486,
            "end": 8705
          },
          "value": "apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    fuse3 \\\n    git \\\n    openssh-client \\\n    openssl \\\n    pigz \\\n    xz-utils \\\n    iptables \\\n    ca-certificates \\\n  && rm -rf /var/lib/apt/lists/*"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 8706,
          "end": 8710
        }
      },
      "options": [
        {
          "flag_start": 8711,
          "name": {
            "span": {
              "start": 8713,
              "end": 8717
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 8718,
              "end": 8769
            },
            "value": "examples/buildctl-daemonless/buildctl-daemonless.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 8770,
          "end": 8779
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 8780,
          "end": 8786
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 8787,
              "end": 8804
            },
            "value": "/var/lib/buildkit"
          }
        ]
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8806,
          "end": 8810
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8811,
          "end": 8841
        },
        "value": "buildkit-export-${EXPORT_BASE}"
      },
      "as_": [
        {
          "span": {
            "start": 8842,
            "end": 8844
          }
        },
        {
          "span": {
            "start": 8845,
            "end": 8860
          },
          "value": "buildkit-export"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8861,
          "end": 8864
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 8865,
            "end": 8913
          },
          "value": "mkdir -p /etc/cdi /var/run/cdi /etc/buildkit/cdi"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8915,
          "end": 8919
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8920,
          "end": 8932
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 8933,
            "end": 8935
          }
        },
        {
          "span": {
            "start": 8936,
            "end": 8952
          },
          "value": "containerd-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 8953,
          "end": 8960
        }
      },
      "arguments": {
        "span": {
          "start": 8961,
          "end": 9001
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9002,
          "end": 9005
        }
      },
      "arguments": {
        "span": {
          "start": 9006,
          "end": 9020
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 9021,
          "end": 9024
        }
      },
      "arguments": {
        "span": {
          "start": 9025,
          "end": 9100
        },
        "value": "CGO_ENABLED=1 CGO_LDFLAGS=\"-fuse-ld=lld\" BUILDTAGS=no_btrfs GO111MODULE=off"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9101,
          "end": 9104
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 9105,
            "end": 9144
          },
          "value": "xx-apk add musl-dev gcc && xx-go --wrap"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 9145,
          "end": 9149
        }
      },
      "options": [
        {
          "flag_start": 9150,
          "name": {
            "span": {
              "start": 9152,
              "end": 9157
            },
            "value": "chmod"
          },
          "value": {
            "span": {
              "start": 9158,
              "end": 9161
            },
            "value": "755"
          }
        }
      ],
      "src": [
        {
          "here_doc": {
            "span": {
              "start": 9179,
              "end": 9663
            },
            "expand": true,
            "value": "#!/bin/sh\nset -ex\nmkdir /out\nif [ \"$(xx-info os)\" = \"linux\" ]; then\n  make bin/containerd\n  make bin/containerd-shim-runc-v2\n  mv bin/containerd bin/containerd-shim* /out\nelse\n  CGO_ENABLED=0 make STATIC=1 binaries\n  if [ \"$(xx-info os)\" = \"windows\" ]; then\n    mv bin/containerd.exe /out\n  else\n    mv bin/containerd /out\n  fi\n  # No shim binary is built for FreeBSD, since containerd v2.0.\n  if ls bin/containerd-shim* >/dev/null 2>&1; then\n    mv bin/containerd-shim* /out\n  fi\nfi\n"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 9169,
          "end": 9178
        },
        "value": "/build.sh"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9668,
          "end": 9672
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9673,
          "end": 9689
        },
        "value": "containerd-build"
      },
      "as_": [
        {
          "span": {
            "start": 9690,
            "end": 9692
          }
        },
        {
          "span": {
            "start": 9693,
            "end": 9703
          },
          "value": "containerd"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 9704,
          "end": 9711
        }
      },
      "arguments": {
        "span": {
          "start": 9712,
          "end": 9752
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9753,
          "end": 9756
        }
      },
      "arguments": {
        "span": {
          "start": 9757,
          "end": 9775
        },
        "value": "CONTAINERD_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 9776,
          "end": 9779
        }
      },
      "options": [
        {
          "flag_start": 9780,
          "name": {
            "span": {
              "start": 9782,
              "end": 9794
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 9795,
              "end": 9799
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 9800,
              "end": 9866
            },
            "value": "\"https://github.com/containerd/containerd.git#$CONTAINERD_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 9867,
          "end": 9868
        },
        "value": "."
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9869,
          "end": 9872
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 9873,
            "end": 9882
          },
          "value": "/build.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9949,
          "end": 9953
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9954,
          "end": 9970
        },
        "value": "containerd-build"
      },
      "as_": [
        {
          "span": {
            "start": 9971,
            "end": 9973
          }
        },
        {
          "span": {
            "start": 9974,
            "end": 9991
          },
          "value": "containerd-alt-20"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 9992,
          "end": 9999
        }
      },
      "arguments": {
        "span": {
          "start": 10000,
          "end": 10040
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10041,
          "end": 10044
        }
      },
      "arguments": {
        "span": {
          "start": 10045,
          "end": 10070
        },
        "value": "CONTAINERD_ALT_VERSION_20"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 10071,
          "end": 10074
        }
      },
      "options": [
        {
          "flag_start": 10075,
          "name": {
            "span": {
              "start": 10077,
              "end": 10089
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 10090,
              "end": 10094
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 10095,
              "end": 10168
            },
            "value": "\"https://github.com/containerd/containerd.git#$CONTAINERD_ALT_VERSION_20\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 10169,
          "end": 10170
        },
        "value": "."
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10171,
          "end": 10174
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 10175,
            "end": 10184
          },
          "value": "/build.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10251,
          "end": 10255
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10256,
          "end": 10272
        },
        "value": "containerd-build"
      },
      "as_": [
        {
          "span": {
            "start": 10273,
            "end": 10275
          }
        },
        {
          "span": {
            "start": 10276,
            "end": 10293
          },
          "value": "containerd-alt-17"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 10294,
          "end": 10301
        }
      },
      "arguments": {
        "span": {
          "start": 10302,
          "end": 10342
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10343,
          "end": 10346
        }
      },
      "arguments": {
        "span": {
          "start": 10347,
          "end": 10372
        },
        "value": "CONTAINERD_ALT_VERSION_17"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 10373,
          "end": 10376
        }
      },
      "options": [
        {
          "flag_start": 10377,
          "name": {
            "span": {
              "start": 10379,
              "end": 10391
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 10392,
              "end": 10396
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 10397,
              "end": 10470
            },
            "value": "\"https://github.com/containerd/containerd.git#$CONTAINERD_ALT_VERSION_17\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 10471,
          "end": 10472
        },
        "value": "."
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10473,
          "end": 10476
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 10477,
            "end": 10486
          },
          "value": "/build.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10488,
          "end": 10492
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10493,
          "end": 10505
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 10506,
            "end": 10508
          }
        },
        {
          "span": {
            "start": 10509,
            "end": 10517
          },
          "value": "registry"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 10518,
          "end": 10525
        }
      },
      "arguments": {
        "span": {
          "start": 10526,
          "end": 10564
        },
        "value": "/go/src/github.com/docker/distribution"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10565,
          "end": 10568
        }
      },
      "arguments": {
        "span": {
          "start": 10569,
          "end": 10585
        },
        "value": "REGISTRY_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 10586,
          "end": 10589
        }
      },
      "options": [
        {
          "flag_start": 10590,
          "name": {
            "span": {
              "start": 10592,
              "end": 10604
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 10605,
              "end": 10609
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 10610,
              "end": 10678
            },
            "value": "\"https://github.com/distribution/distribution.git#$REGISTRY_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 10679,
          "end": 10680
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10681,
          "end": 10684
        }
      },
      "arguments": {
        "span": {
          "start": 10685,
          "end": 10699
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10700,
          "end": 10703
        }
      },
      "options": [
        {
          "flag_start": 10704,
          "name": {
            "span": {
              "start": 10706,
              "end": 10711
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10712,
              "end": 10742
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 10748,
            "end": 10748
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 10749,
            "end": 11021
          },
          "expand": true,
          "value": "  set -ex\n  mkdir /out\n  export GOPATH=\"$(pwd)/Godeps/_workspace:$GOPATH\"\n  GO111MODULE=off CGO_ENABLED=0 xx-go build -o /out/registry ./cmd/registry\n  xx-verify --static /out/registry\n  if [ \"$(xx-info os)\" = \"windows\" ]; then\n    mv /out/registry /out/registry.exe\n  fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 11026,
          "end": 11030
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 11031,
          "end": 11043
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 11044,
            "end": 11046
          }
        },
        {
          "span": {
            "start": 11047,
            "end": 11058
          },
          "value": "rootlesskit"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 11059,
          "end": 11066
        }
      },
      "arguments": {
        "span": {
          "start": 11067,
          "end": 11117
        },
        "value": "/go/src/github.com/rootless-containers/rootlesskit"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11118,
          "end": 11121
        }
      },
      "arguments": {
        "span": {
          "start": 11122,
          "end": 11141
        },
        "value": "ROOTLESSKIT_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 11142,
          "end": 11145
        }
      },
      "options": [
        {
          "flag_start": 11146,
          "name": {
            "span": {
              "start": 11148,
              "end": 11160
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 11161,
              "end": 11165
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 11166,
              "end": 11243
            },
            "value": "\"https://github.com/rootless-containers/rootlesskit.git#$ROOTLESSKIT_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 11244,
          "end": 11245
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11246,
          "end": 11249
        }
      },
      "arguments": {
        "span": {
          "start": 11250,
          "end": 11264
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11265,
          "end": 11268
        }
      },
      "options": [
        {
          "flag_start": 11270,
          "name": {
            "span": {
              "start": 11272,
              "end": 11277
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11278,
              "end": 11308
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 11313,
            "end": 11411
          },
          "value": "CGO_ENABLED=0 xx-go build -o /rootlesskit ./cmd/rootlesskit && \\\n  xx-verify --static /rootlesskit"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 11413,
          "end": 11417
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 11418,
          "end": 11430
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 11431,
            "end": 11433
          }
        },
        {
          "span": {
            "start": 11434,
            "end": 11452
          },
          "value": "stargz-snapshotter"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 11453,
          "end": 11460
        }
      },
      "arguments": {
        "span": {
          "start": 11461,
          "end": 11509
        },
        "value": "/go/src/github.com/containerd/stargz-snapshotter"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11510,
          "end": 11513
        }
      },
      "arguments": {
        "span": {
          "start": 11514,
          "end": 11540
        },
        "value": "STARGZ_SNAPSHOTTER_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 11541,
          "end": 11544
        }
      },
      "options": [
        {
          "flag_start": 11545,
          "name": {
            "span": {
              "start": 11547,
              "end": 11559
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 11560,
              "end": 11564
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 11565,
              "end": 11647
            },
            "value": "\"https://github.com/containerd/stargz-snapshotter.git#$STARGZ_SNAPSHOTTER_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 11648,
          "end": 11649
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11650,
          "end": 11653
        }
      },
      "arguments": {
        "span": {
          "start": 11654,
          "end": 11668
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11669,
          "end": 11672
        }
      },
      "options": [
        {
          "flag_start": 11673,
          "name": {
            "span": {
              "start": 11675,
              "end": 11680
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11681,
              "end": 11711
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 11716,
            "end": 11877
          },
          "value": "xx-go --wrap && \\\n  mkdir /out && CGO_ENABLED=0 PREFIX=/out/ make && \\\n  xx-verify --static /out/containerd-stargz-grpc && \\\n  xx-verify --static /out/ctr-remote"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 11879,
          "end": 11883
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 11884,
          "end": 11896
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 11897,
            "end": 11899
          }
        },
        {
          "span": {
            "start": 11900,
            "end": 11905
          },
          "value": "nydus"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11906,
          "end": 11909
        }
      },
      "arguments": {
        "span": {
          "start": 11910,
          "end": 11923
        },
        "value": "NYDUS_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11924,
          "end": 11927
        }
      },
      "arguments": {
        "span": {
          "start": 11928,
          "end": 11936
        },
        "value": "TARGETOS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11937,
          "end": 11940
        }
      },
      "arguments": {
        "span": {
          "start": 11941,
          "end": 11951
        },
        "value": "TARGETARCH"
      }
    },
    {
      "kind": "SHELL",
      "shell": {
        "span": {
          "start": 11952,
          "end": 11957
        }
      },
      "arguments": [
        {
          "span": {
            "start": 11960,
            "end": 11969
          },
          "value": "/bin/bash"
        },
        {
          "span": {
            "start": 11973,
            "end": 11975
          },
          "value": "-c"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11978,
          "end": 11981
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 11982,
            "end": 12119
          },
          "value": "wget https://github.com/dragonflyoss/image-service/releases/download/$NYDUS_VERSION/nydus-static-$NYDUS_VERSION-$TARGETOS-$TARGETARCH.tgz"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12120,
          "end": 12123
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 12124,
            "end": 12224
          },
          "value": "mkdir -p /out/nydus-static && tar xzvf nydus-static-$NYDUS_VERSION-$TARGETOS-$TARGETARCH.tgz -C /out"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12226,
          "end": 12230
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12231,
          "end": 12243
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 12244,
            "end": 12246
          }
        },
        {
          "span": {
            "start": 12247,
            "end": 12256
          },
          "value": "gotestsum"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 12257,
          "end": 12260
        }
      },
      "arguments": {
        "span": {
          "start": 12261,
          "end": 12278
        },
        "value": "GOTESTSUM_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 12279,
          "end": 12282
        }
      },
      "arguments": {
        "span": {
          "start": 12283,
          "end": 12297
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12298,
          "end": 12301
        }
      },
      "options": [
        {
          "flag_start": 12302,
          "name": {
            "span": {
              "start": 12304,
              "end": 12309
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12310,
              "end": 12340
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 12346,
            "end": 12346
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 12347,
            "end": 12687
          },
          "expand": true,
          "value": "  set -ex\n  xx-go install \"gotest.tools/gotestsum@${GOTESTSUM_VERSION}\"\n  xx-go install \"github.com/wadey/gocovmerge@latest\"\n  mkdir /out\n  if ! xx-info is-cross; then\n    /go/bin/gotestsum --version\n    mv /go/bin/gotestsum /out\n    mv /go/bin/gocovmerge /out\n  else\n    mv /go/bin/*/gotestsum* /out\n    mv /go/bin/*/gocovmerge* /out\n  fi\n"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 12691,
          "end": 12695
        }
      },
      "options": [
        {
          "flag_start": 12696,
          "name": {
            "span": {
              "start": 12698,
              "end": 12703
            },
            "value": "chmod"
          },
          "value": {
            "span": {
              "start": 12704,
              "end": 12707
            },
            "value": "755"
          }
        }
      ],
      "src": [
        {
          "here_doc": {
            "span": {
              "start": 12739,
              "end": 13312
            },
            "expand": false,
            "value": "#!/bin/sh\nset -x\nif [ -z \"$GO_TEST_COVERPROFILE\" ]; then\n  exec gotestsum \"$@\"\nfi\ncoverdir=\"$(dirname \"$GO_TEST_COVERPROFILE\")\"\nmkdir -p \"$coverdir/helpers\"\ngotestsum \"$@\" \"-coverprofile=$GO_TEST_COVERPROFILE\"\necode=$?\ngo tool covdata textfmt -i=$coverdir/helpers -o=$coverdir/helpers-report.txt\ngocovmerge \"$coverdir/helpers-report.txt\" \"$GO_TEST_COVERPROFILE\" > \"$coverdir/merged-report.txt\"\nmv \"$coverdir/merged-report.txt\" \"$GO_TEST_COVERPROFILE\"\nrm \"$coverdir/helpers-report.txt\"\nfor f in \"$coverdir/helpers\"/*; do\n  rm \"$f\"\ndone\nrmdir \"$coverdir/helpers\"\nexit $ecode\n"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 12716,
          "end": 12738
        },
        "value": "/out/gotestsumandcover"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13361,
          "end": 13365
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13366,
          "end": 13378
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 13379,
            "end": 13381
          }
        },
        {
          "span": {
            "start": 13382,
            "end": 13385
          },
          "value": "dlv"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 13386,
          "end": 13389
        }
      },
      "arguments": {
        "span": {
          "start": 13390,
          "end": 13403
        },
        "value": "DELVE_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 13404,
          "end": 13407
        }
      },
      "arguments": {
        "span": {
          "start": 13408,
          "end": 13422
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13423,
          "end": 13426
        }
      },
      "options": [
        {
          "flag_start": 13427,
          "name": {
            "span": {
              "start": 13429,
              "end": 13434
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13435,
              "end": 13467
            },
            "value": "target=/root/.cache,type=cache"
          }
        },
        {
          "flag_start": 13471,
          "name": {
            "span": {
              "start": 13473,
              "end": 13478
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13479,
              "end": 13508
            },
            "value": "target=/go/pkg/mod,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 13514,
            "end": 13514
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 13515,
            "end": 13914
          },
          "expand": true,
          "value": "  set -ex\n  mkdir /out\n  if [ \"$(xx-info os)\" = \"freebsd\" ]; then\n    echo \"WARN: dlv requires cgo enabled on FreeBSD, skipping: https://github.com/moby/buildkit/pull/5497#issuecomment-2462031339\"\n    exit 0\n  fi\n  xx-go install \"github.com/go-delve/delve/cmd/dlv@${DELVE_VERSION}\"\n  if ! xx-info is-cross; then\n    /go/bin/dlv version\n    mv /go/bin/dlv /out\n  else\n    mv /go/bin/*/dlv* /out\n  fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13919,
          "end": 13923
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13924,
          "end": 13939
        },
        "value": "buildkit-export"
      },
      "as_": [
        {
          "span": {
            "start": 13940,
            "end": 13942
          }
        },
        {
          "span": {
            "start": 13943,
            "end": 13957
          },
          "value": "buildkit-linux"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 13958,
          "end": 13962
        }
      },
      "options": [
        {
          "flag_start": 13963,
          "name": {
            "span": {
              "start": 13965,
              "end": 13969
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 13970,
          "name": {
            "span": {
              "start": 13972,
              "end": 13976
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 13977,
              "end": 13985
            },
            "value": "binaries"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 13986,
              "end": 13987
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 13988,
          "end": 13997
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 13998,
          "end": 14001
        }
      },
      "arguments": {
        "span": {
          "start": 14002,
          "end": 14032
        },
        "value": "BUILDKIT_SETUP_CGROUPV2_ROOT=1"
      }
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 14033,
          "end": 14043
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 14044,
            "end": 14057
          },
          "value": [
            {
              "span": {
                "start": 14046,
                "end": 14055
              },
              "value": "buildkitd"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14059,
          "end": 14063
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14064,
          "end": 14078
        },
        "value": "buildkit-linux"
      },
      "as_": [
        {
          "span": {
            "start": 14079,
            "end": 14081
          }
        },
        {
          "span": {
            "start": 14082,
            "end": 14102
          },
          "value": "buildkit-linux-debug"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14103,
          "end": 14107
        }
      },
      "options": [
        {
          "flag_start": 14108,
          "name": {
            "span": {
              "start": 14110,
              "end": 14114
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14115,
          "name": {
            "span": {
              "start": 14117,
              "end": 14121
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14122,
              "end": 14125
            },
            "value": "dlv"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14126,
              "end": 14134
            },
            "value": "/out/dlv"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14135,
          "end": 14147
        },
        "value": "/usr/bin/dlv"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14148,
          "end": 14152
        }
      },
      "options": [
        {
          "flag_start": 14153,
          "name": {
            "span": {
              "start": 14155,
              "end": 14159
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14160,
          "name": {
            "span": {
              "start": 14162,
              "end": 14167
            },
            "value": "chmod"
          },
          "value": {
            "span": {
              "start": 14168,
              "end": 14171
            },
            "value": "755"
          }
        }
      ],
      "src": [
        {
          "here_doc": {
            "span": {
              "start": 14200,
              "end": 14378
            },
            "expand": true,
            "value": "#!/bin/sh\nexec dlv exec /usr/bin/buildkitd \\\\\n  --api-version=2 \\\\\n  -l 0.0.0.0:\\${DELVE_PORT:-5000} \\\\\n  --headless=true \\\\\n  --accept-multiclient \\\\\n  --continue \\\\\n  -- \"\\$@\"\n"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14178,
          "end": 14199
        },
        "value": "/docker-entrypoint.sh"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 14382,
          "end": 14385
        }
      },
      "arguments": {
        "span": {
          "start": 14386,
          "end": 14401
        },
        "value": "DELVE_PORT=5000"
      }
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 14402,
          "end": 14412
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 14413,
            "end": 14438
          },
          "value": [
            {
              "span": {
                "start": 14415,
                "end": 14436
              },
              "value": "/docker-entrypoint.sh"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14440,
          "end": 14444
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14445,
          "end": 14453
        },
        "value": "binaries"
      },
      "as_": [
        {
          "span": {
            "start": 14454,
            "end": 14456
          }
        },
        {
          "span": {
            "start": 14457,
            "end": 14472
          },
          "value": "buildkit-darwin"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14474,
          "end": 14478
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14479,
          "end": 14487
        },
        "value": "binaries"
      },
      "as_": [
        {
          "span": {
            "start": 14488,
            "end": 14490
          }
        },
        {
          "span": {
            "start": 14491,
            "end": 14507
          },
          "value": "buildkit-freebsd"
        }
      ]
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 14508,
          "end": 14518
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 14519,
            "end": 14533
          },
          "value": [
            {
              "span": {
                "start": 14521,
                "end": 14531
              },
              "value": "/buildkitd"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14535,
          "end": 14539
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14540,
          "end": 14548
        },
        "value": "binaries"
      },
      "as_": [
        {
          "span": {
            "start": 14549,
            "end": 14551
          }
        },
        {
          "span": {
            "start": 14552,
            "end": 14568
          },
          "value": "buildkit-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14570,
          "end": 14574
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14575,
          "end": 14582
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 14583,
            "end": 14585
          }
        },
        {
          "span": {
            "start": 14586,
            "end": 14603
          },
          "value": "binaries-for-test"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14604,
          "end": 14608
        }
      },
      "options": [
        {
          "flag_start": 14609,
          "name": {
            "span": {
              "start": 14611,
              "end": 14615
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14616,
          "name": {
            "span": {
              "start": 14618,
              "end": 14622
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14623,
              "end": 14632
            },
            "value": "gotestsum"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14633,
              "end": 14637
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14638,
          "end": 14639
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14640,
          "end": 14644
        }
      },
      "options": [
        {
          "flag_start": 14645,
          "name": {
            "span": {
              "start": 14647,
              "end": 14651
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14652,
          "name": {
            "span": {
              "start": 14654,
              "end": 14658
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14659,
              "end": 14662
            },
            "value": "dlv"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14663,
              "end": 14667
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14668,
          "end": 14669
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14670,
          "end": 14674
        }
      },
      "options": [
        {
          "flag_start": 14675,
          "name": {
            "span": {
              "start": 14677,
              "end": 14681
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14682,
          "name": {
            "span": {
              "start": 14684,
              "end": 14688
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14689,
              "end": 14697
            },
            "value": "registry"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14698,
              "end": 14702
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14703,
          "end": 14704
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14705,
          "end": 14709
        }
      },
      "options": [
        {
          "flag_start": 14710,
          "name": {
            "span": {
              "start": 14712,
              "end": 14716
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14717,
          "name": {
            "span": {
              "start": 14719,
              "end": 14723
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14724,
              "end": 14734
            },
            "value": "containerd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14735,
              "end": 14739
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14740,
          "end": 14741
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14742,
          "end": 14746
        }
      },
      "options": [
        {
          "flag_start": 14747,
          "name": {
            "span": {
              "start": 14749,
              "end": 14753
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14754,
          "name": {
            "span": {
              "start": 14756,
              "end": 14760
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14761,
              "end": 14769
            },
            "value": "binaries"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14770,
              "end": 14771
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14772,
          "end": 14773
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14775,
          "end": 14779
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14780,
          "end": 14793
        },
        "value": "buildkit-base"
      },
      "as_": [
        {
          "span": {
            "start": 14794,
            "end": 14796
          }
        },
        {
          "span": {
            "start": 14797,
            "end": 14819
          },
          "value": "integration-tests-base"
        }
      ]
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 14820,
          "end": 14823
        }
      },
      "arguments": {
        "span": {
          "start": 14824,
          "end": 14872
        },
        "value": "BUILDKIT_INTEGRATION_ROOTLESS_IDPAIR=\"1000:1000\""
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14873,
          "end": 14876
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 14877,
            "end": 15346
          },
          "value": "apk add --no-cache shadow shadow-uidmap sudo vim iptables ip6tables dnsmasq fuse curl git-daemon openssh-client openssl slirp4netns iproute2 \\\n  && useradd --create-home --home-dir /home/user --uid 1000 -s /bin/sh user \\\n  && echo \"XDG_RUNTIME_DIR=/run/user/1000; export XDG_RUNTIME_DIR\" >> /home/user/.profile \\\n  && mkdir -m 0700 -p /run/user/1000 \\\n  && chown -R user /run/user/1000 /home/user \\\n  && ln -s /sbin/iptables-legacy /usr/bin/iptables \\\n  && xx-go --wrap"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 15347,
          "end": 15350
        }
      },
      "arguments": {
        "span": {
          "start": 15351,
          "end": 15366
        },
        "value": "NERDCTL_VERSION"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15367,
          "end": 15370
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 15371,
            "end": 15574
          },
          "value": "curl -fsSL https://raw.githubusercontent.com/containerd/nerdctl/$NERDCTL_VERSION/extras/rootless/containerd-rootless.sh > /usr/bin/containerd-rootless.sh \\\n  && chmod 0755 /usr/bin/containerd-rootless.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 15575,
          "end": 15578
        }
      },
      "arguments": {
        "span": {
          "start": 15579,
          "end": 15594
        },
        "value": "AZURITE_VERSION"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15595,
          "end": 15598
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 15599,
            "end": 15677
          },
          "value": "apk add --no-cache nodejs npm \\\n  && npm install -g azurite@${AZURITE_VERSION}"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15813,
          "end": 15816
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 15817,
            "end": 15953
          },
          "value": "curl -fsSL https://raw.githubusercontent.com/moby/moby/v25.0.1/hack/dind > /docker-entrypoint.sh \\\n  && chmod 0755 /docker-entrypoint.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 15954,
          "end": 15964
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 15965,
            "end": 15990
          },
          "value": [
            {
              "span": {
                "start": 15967,
                "end": 15988
              },
              "value": "/docker-entrypoint.sh"
            }
          ]
        }
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16068,
          "end": 16071
        }
      },
      "arguments": {
        "span": {
          "start": 16072,
          "end": 16195
        },
        "value": "BUILDKIT_INTEGRATION_CONTAINERD_EXTRA=\"containerd-2.0=/opt/containerd-alt-20/bin,containerd-1.7=/opt/containerd-alt-17/bin\""
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16196,
          "end": 16199
        }
      },
      "arguments": {
        "span": {
          "start": 16200,
          "end": 16239
        },
        "value": "BUILDKIT_INTEGRATION_SNAPSHOTTER=stargz"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16240,
          "end": 16243
        }
      },
      "arguments": {
        "span": {
          "start": 16244,
          "end": 16274
        },
        "value": "BUILDKIT_SETUP_CGROUPV2_ROOT=1"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16275,
          "end": 16278
        }
      },
      "arguments": {
        "span": {
          "start": 16279,
          "end": 16292
        },
        "value": "CGO_ENABLED=0"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16293,
          "end": 16296
        }
      },
      "arguments": {
        "span": {
          "start": 16297,
          "end": 16330
        },
        "value": "GOTESTSUM_FORMAT=standard-verbose"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16331,
          "end": 16335
        }
      },
      "options": [
        {
          "flag_start": 16336,
          "name": {
            "span": {
              "start": 16338,
              "end": 16342
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16343,
          "name": {
            "span": {
              "start": 16345,
              "end": 16349
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16350,
              "end": 16359
            },
            "value": "gotestsum"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16360,
              "end": 16364
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16365,
          "end": 16374
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16375,
          "end": 16379
        }
      },
      "options": [
        {
          "flag_start": 16380,
          "name": {
            "span": {
              "start": 16382,
              "end": 16386
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16387,
          "name": {
            "span": {
              "start": 16389,
              "end": 16393
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16394,
              "end": 16399
            },
            "value": "minio"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16400,
              "end": 16414
            },
            "value": "/usr/bin/minio"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16415,
          "end": 16424
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16425,
          "end": 16429
        }
      },
      "options": [
        {
          "flag_start": 16430,
          "name": {
            "span": {
              "start": 16432,
              "end": 16436
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16437,
          "name": {
            "span": {
              "start": 16439,
              "end": 16443
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16444,
              "end": 16452
            },
            "value": "minio-mc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16453,
              "end": 16464
            },
            "value": "/usr/bin/mc"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16465,
          "end": 16474
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16475,
          "end": 16479
        }
      },
      "options": [
        {
          "flag_start": 16480,
          "name": {
            "span": {
              "start": 16482,
              "end": 16486
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16487,
          "name": {
            "span": {
              "start": 16489,
              "end": 16493
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16494,
              "end": 16499
            },
            "value": "nydus"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16500,
              "end": 16519
            },
            "value": "/out/nydus-static/*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16520,
          "end": 16529
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16530,
          "end": 16534
        }
      },
      "options": [
        {
          "flag_start": 16535,
          "name": {
            "span": {
              "start": 16537,
              "end": 16541
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16542,
          "name": {
            "span": {
              "start": 16544,
              "end": 16548
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16549,
              "end": 16567
            },
            "value": "stargz-snapshotter"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16568,
              "end": 16574
            },
            "value": "/out/*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16575,
          "end": 16584
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16585,
          "end": 16589
        }
      },
      "options": [
        {
          "flag_start": 16590,
          "name": {
            "span": {
              "start": 16592,
              "end": 16596
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16597,
          "name": {
            "span": {
              "start": 16599,
              "end": 16603
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16604,
              "end": 16615
            },
            "value": "rootlesskit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16616,
              "end": 16628
            },
            "value": "/rootlesskit"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16629,
          "end": 16638
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16639,
          "end": 16643
        }
      },
      "options": [
        {
          "flag_start": 16644,
          "name": {
            "span": {
              "start": 16646,
              "end": 16650
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16651,
          "name": {
            "span": {
              "start": 16653,
              "end": 16657
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16658,
              "end": 16675
            },
            "value": "containerd-alt-20"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16676,
              "end": 16692
            },
            "value": "/out/containerd*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16693,
          "end": 16720
        },
        "value": "/opt/containerd-alt-20/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16721,
          "end": 16725
        }
      },
      "options": [
        {
          "flag_start": 16726,
          "name": {
            "span": {
              "start": 16728,
              "end": 16732
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16733,
          "name": {
            "span": {
              "start": 16735,
              "end": 16739
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16740,
              "end": 16757
            },
            "value": "containerd-alt-17"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16758,
              "end": 16774
            },
            "value": "/out/containerd*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16775,
          "end": 16802
        },
        "value": "/opt/containerd-alt-17/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16803,
          "end": 16807
        }
      },
      "options": [
        {
          "flag_start": 16808,
          "name": {
            "span": {
              "start": 16810,
              "end": 16814
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16815,
          "name": {
            "span": {
              "start": 16817,
              "end": 16821
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16822,
              "end": 16830
            },
            "value": "registry"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16831,
              "end": 16835
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16836,
          "end": 16845
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16846,
          "end": 16850
        }
      },
      "options": [
        {
          "flag_start": 16851,
          "name": {
            "span": {
              "start": 16853,
              "end": 16857
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16858,
          "name": {
            "span": {
              "start": 16860,
              "end": 16864
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16865,
              "end": 16869
            },
            "value": "runc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16870,
              "end": 16883
            },
            "value": "/usr/bin/runc"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16884,
          "end": 16893
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16894,
          "end": 16898
        }
      },
      "options": [
        {
          "flag_start": 16899,
          "name": {
            "span": {
              "start": 16901,
              "end": 16905
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16906,
          "name": {
            "span": {
              "start": 16908,
              "end": 16912
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16913,
              "end": 16923
            },
            "value": "containerd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16924,
              "end": 16940
            },
            "value": "/out/containerd*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16941,
          "end": 16950
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16951,
          "end": 16955
        }
      },
      "options": [
        {
          "flag_start": 16956,
          "name": {
            "span": {
              "start": 16958,
              "end": 16962
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16963,
          "name": {
            "span": {
              "start": 16965,
              "end": 16969
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16970,
              "end": 16981
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16982,
              "end": 17001
            },
            "value": "/opt/cni/bin/bridge"
          }
        },
        {
          "path": {
            "span": {
              "start": 17002,
              "end": 17025
            },
            "value": "/opt/cni/bin/host-local"
          }
        },
        {
          "path": {
            "span": {
              "start": 17026,
              "end": 17047
            },
            "value": "/opt/cni/bin/loopback"
          }
        },
        {
          "path": {
            "span": {
              "start": 17048,
              "end": 17069
            },
            "value": "/opt/cni/bin/firewall"
          }
        },
        {
          "path": {
            "span": {
              "start": 17070,
              "end": 17090
            },
            "value": "/opt/cni/bin/dnsname"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17091,
          "end": 17104
        },
        "value": "/opt/cni/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17105,
          "end": 17109
        }
      },
      "options": [
        {
          "flag_start": 17110,
          "name": {
            "span": {
              "start": 17112,
              "end": 17116
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 17117,
              "end": 17139
            },
            "value": "hack/fixtures/cni.json"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17140,
          "end": 17162
        },
        "value": "/etc/buildkit/cni.json"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17163,
          "end": 17167
        }
      },
      "options": [
        {
          "flag_start": 17168,
          "name": {
            "span": {
              "start": 17170,
              "end": 17174
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 17175,
              "end": 17205
            },
            "value": "hack/fixtures/dns-cni.conflist"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17206,
          "end": 17236
        },
        "value": "/etc/buildkit/dns-cni.conflist"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17237,
          "end": 17241
        }
      },
      "options": [
        {
          "flag_start": 17242,
          "name": {
            "span": {
              "start": 17244,
              "end": 17248
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 17249,
          "name": {
            "span": {
              "start": 17251,
              "end": 17255
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 17256,
              "end": 17264
            },
            "value": "binaries"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 17265,
              "end": 17266
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17267,
          "end": 17276
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17347,
          "end": 17351
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17352,
          "end": 17374
        },
        "value": "integration-tests-base"
      },
      "as_": [
        {
          "span": {
            "start": 17375,
            "end": 17377
          }
        },
        {
          "span": {
            "start": 17378,
            "end": 17395
          },
          "value": "integration-tests"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17396,
          "end": 17400
        }
      },
      "options": [],
      "src": [
        {
          "path": {
            "span": {
              "start": 17401,
              "end": 17402
            },
            "value": "."
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17403,
          "end": 17404
        },
        "value": "."
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 17405,
          "end": 17408
        }
      },
      "arguments": {
        "span": {
          "start": 17409,
          "end": 17507
        },
        "value": "BUILDKIT_RUN_NETWORK_INTEGRATION_TESTS=1 BUILDKIT_CNI_INIT_LOCK_PATH=/run/buildkit_cni_bridge.lock"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17509,
          "end": 17513
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17514,
          "end": 17531
        },
        "value": "integration-tests"
      },
      "as_": [
        {
          "span": {
            "start": 17532,
            "end": 17534
          }
        },
        {
          "span": {
            "start": 17535,
            "end": 17542
          },
          "value": "dev-env"
        }
      ]
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 17543,
          "end": 17549
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 17550,
              "end": 17567
            },
            "value": "/var/lib/buildkit"
          }
        ]
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17625,
          "end": 17629
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17630,
          "end": 17654
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 17655,
            "end": 17657
          }
        },
        {
          "span": {
            "start": 17658,
            "end": 17666
          },
          "value": "rootless"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17667,
          "end": 17670
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17671,
            "end": 17752
          },
          "value": "apk add --no-cache fuse3 fuse-overlayfs git openssh openssl pigz shadow-uidmap xz"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17753,
          "end": 17756
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17757,
            "end": 17979
          },
          "value": "adduser -D -u 1000 user \\\n  && mkdir -p /run/user/1000 /home/user/.local/tmp /home/user/.local/share/buildkit \\\n  && chown -R user /run/user/1000 /home/user \\\n  && echo user:100000:65536 | tee /etc/subuid | tee /etc/subgid"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17980,
          "end": 17984
        }
      },
      "options": [
        {
          "flag_start": 17985,
          "name": {
            "span": {
              "start": 17987,
              "end": 17991
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 17992,
          "name": {
            "span": {
              "start": 17994,
              "end": 17998
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 17999,
              "end": 18010
            },
            "value": "rootlesskit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18011,
              "end": 18023
            },
            "value": "/rootlesskit"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18024,
          "end": 18033
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18034,
          "end": 18038
        }
      },
      "options": [
        {
          "flag_start": 18039,
          "name": {
            "span": {
              "start": 18041,
              "end": 18045
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18046,
          "name": {
            "span": {
              "start": 18048,
              "end": 18052
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18053,
              "end": 18061
            },
            "value": "binaries"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18062,
              "end": 18063
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18064,
          "end": 18073
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18074,
          "end": 18078
        }
      },
      "options": [
        {
          "flag_start": 18079,
          "name": {
            "span": {
              "start": 18081,
              "end": 18085
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18086,
              "end": 18137
            },
            "value": "examples/buildctl-daemonless/buildctl-daemonless.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18138,
          "end": 18147
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "USER",
      "user": {
        "span": {
          "start": 18202,
          "end": 18206
        }
      },
      "arguments": {
        "span": {
          "start": 18207,
          "end": 18216
        },
        "value": "1000:1000"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18217,
          "end": 18220
        }
      },
      "arguments": {
        "span": {
          "start": 18221,
          "end": 18236
        },
        "value": "HOME=/home/user"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18237,
          "end": 18240
        }
      },
      "arguments": {
        "span": {
          "start": 18241,
          "end": 18250
        },
        "value": "USER=user"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18251,
          "end": 18254
        }
      },
      "arguments": {
        "span": {
          "start": 18255,
          "end": 18285
        },
        "value": "XDG_RUNTIME_DIR=/run/user/1000"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18286,
          "end": 18289
        }
      },
      "arguments": {
        "span": {
          "start": 18290,
          "end": 18318
        },
        "value": "TMPDIR=/home/user/.local/tmp"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18319,
          "end": 18322
        }
      },
      "arguments": {
        "span": {
          "start": 18323,
          "end": 18382
        },
        "value": "BUILDKIT_HOST=unix:///run/user/1000/buildkit/buildkitd.sock"
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 18383,
          "end": 18389
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 18390,
              "end": 18422
            },
            "value": "/home/user/.local/share/buildkit"
          }
        ]
      }
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 18423,
          "end": 18433
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 18434,
            "end": 18462
          },
          "value": [
            {
              "span": {
                "start": 18436,
                "end": 18447
              },
              "value": "rootlesskit"
            },
            {
              "span": {
                "start": 18451,
                "end": 18460
              },
              "value": "buildkitd"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18511,
          "end": 18515
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18516,
          "end": 18559
        },
        "value": "buildkit-$TARGETOS${BUILDKIT_DEBUG:+-debug}"
      },
      "as_": [
        {
          "span": {
            "start": 18560,
            "end": 18562
          }
        },
        {
          "span": {
            "start": 18563,
            "end": 18571
          },
          "value": "buildkit"
        }
      ]
    }
  ]
}