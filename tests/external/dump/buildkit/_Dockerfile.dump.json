{
  "parser_directives": {
    "syntax": {
      "start": 2,
      "value": {
        "span": {
          "start": 9,
          "end": 42
        },
        "value": "docker/dockerfile-upstream:master"
      }
    },
    "escape": null,
    "check": null
  },
  "instructions": [
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 44,
          "end": 47
        }
      },
      "arguments": {
        "span": {
          "start": 48,
          "end": 67
        },
        "value": "RUNC_VERSION=v1.3.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 68,
          "end": 71
        }
      },
      "arguments": {
        "span": {
          "start": 72,
          "end": 97
        },
        "value": "CONTAINERD_VERSION=v2.1.4"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 185,
          "end": 188
        }
      },
      "arguments": {
        "span": {
          "start": 189,
          "end": 221
        },
        "value": "CONTAINERD_ALT_VERSION_20=v2.0.6"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 222,
          "end": 225
        }
      },
      "arguments": {
        "span": {
          "start": 226,
          "end": 259
        },
        "value": "CONTAINERD_ALT_VERSION_17=v1.7.28"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 260,
          "end": 263
        }
      },
      "arguments": {
        "span": {
          "start": 264,
          "end": 287
        },
        "value": "REGISTRY_VERSION=v2.8.3"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 288,
          "end": 291
        }
      },
      "arguments": {
        "span": {
          "start": 292,
          "end": 318
        },
        "value": "ROOTLESSKIT_VERSION=v2.3.5"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 319,
          "end": 322
        }
      },
      "arguments": {
        "span": {
          "start": 323,
          "end": 341
        },
        "value": "CNI_VERSION=v1.8.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 342,
          "end": 345
        }
      },
      "arguments": {
        "span": {
          "start": 346,
          "end": 380
        },
        "value": "STARGZ_SNAPSHOTTER_VERSION=v0.15.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 381,
          "end": 384
        }
      },
      "arguments": {
        "span": {
          "start": 385,
          "end": 407
        },
        "value": "NERDCTL_VERSION=v2.1.2"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 408,
          "end": 411
        }
      },
      "arguments": {
        "span": {
          "start": 412,
          "end": 434
        },
        "value": "DNSNAME_VERSION=v1.3.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 435,
          "end": 438
        }
      },
      "arguments": {
        "span": {
          "start": 439,
          "end": 459
        },
        "value": "NYDUS_VERSION=v2.2.4"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 460,
          "end": 463
        }
      },
      "arguments": {
        "span": {
          "start": 464,
          "end": 506
        },
        "value": "MINIO_VERSION=RELEASE.2025-09-07T16-13-09Z"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 507,
          "end": 510
        }
      },
      "arguments": {
        "span": {
          "start": 511,
          "end": 556
        },
        "value": "MINIO_MC_VERSION=RELEASE.2025-08-13T08-35-41Z"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 557,
          "end": 560
        }
      },
      "arguments": {
        "span": {
          "start": 561,
          "end": 583
        },
        "value": "AZURITE_VERSION=3.33.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 584,
          "end": 587
        }
      },
      "arguments": {
        "span": {
          "start": 588,
          "end": 612
        },
        "value": "GOTESTSUM_VERSION=v1.9.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 613,
          "end": 616
        }
      },
      "arguments": {
        "span": {
          "start": 617,
          "end": 638
        },
        "value": "DELVE_VERSION=v1.23.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 640,
          "end": 643
        }
      },
      "arguments": {
        "span": {
          "start": 644,
          "end": 659
        },
        "value": "GO_VERSION=1.25"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 660,
          "end": 663
        }
      },
      "arguments": {
        "span": {
          "start": 664,
          "end": 683
        },
        "value": "ALPINE_VERSION=3.22"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 684,
          "end": 687
        }
      },
      "arguments": {
        "span": {
          "start": 688,
          "end": 704
        },
        "value": "XX_VERSION=1.7.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 705,
          "end": 708
        }
      },
      "arguments": {
        "span": {
          "start": 709,
          "end": 723
        },
        "value": "BUILDKIT_DEBUG"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 724,
          "end": 727
        }
      },
      "arguments": {
        "span": {
          "start": 728,
          "end": 746
        },
        "value": "EXPORT_BASE=alpine"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 781,
          "end": 785
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 786,
          "end": 822
        },
        "value": "quay.io/minio/minio:${MINIO_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 823,
            "end": 825
          }
        },
        {
          "span": {
            "start": 826,
            "end": 831
          },
          "value": "minio"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 832,
          "end": 836
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 837,
          "end": 873
        },
        "value": "quay.io/minio/mc:${MINIO_MC_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 874,
            "end": 876
          }
        },
        {
          "span": {
            "start": 877,
            "end": 885
          },
          "value": "minio-mc"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 926,
          "end": 930
        }
      },
      "options": [
        {
          "flag_start": 931,
          "name": {
            "span": {
              "start": 933,
              "end": 941
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 942,
              "end": 956
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 957,
          "end": 984
        },
        "value": "tonistiigi/xx:${XX_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 985,
            "end": 987
          }
        },
        {
          "span": {
            "start": 988,
            "end": 990
          },
          "value": "xx"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 1030,
          "end": 1034
        }
      },
      "options": [
        {
          "flag_start": 1035,
          "name": {
            "span": {
              "start": 1037,
              "end": 1045
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 1046,
              "end": 1060
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 1061,
          "end": 1105
        },
        "value": "golang:${GO_VERSION}-alpine${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 1106,
            "end": 1108
          }
        },
        {
          "span": {
            "start": 1109,
            "end": 1117
          },
          "value": "golatest"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 1169,
          "end": 1173
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 1174,
          "end": 1182
        },
        "value": "golatest"
      },
      "as_": [
        {
          "span": {
            "start": 1183,
            "end": 1185
          }
        },
        {
          "span": {
            "start": 1186,
            "end": 1198
          },
          "value": "gobuild-base"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 1199,
          "end": 1202
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 1203,
            "end": 1269
          },
          "value": "apk add --no-cache file bash clang lld musl-dev pkgconfig git make"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 1270,
          "end": 1274
        }
      },
      "options": [
        {
          "flag_start": 1275,
          "name": {
            "span": {
              "start": 1277,
              "end": 1281
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 1282,
          "name": {
            "span": {
              "start": 1284,
              "end": 1288
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 1289,
              "end": 1291
            },
            "value": "xx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 1292,
              "end": 1293
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 1294,
          "end": 1295
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 1323,
          "end": 1327
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 1328,
          "end": 1340
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 1341,
            "end": 1343
          }
        },
        {
          "span": {
            "start": 1344,
            "end": 1348
          },
          "value": "runc"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 1349,
          "end": 1356
        }
      },
      "arguments": {
        "span": {
          "start": 1357,
          "end": 1399
        },
        "value": "$GOPATH/src/github.com/opencontainers/runc"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1400,
          "end": 1403
        }
      },
      "arguments": {
        "span": {
          "start": 1404,
          "end": 1416
        },
        "value": "RUNC_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 1417,
          "end": 1420
        }
      },
      "options": [
        {
          "flag_start": 1421,
          "name": {
            "span": {
              "start": 1423,
              "end": 1435
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 1436,
              "end": 1440
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 1441,
              "end": 1499
            },
            "value": "\"https://github.com/opencontainers/runc.git#$RUNC_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 1500,
          "end": 1501
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1502,
          "end": 1505
        }
      },
      "arguments": {
        "span": {
          "start": 1506,
          "end": 1520
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 1626,
          "end": 1629
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 1630,
            "end": 1791
          },
          "value": "set -e; xx-apk add musl-dev gcc libseccomp-dev libseccomp-static; \\\n  [ \"$(xx-info arch)\" != \"ppc64le\" ] || XX_CC_PREFER_LINKER=ld xx-clang --setup-target-triple"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 1792,
          "end": 1795
        }
      },
      "options": [
        {
          "flag_start": 1796,
          "name": {
            "span": {
              "start": 1798,
              "end": 1803
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 1804,
              "end": 1834
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 1840,
            "end": 1840
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 1841,
            "end": 2103
          },
          "expand": true,
          "value": "  set -ex\n  CGO_ENABLED=1 xx-go build -mod=vendor -ldflags '-extldflags -static' -tags 'apparmor seccomp netgo cgo static_build osusergo' -o /usr/bin/runc ./\n  xx-verify --static /usr/bin/runc\n  if [ \"$(xx-info os)\" = \"linux\" ]; then /usr/bin/runc --version; fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2108,
          "end": 2112
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 2113,
          "end": 2125
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 2126,
            "end": 2128
          }
        },
        {
          "span": {
            "start": 2129,
            "end": 2142
          },
          "value": "buildkit-base"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 2143,
          "end": 2150
        }
      },
      "arguments": {
        "span": {
          "start": 2151,
          "end": 2155
        },
        "value": "/src"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 2156,
          "end": 2159
        }
      },
      "arguments": {
        "span": {
          "start": 2160,
          "end": 2179
        },
        "value": "GOFLAGS=-mod=vendor"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2240,
          "end": 2244
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 2245,
          "end": 2258
        },
        "value": "buildkit-base"
      },
      "as_": [
        {
          "span": {
            "start": 2259,
            "end": 2261
          }
        },
        {
          "span": {
            "start": 2262,
            "end": 2278
          },
          "value": "buildkit-version"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2326,
          "end": 2329
        }
      },
      "options": [
        {
          "flag_start": 2330,
          "name": {
            "span": {
              "start": 2332,
              "end": 2337
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 2338,
              "end": 2346
            },
            "value": "target=."
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 2354,
            "end": 2354
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 2355,
            "end": 3031
          },
          "expand": false,
          "value": "  git rev-parse HEAD 2>/dev/null || {\n    echo >&2 \"Failed to get git revision, make sure --build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=1 is set when building from Git directly\"\n    exit 1\n  }\n  set -ex\n  export PKG=github.com/moby/buildkit VERSION=$(git describe --match 'v[0-9]*' --dirty='.m' --always --tags) REVISION=$(git rev-parse HEAD)$(if ! git diff --no-ext-diff --quiet --exit-code; then echo .m; fi) COMMIT_DATE=$(git show -s --format=%cI HEAD);\n  echo \"-X ${PKG}/version.Version=${VERSION} -X ${PKG}/version.Revision=${REVISION} -X ${PKG}/version.Package=${PKG}\" > /tmp/.ldflags;\n  echo -n \"${VERSION}\" > /tmp/.version;\n  echo -n \"${COMMIT_DATE}\" > /tmp/.commit_date;\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 3070,
          "end": 3074
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 3075,
          "end": 3088
        },
        "value": "buildkit-base"
      },
      "as_": [
        {
          "span": {
            "start": 3089,
            "end": 3091
          }
        },
        {
          "span": {
            "start": 3092,
            "end": 3100
          },
          "value": "buildctl"
        }
      ]
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 3101,
          "end": 3104
        }
      },
      "arguments": {
        "span": {
          "start": 3105,
          "end": 3118
        },
        "value": "CGO_ENABLED=0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3119,
          "end": 3122
        }
      },
      "arguments": {
        "span": {
          "start": 3123,
          "end": 3137
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3138,
          "end": 3141
        }
      },
      "arguments": {
        "span": {
          "start": 3142,
          "end": 3154
        },
        "value": "GOBUILDFLAGS"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3155,
          "end": 3158
        }
      },
      "options": [
        {
          "flag_start": 3159,
          "name": {
            "span": {
              "start": 3161,
              "end": 3166
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3167,
              "end": 3175
            },
            "value": "target=."
          }
        },
        {
          "flag_start": 3176,
          "name": {
            "span": {
              "start": 3178,
              "end": 3183
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3184,
              "end": 3214
            },
            "value": "target=/root/.cache,type=cache"
          }
        },
        {
          "flag_start": 3219,
          "name": {
            "span": {
              "start": 3221,
              "end": 3226
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3227,
              "end": 3256
            },
            "value": "target=/go/pkg/mod,type=cache"
          }
        },
        {
          "flag_start": 3261,
          "name": {
            "span": {
              "start": 3263,
              "end": 3268
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3269,
              "end": 3332
            },
            "value": "source=/tmp/.ldflags,target=/tmp/.ldflags,from=buildkit-version"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 3338,
            "end": 3338
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 3339,
            "end": 3559
          },
          "expand": true,
          "value": "  set -ex\n  xx-go build ${GOBUILDFLAGS} -ldflags \"$(cat /tmp/.ldflags)\" -o /usr/bin/buildctl ./cmd/buildctl\n  xx-verify --static /usr/bin/buildctl\n  if [ \"$(xx-info os)\" = \"linux\" ]; then /usr/bin/buildctl --version; fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 3597,
          "end": 3601
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 3602,
          "end": 3615
        },
        "value": "buildkit-base"
      },
      "as_": [
        {
          "span": {
            "start": 3616,
            "end": 3618
          }
        },
        {
          "span": {
            "start": 3619,
            "end": 3628
          },
          "value": "buildkitd"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3703,
          "end": 3706
        }
      },
      "arguments": {
        "span": {
          "start": 3707,
          "end": 3721
        },
        "value": "BUILDKITD_TAGS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3722,
          "end": 3725
        }
      },
      "arguments": {
        "span": {
          "start": 3726,
          "end": 3740
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3741,
          "end": 3744
        }
      },
      "arguments": {
        "span": {
          "start": 3745,
          "end": 3757
        },
        "value": "GOBUILDFLAGS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3758,
          "end": 3761
        }
      },
      "arguments": {
        "span": {
          "start": 3762,
          "end": 3784
        },
        "value": "VERIFYFLAGS=\"--static\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3785,
          "end": 3788
        }
      },
      "arguments": {
        "span": {
          "start": 3789,
          "end": 3802
        },
        "value": "CGO_ENABLED=0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3803,
          "end": 3806
        }
      },
      "arguments": {
        "span": {
          "start": 3807,
          "end": 3821
        },
        "value": "BUILDKIT_DEBUG"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3822,
          "end": 3825
        }
      },
      "arguments": {
        "span": {
          "start": 3826,
          "end": 3866
        },
        "value": "GOGCFLAGS=${BUILDKIT_DEBUG:+\"all=-N -l\"}"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3867,
          "end": 3870
        }
      },
      "options": [
        {
          "flag_start": 3871,
          "name": {
            "span": {
              "start": 3873,
              "end": 3878
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3879,
              "end": 3887
            },
            "value": "target=."
          }
        },
        {
          "flag_start": 3888,
          "name": {
            "span": {
              "start": 3890,
              "end": 3895
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3896,
              "end": 3926
            },
            "value": "target=/root/.cache,type=cache"
          }
        },
        {
          "flag_start": 3931,
          "name": {
            "span": {
              "start": 3933,
              "end": 3938
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3939,
              "end": 3968
            },
            "value": "target=/go/pkg/mod,type=cache"
          }
        },
        {
          "flag_start": 3973,
          "name": {
            "span": {
              "start": 3975,
              "end": 3980
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3981,
              "end": 4044
            },
            "value": "source=/tmp/.ldflags,target=/tmp/.ldflags,from=buildkit-version"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 4050,
            "end": 4050
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 4051,
            "end": 5111
          },
          "expand": true,
          "value": "  set -ex\n  xx-go build ${GOBUILDFLAGS} -gcflags=\"${GOGCFLAGS}\" -ldflags \"$(cat /tmp/.ldflags) -extldflags '-static'\" -tags \"osusergo netgo static_build seccomp ${BUILDKITD_TAGS}\" -o /usr/bin/buildkitd ./cmd/buildkitd\n  xx-verify ${VERIFYFLAGS} /usr/bin/buildkitd\n\n  # buildkitd --version can be flaky when running through emulation related to\n  # https://github.com/moby/buildkit/pull/4491. Retry a few times as a workaround.\n  set +ex\n  if [ \"$(xx-info os)\" = \"linux\" ]; then\n    max_retries=5\n    for attempt in $(seq \"$max_retries\"); do\n      timeout 3 /usr/bin/buildkitd --version\n      exitcode=$?\n      if ! xx-info is-cross; then\n        exit $exitcode\n      elif [ $exitcode -eq 0 ]; then\n        break\n      elif [ $exitcode -eq 124 ] || [ $exitcode -eq 143 ]; then\n        echo \"WARN: buildkitd --version timed out ($attempt/$max_retries)\"\n        if [ \"$attempt\" -eq \"$max_retries\" ]; then\n          exit $exitcode\n        fi\n      else\n        echo \"ERROR: buildkitd --version failed with exit code $exitcode\"\n      fi\n      sleep 1\n    done\n  fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 5164,
          "end": 5168
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 5169,
          "end": 5181
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 5182,
            "end": 5184
          }
        },
        {
          "span": {
            "start": 5185,
            "end": 5192
          },
          "value": "dnsname"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 5193,
          "end": 5200
        }
      },
      "arguments": {
        "span": {
          "start": 5201,
          "end": 5238
        },
        "value": "/go/src/github.com/containers/dnsname"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5239,
          "end": 5242
        }
      },
      "arguments": {
        "span": {
          "start": 5243,
          "end": 5258
        },
        "value": "DNSNAME_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 5259,
          "end": 5262
        }
      },
      "options": [
        {
          "flag_start": 5263,
          "name": {
            "span": {
              "start": 5265,
              "end": 5277
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 5278,
              "end": 5282
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 5283,
              "end": 5343
            },
            "value": "\"https://github.com/containers/dnsname.git#$DNSNAME_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 5344,
          "end": 5345
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5346,
          "end": 5349
        }
      },
      "arguments": {
        "span": {
          "start": 5350,
          "end": 5364
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5365,
          "end": 5368
        }
      },
      "options": [
        {
          "flag_start": 5369,
          "name": {
            "span": {
              "start": 5371,
              "end": 5376
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 5377,
              "end": 5407
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 5414,
            "end": 5527
          },
          "value": "CGO_ENABLED=0 xx-go build -o /usr/bin/dnsname ./plugins/meta/dnsname && \\\n    xx-verify --static /usr/bin/dnsname"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 5529,
          "end": 5533
        }
      },
      "options": [
        {
          "flag_start": 5534,
          "name": {
            "span": {
              "start": 5536,
              "end": 5544
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 5545,
              "end": 5559
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 5560,
          "end": 5584
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 5585,
            "end": 5587
          }
        },
        {
          "span": {
            "start": 5588,
            "end": 5599
          },
          "value": "cni-plugins"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5600,
          "end": 5603
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 5604,
            "end": 5627
          },
          "value": "apk add --no-cache curl"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 5628,
          "end": 5632
        }
      },
      "options": [
        {
          "flag_start": 5633,
          "name": {
            "span": {
              "start": 5635,
              "end": 5639
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 5640,
              "end": 5642
            },
            "value": "xx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 5643,
              "end": 5644
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 5645,
          "end": 5646
        },
        "value": "/"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5647,
          "end": 5650
        }
      },
      "arguments": {
        "span": {
          "start": 5651,
          "end": 5662
        },
        "value": "CNI_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5663,
          "end": 5666
        }
      },
      "arguments": {
        "span": {
          "start": 5667,
          "end": 5675
        },
        "value": "TARGETOS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5676,
          "end": 5679
        }
      },
      "arguments": {
        "span": {
          "start": 5680,
          "end": 5690
        },
        "value": "TARGETARCH"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5691,
          "end": 5694
        }
      },
      "arguments": {
        "span": {
          "start": 5695,
          "end": 5709
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 5710,
          "end": 5717
        }
      },
      "arguments": {
        "span": {
          "start": 5718,
          "end": 5730
        },
        "value": "/opt/cni/bin"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5731,
          "end": 5734
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 5735,
            "end": 5892
          },
          "value": "curl -fsSL https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-${TARGETOS}-${TARGETARCH}-${CNI_VERSION}.tgz | tar xzv"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5893,
          "end": 5896
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 5897,
            "end": 5942
          },
          "value": "xx-verify --static bridge loopback host-local"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 5943,
          "end": 5947
        }
      },
      "options": [
        {
          "flag_start": 5948,
          "name": {
            "span": {
              "start": 5950,
              "end": 5954
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 5955,
          "name": {
            "span": {
              "start": 5957,
              "end": 5961
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 5962,
              "end": 5969
            },
            "value": "dnsname"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 5970,
              "end": 5986
            },
            "value": "/usr/bin/dnsname"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 5987,
          "end": 6000
        },
        "value": "/opt/cni/bin/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6002,
          "end": 6006
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6007,
          "end": 6014
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 6015,
            "end": 6017
          }
        },
        {
          "span": {
            "start": 6018,
            "end": 6036
          },
          "value": "cni-plugins-export"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6037,
          "end": 6041
        }
      },
      "options": [
        {
          "flag_start": 6042,
          "name": {
            "span": {
              "start": 6044,
              "end": 6048
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6049,
          "name": {
            "span": {
              "start": 6051,
              "end": 6055
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6056,
              "end": 6067
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6068,
              "end": 6087
            },
            "value": "/opt/cni/bin/bridge"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6088,
          "end": 6108
        },
        "value": "/buildkit-cni-bridge"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6109,
          "end": 6113
        }
      },
      "options": [
        {
          "flag_start": 6114,
          "name": {
            "span": {
              "start": 6116,
              "end": 6120
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6121,
          "name": {
            "span": {
              "start": 6123,
              "end": 6127
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6128,
              "end": 6139
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6140,
              "end": 6161
            },
            "value": "/opt/cni/bin/loopback"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6162,
          "end": 6184
        },
        "value": "/buildkit-cni-loopback"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6185,
          "end": 6189
        }
      },
      "options": [
        {
          "flag_start": 6190,
          "name": {
            "span": {
              "start": 6192,
              "end": 6196
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6197,
          "name": {
            "span": {
              "start": 6199,
              "end": 6203
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6204,
              "end": 6215
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6216,
              "end": 6239
            },
            "value": "/opt/cni/bin/host-local"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6240,
          "end": 6264
        },
        "value": "/buildkit-cni-host-local"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6265,
          "end": 6269
        }
      },
      "options": [
        {
          "flag_start": 6270,
          "name": {
            "span": {
              "start": 6272,
              "end": 6276
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6277,
          "name": {
            "span": {
              "start": 6279,
              "end": 6283
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6284,
              "end": 6295
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6296,
              "end": 6317
            },
            "value": "/opt/cni/bin/firewall"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6318,
          "end": 6340
        },
        "value": "/buildkit-cni-firewall"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6342,
          "end": 6346
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6347,
          "end": 6354
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 6355,
            "end": 6357
          }
        },
        {
          "span": {
            "start": 6358,
            "end": 6385
          },
          "value": "cni-plugins-export-squashed"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6386,
          "end": 6390
        }
      },
      "options": [
        {
          "flag_start": 6391,
          "name": {
            "span": {
              "start": 6393,
              "end": 6397
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6398,
              "end": 6416
            },
            "value": "cni-plugins-export"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6417,
              "end": 6418
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6419,
          "end": 6420
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6422,
          "end": 6426
        }
      },
      "options": [
        {
          "flag_start": 6427,
          "name": {
            "span": {
              "start": 6429,
              "end": 6437
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 6438,
              "end": 6452
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 6453,
          "end": 6477
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 6478,
            "end": 6480
          }
        },
        {
          "span": {
            "start": 6481,
            "end": 6494
          },
          "value": "binfmt-filter"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6580,
          "end": 6584
        }
      },
      "options": [
        {
          "flag_start": 6585,
          "name": {
            "span": {
              "start": 6587,
              "end": 6591
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6592,
          "name": {
            "span": {
              "start": 6594,
              "end": 6598
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6599,
              "end": 6708
            },
            "value": "tonistiigi/binfmt:buildkit-v10.0.4-57@sha256:370775754cd56094fff210b44968bf15777aed7eb3302df4f7ab2b647630899e"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6709,
              "end": 6710
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6711,
          "end": 6716
        },
        "value": "/out/"
      }
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 6717,
          "end": 6724
        }
      },
      "arguments": {
        "span": {
          "start": 6725,
          "end": 6730
        },
        "value": "/out/"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6731,
          "end": 6734
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 6735,
            "end": 6810
          },
          "value": "rm -f buildkit-qemu-loongarch64 buildkit-qemu-mips64 buildkit-qemu-mips64el"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6812,
          "end": 6816
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6817,
          "end": 6824
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 6825,
            "end": 6827
          }
        },
        {
          "span": {
            "start": 6828,
            "end": 6842
          },
          "value": "binaries-linux"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6843,
          "end": 6847
        }
      },
      "options": [
        {
          "flag_start": 6848,
          "name": {
            "span": {
              "start": 6850,
              "end": 6854
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6855,
          "name": {
            "span": {
              "start": 6857,
              "end": 6861
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6862,
              "end": 6866
            },
            "value": "runc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6867,
              "end": 6880
            },
            "value": "/usr/bin/runc"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6881,
          "end": 6895
        },
        "value": "/buildkit-runc"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6896,
          "end": 6900
        }
      },
      "options": [
        {
          "flag_start": 6901,
          "name": {
            "span": {
              "start": 6903,
              "end": 6907
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6908,
          "name": {
            "span": {
              "start": 6910,
              "end": 6914
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6915,
              "end": 6928
            },
            "value": "binfmt-filter"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6929,
              "end": 6934
            },
            "value": "/out/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6935,
          "end": 6936
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6937,
          "end": 6941
        }
      },
      "options": [
        {
          "flag_start": 6942,
          "name": {
            "span": {
              "start": 6944,
              "end": 6948
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 6949,
          "name": {
            "span": {
              "start": 6951,
              "end": 6955
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 6956,
              "end": 6983
            },
            "value": "cni-plugins-export-squashed"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 6984,
              "end": 6985
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 6986,
          "end": 6987
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 6988,
          "end": 6992
        }
      },
      "options": [
        {
          "flag_start": 6993,
          "name": {
            "span": {
              "start": 6995,
              "end": 6999
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7000,
          "name": {
            "span": {
              "start": 7002,
              "end": 7006
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7007,
              "end": 7015
            },
            "value": "buildctl"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7016,
              "end": 7033
            },
            "value": "/usr/bin/buildctl"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7034,
          "end": 7035
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7036,
          "end": 7040
        }
      },
      "options": [
        {
          "flag_start": 7041,
          "name": {
            "span": {
              "start": 7043,
              "end": 7047
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7048,
          "name": {
            "span": {
              "start": 7050,
              "end": 7054
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7055,
              "end": 7064
            },
            "value": "buildkitd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7065,
              "end": 7083
            },
            "value": "/usr/bin/buildkitd"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7084,
          "end": 7085
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7087,
          "end": 7091
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7092,
          "end": 7099
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 7100,
            "end": 7102
          }
        },
        {
          "span": {
            "start": 7103,
            "end": 7118
          },
          "value": "binaries-darwin"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7119,
          "end": 7123
        }
      },
      "options": [
        {
          "flag_start": 7124,
          "name": {
            "span": {
              "start": 7126,
              "end": 7130
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7131,
          "name": {
            "span": {
              "start": 7133,
              "end": 7137
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7138,
              "end": 7146
            },
            "value": "buildctl"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7147,
              "end": 7164
            },
            "value": "/usr/bin/buildctl"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7165,
          "end": 7166
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7168,
          "end": 7172
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7173,
          "end": 7180
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 7181,
            "end": 7183
          }
        },
        {
          "span": {
            "start": 7184,
            "end": 7200
          },
          "value": "binaries-windows"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7201,
          "end": 7205
        }
      },
      "options": [
        {
          "flag_start": 7206,
          "name": {
            "span": {
              "start": 7208,
              "end": 7212
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7213,
          "name": {
            "span": {
              "start": 7215,
              "end": 7219
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7220,
              "end": 7228
            },
            "value": "buildctl"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7229,
              "end": 7246
            },
            "value": "/usr/bin/buildctl"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7247,
          "end": 7260
        },
        "value": "/buildctl.exe"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7261,
          "end": 7265
        }
      },
      "options": [
        {
          "flag_start": 7266,
          "name": {
            "span": {
              "start": 7268,
              "end": 7272
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7273,
          "name": {
            "span": {
              "start": 7275,
              "end": 7279
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7280,
              "end": 7289
            },
            "value": "buildkitd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7290,
              "end": 7308
            },
            "value": "/usr/bin/buildkitd"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7309,
          "end": 7323
        },
        "value": "/buildkitd.exe"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7325,
          "end": 7329
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7330,
          "end": 7337
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 7338,
            "end": 7340
          }
        },
        {
          "span": {
            "start": 7341,
            "end": 7357
          },
          "value": "binaries-freebsd"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7358,
          "end": 7362
        }
      },
      "options": [
        {
          "flag_start": 7363,
          "name": {
            "span": {
              "start": 7365,
              "end": 7369
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7370,
          "name": {
            "span": {
              "start": 7372,
              "end": 7376
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7377,
              "end": 7386
            },
            "value": "buildkitd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7387,
              "end": 7405
            },
            "value": "/usr/bin/buildkitd"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7406,
          "end": 7407
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 7408,
          "end": 7412
        }
      },
      "options": [
        {
          "flag_start": 7413,
          "name": {
            "span": {
              "start": 7415,
              "end": 7419
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 7420,
          "name": {
            "span": {
              "start": 7422,
              "end": 7426
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 7427,
              "end": 7435
            },
            "value": "buildctl"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 7436,
              "end": 7453
            },
            "value": "/usr/bin/buildctl"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 7454,
          "end": 7455
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7457,
          "end": 7461
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7462,
          "end": 7480
        },
        "value": "binaries-$TARGETOS"
      },
      "as_": [
        {
          "span": {
            "start": 7481,
            "end": 7483
          }
        },
        {
          "span": {
            "start": 7484,
            "end": 7492
          },
          "value": "binaries"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7557,
          "end": 7560
        }
      },
      "arguments": {
        "span": {
          "start": 7561,
          "end": 7590
        },
        "value": "BUILDKIT_SBOM_SCAN_STAGE=true"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7592,
          "end": 7596
        }
      },
      "options": [
        {
          "flag_start": 7597,
          "name": {
            "span": {
              "start": 7599,
              "end": 7607
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 7608,
              "end": 7622
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 7623,
          "end": 7647
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 7648,
            "end": 7650
          }
        },
        {
          "span": {
            "start": 7651,
            "end": 7659
          },
          "value": "releaser"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7660,
          "end": 7663
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 7664,
            "end": 7691
          },
          "value": "apk add --no-cache tar gzip"
        }
      },
      "here_docs": []
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 7692,
          "end": 7699
        }
      },
      "arguments": {
        "span": {
          "start": 7700,
          "end": 7705
        },
        "value": "/work"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7706,
          "end": 7709
        }
      },
      "arguments": {
        "span": {
          "start": 7710,
          "end": 7724
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7725,
          "end": 7728
        }
      },
      "options": [
        {
          "flag_start": 7729,
          "name": {
            "span": {
              "start": 7731,
              "end": 7736
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7737,
              "end": 7750
            },
            "value": "from=binaries"
          }
        },
        {
          "flag_start": 7755,
          "name": {
            "span": {
              "start": 7757,
              "end": 7762
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7763,
              "end": 7826
            },
            "value": "source=/tmp/.version,target=/tmp/.version,from=buildkit-version"
          }
        },
        {
          "flag_start": 7831,
          "name": {
            "span": {
              "start": 7833,
              "end": 7838
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7839,
              "end": 7910
            },
            "value": "source=/tmp/.commit_date,target=/tmp/.commit_date,from=buildkit-version"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 7915,
            "end": 8098
          },
          "value": "mkdir -p /out && tar czvf \"/out/buildkit-$(cat /tmp/.version).$(echo $TARGETPLATFORM | sed 's/\\//-/g').tar.gz\" --mtime=\"$(cat /tmp/.commit_date)\" --sort=name --transform 's/^./bin/' ."
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8100,
          "end": 8104
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8105,
          "end": 8112
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 8113,
            "end": 8115
          }
        },
        {
          "span": {
            "start": 8116,
            "end": 8123
          },
          "value": "release"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 8124,
          "end": 8128
        }
      },
      "options": [
        {
          "flag_start": 8129,
          "name": {
            "span": {
              "start": 8131,
              "end": 8135
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 8136,
          "name": {
            "span": {
              "start": 8138,
              "end": 8142
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 8143,
              "end": 8151
            },
            "value": "releaser"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 8152,
              "end": 8157
            },
            "value": "/out/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 8158,
          "end": 8159
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8161,
          "end": 8165
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8166,
          "end": 8190
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 8191,
            "end": 8193
          }
        },
        {
          "span": {
            "start": 8194,
            "end": 8216
          },
          "value": "buildkit-export-alpine"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8217,
          "end": 8220
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 8221,
            "end": 8329
          },
          "value": "apk add --no-cache fuse3 git openssh pigz xz iptables ip6tables \\\n  && ln -s fusermount3 /usr/bin/fusermount"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 8330,
          "end": 8334
        }
      },
      "options": [
        {
          "flag_start": 8335,
          "name": {
            "span": {
              "start": 8337,
              "end": 8341
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 8342,
              "end": 8393
            },
            "value": "examples/buildctl-daemonless/buildctl-daemonless.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 8394,
          "end": 8403
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 8404,
          "end": 8410
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 8411,
              "end": 8428
            },
            "value": "/var/lib/buildkit"
          }
        ]
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8430,
          "end": 8434
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8435,
          "end": 8447
        },
        "value": "ubuntu:24.04"
      },
      "as_": [
        {
          "span": {
            "start": 8448,
            "end": 8450
          }
        },
        {
          "span": {
            "start": 8451,
            "end": 8473
          },
          "value": "buildkit-export-ubuntu"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8474,
          "end": 8477
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 8478,
            "end": 8683
          },
          "value": "apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    fuse3 \\\n    git \\\n    openssh-client \\\n    pigz \\\n    xz-utils \\\n    iptables \\\n    ca-certificates \\\n  && rm -rf /var/lib/apt/lists/*"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 8684,
          "end": 8688
        }
      },
      "options": [
        {
          "flag_start": 8689,
          "name": {
            "span": {
              "start": 8691,
              "end": 8695
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 8696,
              "end": 8747
            },
            "value": "examples/buildctl-daemonless/buildctl-daemonless.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 8748,
          "end": 8757
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 8758,
          "end": 8764
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 8765,
              "end": 8782
            },
            "value": "/var/lib/buildkit"
          }
        ]
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8784,
          "end": 8788
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8789,
          "end": 8819
        },
        "value": "buildkit-export-${EXPORT_BASE}"
      },
      "as_": [
        {
          "span": {
            "start": 8820,
            "end": 8822
          }
        },
        {
          "span": {
            "start": 8823,
            "end": 8838
          },
          "value": "buildkit-export"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8839,
          "end": 8842
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 8843,
            "end": 8891
          },
          "value": "mkdir -p /etc/cdi /var/run/cdi /etc/buildkit/cdi"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8893,
          "end": 8897
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8898,
          "end": 8910
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 8911,
            "end": 8913
          }
        },
        {
          "span": {
            "start": 8914,
            "end": 8930
          },
          "value": "containerd-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 8931,
          "end": 8938
        }
      },
      "arguments": {
        "span": {
          "start": 8939,
          "end": 8979
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 8980,
          "end": 8983
        }
      },
      "arguments": {
        "span": {
          "start": 8984,
          "end": 8998
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 8999,
          "end": 9002
        }
      },
      "arguments": {
        "span": {
          "start": 9003,
          "end": 9078
        },
        "value": "CGO_ENABLED=1 CGO_LDFLAGS=\"-fuse-ld=lld\" BUILDTAGS=no_btrfs GO111MODULE=off"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9079,
          "end": 9082
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 9083,
            "end": 9122
          },
          "value": "xx-apk add musl-dev gcc && xx-go --wrap"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 9123,
          "end": 9127
        }
      },
      "options": [
        {
          "flag_start": 9128,
          "name": {
            "span": {
              "start": 9130,
              "end": 9135
            },
            "value": "chmod"
          },
          "value": {
            "span": {
              "start": 9136,
              "end": 9139
            },
            "value": "755"
          }
        }
      ],
      "src": [
        {
          "here_doc": {
            "span": {
              "start": 9157,
              "end": 9641
            },
            "expand": true,
            "value": "#!/bin/sh\nset -ex\nmkdir /out\nif [ \"$(xx-info os)\" = \"linux\" ]; then\n  make bin/containerd\n  make bin/containerd-shim-runc-v2\n  mv bin/containerd bin/containerd-shim* /out\nelse\n  CGO_ENABLED=0 make STATIC=1 binaries\n  if [ \"$(xx-info os)\" = \"windows\" ]; then\n    mv bin/containerd.exe /out\n  else\n    mv bin/containerd /out\n  fi\n  # No shim binary is built for FreeBSD, since containerd v2.0.\n  if ls bin/containerd-shim* >/dev/null 2>&1; then\n    mv bin/containerd-shim* /out\n  fi\nfi\n"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 9147,
          "end": 9156
        },
        "value": "/build.sh"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9646,
          "end": 9650
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9651,
          "end": 9667
        },
        "value": "containerd-build"
      },
      "as_": [
        {
          "span": {
            "start": 9668,
            "end": 9670
          }
        },
        {
          "span": {
            "start": 9671,
            "end": 9681
          },
          "value": "containerd"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 9682,
          "end": 9689
        }
      },
      "arguments": {
        "span": {
          "start": 9690,
          "end": 9730
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9731,
          "end": 9734
        }
      },
      "arguments": {
        "span": {
          "start": 9735,
          "end": 9753
        },
        "value": "CONTAINERD_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 9754,
          "end": 9757
        }
      },
      "options": [
        {
          "flag_start": 9758,
          "name": {
            "span": {
              "start": 9760,
              "end": 9772
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 9773,
              "end": 9777
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 9778,
              "end": 9844
            },
            "value": "\"https://github.com/containerd/containerd.git#$CONTAINERD_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 9845,
          "end": 9846
        },
        "value": "."
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9847,
          "end": 9850
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 9851,
            "end": 9860
          },
          "value": "/build.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9927,
          "end": 9931
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9932,
          "end": 9948
        },
        "value": "containerd-build"
      },
      "as_": [
        {
          "span": {
            "start": 9949,
            "end": 9951
          }
        },
        {
          "span": {
            "start": 9952,
            "end": 9969
          },
          "value": "containerd-alt-20"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 9970,
          "end": 9977
        }
      },
      "arguments": {
        "span": {
          "start": 9978,
          "end": 10018
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10019,
          "end": 10022
        }
      },
      "arguments": {
        "span": {
          "start": 10023,
          "end": 10048
        },
        "value": "CONTAINERD_ALT_VERSION_20"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 10049,
          "end": 10052
        }
      },
      "options": [
        {
          "flag_start": 10053,
          "name": {
            "span": {
              "start": 10055,
              "end": 10067
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 10068,
              "end": 10072
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 10073,
              "end": 10146
            },
            "value": "\"https://github.com/containerd/containerd.git#$CONTAINERD_ALT_VERSION_20\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 10147,
          "end": 10148
        },
        "value": "."
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10149,
          "end": 10152
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 10153,
            "end": 10162
          },
          "value": "/build.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10229,
          "end": 10233
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10234,
          "end": 10250
        },
        "value": "containerd-build"
      },
      "as_": [
        {
          "span": {
            "start": 10251,
            "end": 10253
          }
        },
        {
          "span": {
            "start": 10254,
            "end": 10271
          },
          "value": "containerd-alt-17"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 10272,
          "end": 10279
        }
      },
      "arguments": {
        "span": {
          "start": 10280,
          "end": 10320
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10321,
          "end": 10324
        }
      },
      "arguments": {
        "span": {
          "start": 10325,
          "end": 10350
        },
        "value": "CONTAINERD_ALT_VERSION_17"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 10351,
          "end": 10354
        }
      },
      "options": [
        {
          "flag_start": 10355,
          "name": {
            "span": {
              "start": 10357,
              "end": 10369
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 10370,
              "end": 10374
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 10375,
              "end": 10448
            },
            "value": "\"https://github.com/containerd/containerd.git#$CONTAINERD_ALT_VERSION_17\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 10449,
          "end": 10450
        },
        "value": "."
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10451,
          "end": 10454
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 10455,
            "end": 10464
          },
          "value": "/build.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10466,
          "end": 10470
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10471,
          "end": 10483
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 10484,
            "end": 10486
          }
        },
        {
          "span": {
            "start": 10487,
            "end": 10495
          },
          "value": "registry"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 10496,
          "end": 10503
        }
      },
      "arguments": {
        "span": {
          "start": 10504,
          "end": 10542
        },
        "value": "/go/src/github.com/docker/distribution"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10543,
          "end": 10546
        }
      },
      "arguments": {
        "span": {
          "start": 10547,
          "end": 10563
        },
        "value": "REGISTRY_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 10564,
          "end": 10567
        }
      },
      "options": [
        {
          "flag_start": 10568,
          "name": {
            "span": {
              "start": 10570,
              "end": 10582
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 10583,
              "end": 10587
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 10588,
              "end": 10656
            },
            "value": "\"https://github.com/distribution/distribution.git#$REGISTRY_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 10657,
          "end": 10658
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10659,
          "end": 10662
        }
      },
      "arguments": {
        "span": {
          "start": 10663,
          "end": 10677
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10678,
          "end": 10681
        }
      },
      "options": [
        {
          "flag_start": 10682,
          "name": {
            "span": {
              "start": 10684,
              "end": 10689
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10690,
              "end": 10720
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 10726,
            "end": 10726
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 10727,
            "end": 10999
          },
          "expand": true,
          "value": "  set -ex\n  mkdir /out\n  export GOPATH=\"$(pwd)/Godeps/_workspace:$GOPATH\"\n  GO111MODULE=off CGO_ENABLED=0 xx-go build -o /out/registry ./cmd/registry\n  xx-verify --static /out/registry\n  if [ \"$(xx-info os)\" = \"windows\" ]; then\n    mv /out/registry /out/registry.exe\n  fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 11004,
          "end": 11008
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 11009,
          "end": 11021
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 11022,
            "end": 11024
          }
        },
        {
          "span": {
            "start": 11025,
            "end": 11036
          },
          "value": "rootlesskit"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 11037,
          "end": 11044
        }
      },
      "arguments": {
        "span": {
          "start": 11045,
          "end": 11095
        },
        "value": "/go/src/github.com/rootless-containers/rootlesskit"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11096,
          "end": 11099
        }
      },
      "arguments": {
        "span": {
          "start": 11100,
          "end": 11119
        },
        "value": "ROOTLESSKIT_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 11120,
          "end": 11123
        }
      },
      "options": [
        {
          "flag_start": 11124,
          "name": {
            "span": {
              "start": 11126,
              "end": 11138
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 11139,
              "end": 11143
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 11144,
              "end": 11221
            },
            "value": "\"https://github.com/rootless-containers/rootlesskit.git#$ROOTLESSKIT_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 11222,
          "end": 11223
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11224,
          "end": 11227
        }
      },
      "arguments": {
        "span": {
          "start": 11228,
          "end": 11242
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11243,
          "end": 11246
        }
      },
      "options": [
        {
          "flag_start": 11248,
          "name": {
            "span": {
              "start": 11250,
              "end": 11255
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11256,
              "end": 11286
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 11291,
            "end": 11389
          },
          "value": "CGO_ENABLED=0 xx-go build -o /rootlesskit ./cmd/rootlesskit && \\\n  xx-verify --static /rootlesskit"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 11391,
          "end": 11395
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 11396,
          "end": 11408
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 11409,
            "end": 11411
          }
        },
        {
          "span": {
            "start": 11412,
            "end": 11430
          },
          "value": "stargz-snapshotter"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 11431,
          "end": 11438
        }
      },
      "arguments": {
        "span": {
          "start": 11439,
          "end": 11487
        },
        "value": "/go/src/github.com/containerd/stargz-snapshotter"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11488,
          "end": 11491
        }
      },
      "arguments": {
        "span": {
          "start": 11492,
          "end": 11518
        },
        "value": "STARGZ_SNAPSHOTTER_VERSION"
      }
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 11519,
          "end": 11522
        }
      },
      "options": [
        {
          "flag_start": 11523,
          "name": {
            "span": {
              "start": 11525,
              "end": 11537
            },
            "value": "keep-git-dir"
          },
          "value": {
            "span": {
              "start": 11538,
              "end": 11542
            },
            "value": "true"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 11543,
              "end": 11625
            },
            "value": "\"https://github.com/containerd/stargz-snapshotter.git#$STARGZ_SNAPSHOTTER_VERSION\""
          }
        }
      ],
      "dest": {
        "span": {
          "start": 11626,
          "end": 11627
        },
        "value": "."
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11628,
          "end": 11631
        }
      },
      "arguments": {
        "span": {
          "start": 11632,
          "end": 11646
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11647,
          "end": 11650
        }
      },
      "options": [
        {
          "flag_start": 11651,
          "name": {
            "span": {
              "start": 11653,
              "end": 11658
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11659,
              "end": 11689
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 11694,
            "end": 11855
          },
          "value": "xx-go --wrap && \\\n  mkdir /out && CGO_ENABLED=0 PREFIX=/out/ make && \\\n  xx-verify --static /out/containerd-stargz-grpc && \\\n  xx-verify --static /out/ctr-remote"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 11857,
          "end": 11861
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 11862,
          "end": 11874
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 11875,
            "end": 11877
          }
        },
        {
          "span": {
            "start": 11878,
            "end": 11883
          },
          "value": "nydus"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11884,
          "end": 11887
        }
      },
      "arguments": {
        "span": {
          "start": 11888,
          "end": 11901
        },
        "value": "NYDUS_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11902,
          "end": 11905
        }
      },
      "arguments": {
        "span": {
          "start": 11906,
          "end": 11914
        },
        "value": "TARGETOS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11915,
          "end": 11918
        }
      },
      "arguments": {
        "span": {
          "start": 11919,
          "end": 11929
        },
        "value": "TARGETARCH"
      }
    },
    {
      "kind": "SHELL",
      "shell": {
        "span": {
          "start": 11930,
          "end": 11935
        }
      },
      "arguments": [
        {
          "span": {
            "start": 11938,
            "end": 11947
          },
          "value": "/bin/bash"
        },
        {
          "span": {
            "start": 11951,
            "end": 11953
          },
          "value": "-c"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11956,
          "end": 11959
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 11960,
            "end": 12097
          },
          "value": "wget https://github.com/dragonflyoss/image-service/releases/download/$NYDUS_VERSION/nydus-static-$NYDUS_VERSION-$TARGETOS-$TARGETARCH.tgz"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12098,
          "end": 12101
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 12102,
            "end": 12202
          },
          "value": "mkdir -p /out/nydus-static && tar xzvf nydus-static-$NYDUS_VERSION-$TARGETOS-$TARGETARCH.tgz -C /out"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12204,
          "end": 12208
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12209,
          "end": 12221
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 12222,
            "end": 12224
          }
        },
        {
          "span": {
            "start": 12225,
            "end": 12234
          },
          "value": "gotestsum"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 12235,
          "end": 12238
        }
      },
      "arguments": {
        "span": {
          "start": 12239,
          "end": 12256
        },
        "value": "GOTESTSUM_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 12257,
          "end": 12260
        }
      },
      "arguments": {
        "span": {
          "start": 12261,
          "end": 12275
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12276,
          "end": 12279
        }
      },
      "options": [
        {
          "flag_start": 12280,
          "name": {
            "span": {
              "start": 12282,
              "end": 12287
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12288,
              "end": 12318
            },
            "value": "target=/root/.cache,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 12324,
            "end": 12324
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 12325,
            "end": 12665
          },
          "expand": true,
          "value": "  set -ex\n  xx-go install \"gotest.tools/gotestsum@${GOTESTSUM_VERSION}\"\n  xx-go install \"github.com/wadey/gocovmerge@latest\"\n  mkdir /out\n  if ! xx-info is-cross; then\n    /go/bin/gotestsum --version\n    mv /go/bin/gotestsum /out\n    mv /go/bin/gocovmerge /out\n  else\n    mv /go/bin/*/gotestsum* /out\n    mv /go/bin/*/gocovmerge* /out\n  fi\n"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 12669,
          "end": 12673
        }
      },
      "options": [
        {
          "flag_start": 12674,
          "name": {
            "span": {
              "start": 12676,
              "end": 12681
            },
            "value": "chmod"
          },
          "value": {
            "span": {
              "start": 12682,
              "end": 12685
            },
            "value": "755"
          }
        }
      ],
      "src": [
        {
          "here_doc": {
            "span": {
              "start": 12717,
              "end": 13290
            },
            "expand": false,
            "value": "#!/bin/sh\nset -x\nif [ -z \"$GO_TEST_COVERPROFILE\" ]; then\n  exec gotestsum \"$@\"\nfi\ncoverdir=\"$(dirname \"$GO_TEST_COVERPROFILE\")\"\nmkdir -p \"$coverdir/helpers\"\ngotestsum \"$@\" \"-coverprofile=$GO_TEST_COVERPROFILE\"\necode=$?\ngo tool covdata textfmt -i=$coverdir/helpers -o=$coverdir/helpers-report.txt\ngocovmerge \"$coverdir/helpers-report.txt\" \"$GO_TEST_COVERPROFILE\" > \"$coverdir/merged-report.txt\"\nmv \"$coverdir/merged-report.txt\" \"$GO_TEST_COVERPROFILE\"\nrm \"$coverdir/helpers-report.txt\"\nfor f in \"$coverdir/helpers\"/*; do\n  rm \"$f\"\ndone\nrmdir \"$coverdir/helpers\"\nexit $ecode\n"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 12694,
          "end": 12716
        },
        "value": "/out/gotestsumandcover"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13339,
          "end": 13343
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13344,
          "end": 13356
        },
        "value": "gobuild-base"
      },
      "as_": [
        {
          "span": {
            "start": 13357,
            "end": 13359
          }
        },
        {
          "span": {
            "start": 13360,
            "end": 13363
          },
          "value": "dlv"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 13364,
          "end": 13367
        }
      },
      "arguments": {
        "span": {
          "start": 13368,
          "end": 13381
        },
        "value": "DELVE_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 13382,
          "end": 13385
        }
      },
      "arguments": {
        "span": {
          "start": 13386,
          "end": 13400
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13401,
          "end": 13404
        }
      },
      "options": [
        {
          "flag_start": 13405,
          "name": {
            "span": {
              "start": 13407,
              "end": 13412
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13413,
              "end": 13445
            },
            "value": "target=/root/.cache,type=cache"
          }
        },
        {
          "flag_start": 13449,
          "name": {
            "span": {
              "start": 13451,
              "end": 13456
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13457,
              "end": 13486
            },
            "value": "target=/go/pkg/mod,type=cache"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 13492,
            "end": 13492
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 13493,
            "end": 13892
          },
          "expand": true,
          "value": "  set -ex\n  mkdir /out\n  if [ \"$(xx-info os)\" = \"freebsd\" ]; then\n    echo \"WARN: dlv requires cgo enabled on FreeBSD, skipping: https://github.com/moby/buildkit/pull/5497#issuecomment-2462031339\"\n    exit 0\n  fi\n  xx-go install \"github.com/go-delve/delve/cmd/dlv@${DELVE_VERSION}\"\n  if ! xx-info is-cross; then\n    /go/bin/dlv version\n    mv /go/bin/dlv /out\n  else\n    mv /go/bin/*/dlv* /out\n  fi\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13897,
          "end": 13901
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13902,
          "end": 13917
        },
        "value": "buildkit-export"
      },
      "as_": [
        {
          "span": {
            "start": 13918,
            "end": 13920
          }
        },
        {
          "span": {
            "start": 13921,
            "end": 13935
          },
          "value": "buildkit-linux"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 13936,
          "end": 13940
        }
      },
      "options": [
        {
          "flag_start": 13941,
          "name": {
            "span": {
              "start": 13943,
              "end": 13947
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 13948,
          "name": {
            "span": {
              "start": 13950,
              "end": 13954
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 13955,
              "end": 13963
            },
            "value": "binaries"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 13964,
              "end": 13965
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 13966,
          "end": 13975
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 13976,
          "end": 13979
        }
      },
      "arguments": {
        "span": {
          "start": 13980,
          "end": 14010
        },
        "value": "BUILDKIT_SETUP_CGROUPV2_ROOT=1"
      }
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 14011,
          "end": 14021
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 14022,
            "end": 14035
          },
          "value": [
            {
              "span": {
                "start": 14024,
                "end": 14033
              },
              "value": "buildkitd"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14037,
          "end": 14041
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14042,
          "end": 14056
        },
        "value": "buildkit-linux"
      },
      "as_": [
        {
          "span": {
            "start": 14057,
            "end": 14059
          }
        },
        {
          "span": {
            "start": 14060,
            "end": 14080
          },
          "value": "buildkit-linux-debug"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14081,
          "end": 14085
        }
      },
      "options": [
        {
          "flag_start": 14086,
          "name": {
            "span": {
              "start": 14088,
              "end": 14092
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14093,
          "name": {
            "span": {
              "start": 14095,
              "end": 14099
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14100,
              "end": 14103
            },
            "value": "dlv"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14104,
              "end": 14112
            },
            "value": "/out/dlv"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14113,
          "end": 14125
        },
        "value": "/usr/bin/dlv"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14126,
          "end": 14130
        }
      },
      "options": [
        {
          "flag_start": 14131,
          "name": {
            "span": {
              "start": 14133,
              "end": 14137
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14138,
          "name": {
            "span": {
              "start": 14140,
              "end": 14145
            },
            "value": "chmod"
          },
          "value": {
            "span": {
              "start": 14146,
              "end": 14149
            },
            "value": "755"
          }
        }
      ],
      "src": [
        {
          "here_doc": {
            "span": {
              "start": 14178,
              "end": 14356
            },
            "expand": true,
            "value": "#!/bin/sh\nexec dlv exec /usr/bin/buildkitd \\\\\n  --api-version=2 \\\\\n  -l 0.0.0.0:\\${DELVE_PORT:-5000} \\\\\n  --headless=true \\\\\n  --accept-multiclient \\\\\n  --continue \\\\\n  -- \"\\$@\"\n"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14156,
          "end": 14177
        },
        "value": "/docker-entrypoint.sh"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 14360,
          "end": 14363
        }
      },
      "arguments": {
        "span": {
          "start": 14364,
          "end": 14379
        },
        "value": "DELVE_PORT=5000"
      }
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 14380,
          "end": 14390
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 14391,
            "end": 14416
          },
          "value": [
            {
              "span": {
                "start": 14393,
                "end": 14414
              },
              "value": "/docker-entrypoint.sh"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14418,
          "end": 14422
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14423,
          "end": 14431
        },
        "value": "binaries"
      },
      "as_": [
        {
          "span": {
            "start": 14432,
            "end": 14434
          }
        },
        {
          "span": {
            "start": 14435,
            "end": 14450
          },
          "value": "buildkit-darwin"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14452,
          "end": 14456
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14457,
          "end": 14465
        },
        "value": "binaries"
      },
      "as_": [
        {
          "span": {
            "start": 14466,
            "end": 14468
          }
        },
        {
          "span": {
            "start": 14469,
            "end": 14485
          },
          "value": "buildkit-freebsd"
        }
      ]
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 14486,
          "end": 14496
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 14497,
            "end": 14511
          },
          "value": [
            {
              "span": {
                "start": 14499,
                "end": 14509
              },
              "value": "/buildkitd"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14513,
          "end": 14517
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14518,
          "end": 14526
        },
        "value": "binaries"
      },
      "as_": [
        {
          "span": {
            "start": 14527,
            "end": 14529
          }
        },
        {
          "span": {
            "start": 14530,
            "end": 14546
          },
          "value": "buildkit-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14548,
          "end": 14552
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14553,
          "end": 14560
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 14561,
            "end": 14563
          }
        },
        {
          "span": {
            "start": 14564,
            "end": 14581
          },
          "value": "binaries-for-test"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14582,
          "end": 14586
        }
      },
      "options": [
        {
          "flag_start": 14587,
          "name": {
            "span": {
              "start": 14589,
              "end": 14593
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14594,
          "name": {
            "span": {
              "start": 14596,
              "end": 14600
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14601,
              "end": 14610
            },
            "value": "gotestsum"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14611,
              "end": 14615
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14616,
          "end": 14617
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14618,
          "end": 14622
        }
      },
      "options": [
        {
          "flag_start": 14623,
          "name": {
            "span": {
              "start": 14625,
              "end": 14629
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14630,
          "name": {
            "span": {
              "start": 14632,
              "end": 14636
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14637,
              "end": 14640
            },
            "value": "dlv"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14641,
              "end": 14645
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14646,
          "end": 14647
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14648,
          "end": 14652
        }
      },
      "options": [
        {
          "flag_start": 14653,
          "name": {
            "span": {
              "start": 14655,
              "end": 14659
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14660,
          "name": {
            "span": {
              "start": 14662,
              "end": 14666
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14667,
              "end": 14675
            },
            "value": "registry"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14676,
              "end": 14680
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14681,
          "end": 14682
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14683,
          "end": 14687
        }
      },
      "options": [
        {
          "flag_start": 14688,
          "name": {
            "span": {
              "start": 14690,
              "end": 14694
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14695,
          "name": {
            "span": {
              "start": 14697,
              "end": 14701
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14702,
              "end": 14712
            },
            "value": "containerd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14713,
              "end": 14717
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14718,
          "end": 14719
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 14720,
          "end": 14724
        }
      },
      "options": [
        {
          "flag_start": 14725,
          "name": {
            "span": {
              "start": 14727,
              "end": 14731
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 14732,
          "name": {
            "span": {
              "start": 14734,
              "end": 14738
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 14739,
              "end": 14747
            },
            "value": "binaries"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 14748,
              "end": 14749
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 14750,
          "end": 14751
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14753,
          "end": 14757
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14758,
          "end": 14771
        },
        "value": "buildkit-base"
      },
      "as_": [
        {
          "span": {
            "start": 14772,
            "end": 14774
          }
        },
        {
          "span": {
            "start": 14775,
            "end": 14797
          },
          "value": "integration-tests-base"
        }
      ]
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 14798,
          "end": 14801
        }
      },
      "arguments": {
        "span": {
          "start": 14802,
          "end": 14850
        },
        "value": "BUILDKIT_INTEGRATION_ROOTLESS_IDPAIR=\"1000:1000\""
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14851,
          "end": 14854
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 14855,
            "end": 15316
          },
          "value": "apk add --no-cache shadow shadow-uidmap sudo vim iptables ip6tables dnsmasq fuse curl git-daemon openssh-client slirp4netns iproute2 \\\n  && useradd --create-home --home-dir /home/user --uid 1000 -s /bin/sh user \\\n  && echo \"XDG_RUNTIME_DIR=/run/user/1000; export XDG_RUNTIME_DIR\" >> /home/user/.profile \\\n  && mkdir -m 0700 -p /run/user/1000 \\\n  && chown -R user /run/user/1000 /home/user \\\n  && ln -s /sbin/iptables-legacy /usr/bin/iptables \\\n  && xx-go --wrap"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 15317,
          "end": 15320
        }
      },
      "arguments": {
        "span": {
          "start": 15321,
          "end": 15336
        },
        "value": "NERDCTL_VERSION"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15337,
          "end": 15340
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 15341,
            "end": 15544
          },
          "value": "curl -fsSL https://raw.githubusercontent.com/containerd/nerdctl/$NERDCTL_VERSION/extras/rootless/containerd-rootless.sh > /usr/bin/containerd-rootless.sh \\\n  && chmod 0755 /usr/bin/containerd-rootless.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 15545,
          "end": 15548
        }
      },
      "arguments": {
        "span": {
          "start": 15549,
          "end": 15564
        },
        "value": "AZURITE_VERSION"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15565,
          "end": 15568
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 15569,
            "end": 15647
          },
          "value": "apk add --no-cache nodejs npm \\\n  && npm install -g azurite@${AZURITE_VERSION}"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15783,
          "end": 15786
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 15787,
            "end": 15923
          },
          "value": "curl -fsSL https://raw.githubusercontent.com/moby/moby/v25.0.1/hack/dind > /docker-entrypoint.sh \\\n  && chmod 0755 /docker-entrypoint.sh"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 15924,
          "end": 15934
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 15935,
            "end": 15960
          },
          "value": [
            {
              "span": {
                "start": 15937,
                "end": 15958
              },
              "value": "/docker-entrypoint.sh"
            }
          ]
        }
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16038,
          "end": 16041
        }
      },
      "arguments": {
        "span": {
          "start": 16042,
          "end": 16165
        },
        "value": "BUILDKIT_INTEGRATION_CONTAINERD_EXTRA=\"containerd-2.0=/opt/containerd-alt-20/bin,containerd-1.7=/opt/containerd-alt-17/bin\""
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16166,
          "end": 16169
        }
      },
      "arguments": {
        "span": {
          "start": 16170,
          "end": 16209
        },
        "value": "BUILDKIT_INTEGRATION_SNAPSHOTTER=stargz"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16210,
          "end": 16213
        }
      },
      "arguments": {
        "span": {
          "start": 16214,
          "end": 16244
        },
        "value": "BUILDKIT_SETUP_CGROUPV2_ROOT=1"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16245,
          "end": 16248
        }
      },
      "arguments": {
        "span": {
          "start": 16249,
          "end": 16262
        },
        "value": "CGO_ENABLED=0"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 16263,
          "end": 16266
        }
      },
      "arguments": {
        "span": {
          "start": 16267,
          "end": 16300
        },
        "value": "GOTESTSUM_FORMAT=standard-verbose"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16301,
          "end": 16305
        }
      },
      "options": [
        {
          "flag_start": 16306,
          "name": {
            "span": {
              "start": 16308,
              "end": 16312
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16313,
          "name": {
            "span": {
              "start": 16315,
              "end": 16319
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16320,
              "end": 16329
            },
            "value": "gotestsum"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16330,
              "end": 16334
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16335,
          "end": 16344
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16345,
          "end": 16349
        }
      },
      "options": [
        {
          "flag_start": 16350,
          "name": {
            "span": {
              "start": 16352,
              "end": 16356
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16357,
          "name": {
            "span": {
              "start": 16359,
              "end": 16363
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16364,
              "end": 16369
            },
            "value": "minio"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16370,
              "end": 16384
            },
            "value": "/usr/bin/minio"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16385,
          "end": 16394
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16395,
          "end": 16399
        }
      },
      "options": [
        {
          "flag_start": 16400,
          "name": {
            "span": {
              "start": 16402,
              "end": 16406
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16407,
          "name": {
            "span": {
              "start": 16409,
              "end": 16413
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16414,
              "end": 16422
            },
            "value": "minio-mc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16423,
              "end": 16434
            },
            "value": "/usr/bin/mc"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16435,
          "end": 16444
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16445,
          "end": 16449
        }
      },
      "options": [
        {
          "flag_start": 16450,
          "name": {
            "span": {
              "start": 16452,
              "end": 16456
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16457,
          "name": {
            "span": {
              "start": 16459,
              "end": 16463
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16464,
              "end": 16469
            },
            "value": "nydus"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16470,
              "end": 16489
            },
            "value": "/out/nydus-static/*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16490,
          "end": 16499
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16500,
          "end": 16504
        }
      },
      "options": [
        {
          "flag_start": 16505,
          "name": {
            "span": {
              "start": 16507,
              "end": 16511
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16512,
          "name": {
            "span": {
              "start": 16514,
              "end": 16518
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16519,
              "end": 16537
            },
            "value": "stargz-snapshotter"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16538,
              "end": 16544
            },
            "value": "/out/*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16545,
          "end": 16554
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16555,
          "end": 16559
        }
      },
      "options": [
        {
          "flag_start": 16560,
          "name": {
            "span": {
              "start": 16562,
              "end": 16566
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16567,
          "name": {
            "span": {
              "start": 16569,
              "end": 16573
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16574,
              "end": 16585
            },
            "value": "rootlesskit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16586,
              "end": 16598
            },
            "value": "/rootlesskit"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16599,
          "end": 16608
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16609,
          "end": 16613
        }
      },
      "options": [
        {
          "flag_start": 16614,
          "name": {
            "span": {
              "start": 16616,
              "end": 16620
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16621,
          "name": {
            "span": {
              "start": 16623,
              "end": 16627
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16628,
              "end": 16645
            },
            "value": "containerd-alt-20"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16646,
              "end": 16662
            },
            "value": "/out/containerd*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16663,
          "end": 16690
        },
        "value": "/opt/containerd-alt-20/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16691,
          "end": 16695
        }
      },
      "options": [
        {
          "flag_start": 16696,
          "name": {
            "span": {
              "start": 16698,
              "end": 16702
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16703,
          "name": {
            "span": {
              "start": 16705,
              "end": 16709
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16710,
              "end": 16727
            },
            "value": "containerd-alt-17"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16728,
              "end": 16744
            },
            "value": "/out/containerd*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16745,
          "end": 16772
        },
        "value": "/opt/containerd-alt-17/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16773,
          "end": 16777
        }
      },
      "options": [
        {
          "flag_start": 16778,
          "name": {
            "span": {
              "start": 16780,
              "end": 16784
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16785,
          "name": {
            "span": {
              "start": 16787,
              "end": 16791
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16792,
              "end": 16800
            },
            "value": "registry"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16801,
              "end": 16805
            },
            "value": "/out"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16806,
          "end": 16815
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16816,
          "end": 16820
        }
      },
      "options": [
        {
          "flag_start": 16821,
          "name": {
            "span": {
              "start": 16823,
              "end": 16827
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16828,
          "name": {
            "span": {
              "start": 16830,
              "end": 16834
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16835,
              "end": 16839
            },
            "value": "runc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16840,
              "end": 16853
            },
            "value": "/usr/bin/runc"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16854,
          "end": 16863
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16864,
          "end": 16868
        }
      },
      "options": [
        {
          "flag_start": 16869,
          "name": {
            "span": {
              "start": 16871,
              "end": 16875
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16876,
          "name": {
            "span": {
              "start": 16878,
              "end": 16882
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16883,
              "end": 16893
            },
            "value": "containerd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16894,
              "end": 16910
            },
            "value": "/out/containerd*"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 16911,
          "end": 16920
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 16921,
          "end": 16925
        }
      },
      "options": [
        {
          "flag_start": 16926,
          "name": {
            "span": {
              "start": 16928,
              "end": 16932
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 16933,
          "name": {
            "span": {
              "start": 16935,
              "end": 16939
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 16940,
              "end": 16951
            },
            "value": "cni-plugins"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 16952,
              "end": 16971
            },
            "value": "/opt/cni/bin/bridge"
          }
        },
        {
          "path": {
            "span": {
              "start": 16972,
              "end": 16995
            },
            "value": "/opt/cni/bin/host-local"
          }
        },
        {
          "path": {
            "span": {
              "start": 16996,
              "end": 17017
            },
            "value": "/opt/cni/bin/loopback"
          }
        },
        {
          "path": {
            "span": {
              "start": 17018,
              "end": 17039
            },
            "value": "/opt/cni/bin/firewall"
          }
        },
        {
          "path": {
            "span": {
              "start": 17040,
              "end": 17060
            },
            "value": "/opt/cni/bin/dnsname"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17061,
          "end": 17074
        },
        "value": "/opt/cni/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17075,
          "end": 17079
        }
      },
      "options": [
        {
          "flag_start": 17080,
          "name": {
            "span": {
              "start": 17082,
              "end": 17086
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 17087,
              "end": 17109
            },
            "value": "hack/fixtures/cni.json"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17110,
          "end": 17132
        },
        "value": "/etc/buildkit/cni.json"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17133,
          "end": 17137
        }
      },
      "options": [
        {
          "flag_start": 17138,
          "name": {
            "span": {
              "start": 17140,
              "end": 17144
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 17145,
              "end": 17175
            },
            "value": "hack/fixtures/dns-cni.conflist"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17176,
          "end": 17206
        },
        "value": "/etc/buildkit/dns-cni.conflist"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17207,
          "end": 17211
        }
      },
      "options": [
        {
          "flag_start": 17212,
          "name": {
            "span": {
              "start": 17214,
              "end": 17218
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 17219,
          "name": {
            "span": {
              "start": 17221,
              "end": 17225
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 17226,
              "end": 17234
            },
            "value": "binaries"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 17235,
              "end": 17236
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17237,
          "end": 17246
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17317,
          "end": 17321
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17322,
          "end": 17344
        },
        "value": "integration-tests-base"
      },
      "as_": [
        {
          "span": {
            "start": 17345,
            "end": 17347
          }
        },
        {
          "span": {
            "start": 17348,
            "end": 17365
          },
          "value": "integration-tests"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17366,
          "end": 17370
        }
      },
      "options": [],
      "src": [
        {
          "path": {
            "span": {
              "start": 17371,
              "end": 17372
            },
            "value": "."
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17373,
          "end": 17374
        },
        "value": "."
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 17375,
          "end": 17378
        }
      },
      "arguments": {
        "span": {
          "start": 17379,
          "end": 17477
        },
        "value": "BUILDKIT_RUN_NETWORK_INTEGRATION_TESTS=1 BUILDKIT_CNI_INIT_LOCK_PATH=/run/buildkit_cni_bridge.lock"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17479,
          "end": 17483
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17484,
          "end": 17501
        },
        "value": "integration-tests"
      },
      "as_": [
        {
          "span": {
            "start": 17502,
            "end": 17504
          }
        },
        {
          "span": {
            "start": 17505,
            "end": 17512
          },
          "value": "dev-env"
        }
      ]
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 17513,
          "end": 17519
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 17520,
              "end": 17537
            },
            "value": "/var/lib/buildkit"
          }
        ]
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17595,
          "end": 17599
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17600,
          "end": 17624
        },
        "value": "alpine:${ALPINE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 17625,
            "end": 17627
          }
        },
        {
          "span": {
            "start": 17628,
            "end": 17636
          },
          "value": "rootless"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17637,
          "end": 17640
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17641,
            "end": 17714
          },
          "value": "apk add --no-cache fuse3 fuse-overlayfs git openssh pigz shadow-uidmap xz"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17715,
          "end": 17718
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17719,
            "end": 17941
          },
          "value": "adduser -D -u 1000 user \\\n  && mkdir -p /run/user/1000 /home/user/.local/tmp /home/user/.local/share/buildkit \\\n  && chown -R user /run/user/1000 /home/user \\\n  && echo user:100000:65536 | tee /etc/subuid | tee /etc/subgid"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17942,
          "end": 17946
        }
      },
      "options": [
        {
          "flag_start": 17947,
          "name": {
            "span": {
              "start": 17949,
              "end": 17953
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 17954,
          "name": {
            "span": {
              "start": 17956,
              "end": 17960
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 17961,
              "end": 17972
            },
            "value": "rootlesskit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 17973,
              "end": 17985
            },
            "value": "/rootlesskit"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17986,
          "end": 17995
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17996,
          "end": 18000
        }
      },
      "options": [
        {
          "flag_start": 18001,
          "name": {
            "span": {
              "start": 18003,
              "end": 18007
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18008,
          "name": {
            "span": {
              "start": 18010,
              "end": 18014
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18015,
              "end": 18023
            },
            "value": "binaries"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18024,
              "end": 18025
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18026,
          "end": 18035
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18036,
          "end": 18040
        }
      },
      "options": [
        {
          "flag_start": 18041,
          "name": {
            "span": {
              "start": 18043,
              "end": 18047
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18048,
              "end": 18099
            },
            "value": "examples/buildctl-daemonless/buildctl-daemonless.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18100,
          "end": 18109
        },
        "value": "/usr/bin/"
      }
    },
    {
      "kind": "USER",
      "user": {
        "span": {
          "start": 18164,
          "end": 18168
        }
      },
      "arguments": {
        "span": {
          "start": 18169,
          "end": 18178
        },
        "value": "1000:1000"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18179,
          "end": 18182
        }
      },
      "arguments": {
        "span": {
          "start": 18183,
          "end": 18198
        },
        "value": "HOME=/home/user"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18199,
          "end": 18202
        }
      },
      "arguments": {
        "span": {
          "start": 18203,
          "end": 18212
        },
        "value": "USER=user"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18213,
          "end": 18216
        }
      },
      "arguments": {
        "span": {
          "start": 18217,
          "end": 18247
        },
        "value": "XDG_RUNTIME_DIR=/run/user/1000"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18248,
          "end": 18251
        }
      },
      "arguments": {
        "span": {
          "start": 18252,
          "end": 18280
        },
        "value": "TMPDIR=/home/user/.local/tmp"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 18281,
          "end": 18284
        }
      },
      "arguments": {
        "span": {
          "start": 18285,
          "end": 18344
        },
        "value": "BUILDKIT_HOST=unix:///run/user/1000/buildkit/buildkitd.sock"
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 18345,
          "end": 18351
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 18352,
              "end": 18384
            },
            "value": "/home/user/.local/share/buildkit"
          }
        ]
      }
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 18385,
          "end": 18395
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 18396,
            "end": 18424
          },
          "value": [
            {
              "span": {
                "start": 18398,
                "end": 18409
              },
              "value": "rootlesskit"
            },
            {
              "span": {
                "start": 18413,
                "end": 18422
              },
              "value": "buildkitd"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18473,
          "end": 18477
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18478,
          "end": 18521
        },
        "value": "buildkit-$TARGETOS${BUILDKIT_DEBUG:+-debug}"
      },
      "as_": [
        {
          "span": {
            "start": 18522,
            "end": 18524
          }
        },
        {
          "span": {
            "start": 18525,
            "end": 18533
          },
          "value": "buildkit"
        }
      ]
    }
  ]
}