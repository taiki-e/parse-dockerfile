// SPDX-License-Identifier: Apache-2.0 OR MIT
// This file is @generated by parse-dockerfile-internal-codegen
// (gen_assert_impl function at tools/codegen/src/main.rs).
// It is not intended for manual editing.

#![cfg_attr(rustfmt, rustfmt::skip)]
#![allow(
    dead_code,
    unused_macros,
    clippy::std_instead_of_alloc,
    clippy::std_instead_of_core,
)]
fn assert_send<T: ?Sized + Send>() {}
fn assert_sync<T: ?Sized + Sync>() {}
fn assert_unpin<T: ?Sized + Unpin>() {}
fn assert_unwind_safe<T: ?Sized + std::panic::UnwindSafe>() {}
fn assert_ref_unwind_safe<T: ?Sized + std::panic::RefUnwindSafe>() {}
/// `Send` & `!Sync`
struct NotSync(core::cell::UnsafeCell<()>);
/// `!Send` & `Sync`
struct NotSend(std::sync::MutexGuard<'static, ()>);
/// `!Send` & `!Sync`
struct NotSendSync(*const ());
/// `!Unpin`
struct NotUnpin(core::marker::PhantomPinned);
/// `!UnwindSafe`
struct NotUnwindSafe(&'static mut ());
/// `!RefUnwindSafe`
struct NotRefUnwindSafe(core::cell::UnsafeCell<()>);
macro_rules! assert_not_send {
    ($ty:ty) => {
        static_assertions::assert_not_impl_all!($ty : Send);
    };
}
macro_rules! assert_not_sync {
    ($ty:ty) => {
        static_assertions::assert_not_impl_all!($ty : Sync);
    };
}
macro_rules! assert_not_unpin {
    ($ty:ty) => {
        static_assertions::assert_not_impl_all!($ty : Unpin);
    };
}
macro_rules! assert_not_unwind_safe {
    ($ty:ty) => {
        static_assertions::assert_not_impl_all!($ty : std::panic::UnwindSafe);
    };
}
macro_rules! assert_not_ref_unwind_safe {
    ($ty:ty) => {
        static_assertions::assert_not_impl_all!($ty : std::panic::RefUnwindSafe);
    };
}
const _: fn() = || {
    assert_send::<crate::error::Error>();
    assert_sync::<crate::error::Error>();
    assert_unpin::<crate::error::Error>();
    assert_not_unwind_safe!(crate::error::Error);
    assert_not_ref_unwind_safe!(crate::error::Error);
    assert_send::<crate::Dockerfile<'_>>();
    assert_sync::<crate::Dockerfile<'_>>();
    assert_unpin::<crate::Dockerfile<'_>>();
    assert_unwind_safe::<crate::Dockerfile<'_>>();
    assert_ref_unwind_safe::<crate::Dockerfile<'_>>();
    assert_send::<crate::Stage<'_, '_>>();
    assert_sync::<crate::Stage<'_, '_>>();
    assert_unpin::<crate::Stage<'_, '_>>();
    assert_unwind_safe::<crate::Stage<'_, '_>>();
    assert_ref_unwind_safe::<crate::Stage<'_, '_>>();
    assert_send::<crate::ParserDirectives<'_>>();
    assert_sync::<crate::ParserDirectives<'_>>();
    assert_unpin::<crate::ParserDirectives<'_>>();
    assert_unwind_safe::<crate::ParserDirectives<'_>>();
    assert_ref_unwind_safe::<crate::ParserDirectives<'_>>();
    assert_send::<crate::ParserDirective<()>>();
    assert_send::<crate::ParserDirective<NotSync>>();
    assert_not_send!(crate::ParserDirective<NotSend>);
    assert_sync::<crate::ParserDirective<()>>();
    assert_sync::<crate::ParserDirective<NotSend>>();
    assert_not_sync!(crate::ParserDirective<NotSync>);
    assert_unpin::<crate::ParserDirective<()>>();
    assert_not_unpin!(crate::ParserDirective<NotUnpin>);
    assert_unwind_safe::<crate::ParserDirective<()>>();
    assert_not_unwind_safe!(crate::ParserDirective<NotUnwindSafe>);
    assert_ref_unwind_safe::<crate::ParserDirective<()>>();
    assert_not_ref_unwind_safe!(crate::ParserDirective<NotRefUnwindSafe>);
    assert_send::<crate::Instruction<'_>>();
    assert_sync::<crate::Instruction<'_>>();
    assert_unpin::<crate::Instruction<'_>>();
    assert_unwind_safe::<crate::Instruction<'_>>();
    assert_ref_unwind_safe::<crate::Instruction<'_>>();
    assert_send::<crate::AddInstruction<'_>>();
    assert_sync::<crate::AddInstruction<'_>>();
    assert_unpin::<crate::AddInstruction<'_>>();
    assert_unwind_safe::<crate::AddInstruction<'_>>();
    assert_ref_unwind_safe::<crate::AddInstruction<'_>>();
    assert_send::<crate::ArgInstruction<'_>>();
    assert_sync::<crate::ArgInstruction<'_>>();
    assert_unpin::<crate::ArgInstruction<'_>>();
    assert_unwind_safe::<crate::ArgInstruction<'_>>();
    assert_ref_unwind_safe::<crate::ArgInstruction<'_>>();
    assert_send::<crate::CmdInstruction<'_>>();
    assert_sync::<crate::CmdInstruction<'_>>();
    assert_unpin::<crate::CmdInstruction<'_>>();
    assert_unwind_safe::<crate::CmdInstruction<'_>>();
    assert_ref_unwind_safe::<crate::CmdInstruction<'_>>();
    assert_send::<crate::CopyInstruction<'_>>();
    assert_sync::<crate::CopyInstruction<'_>>();
    assert_unpin::<crate::CopyInstruction<'_>>();
    assert_unwind_safe::<crate::CopyInstruction<'_>>();
    assert_ref_unwind_safe::<crate::CopyInstruction<'_>>();
    assert_send::<crate::Source<'_>>();
    assert_sync::<crate::Source<'_>>();
    assert_unpin::<crate::Source<'_>>();
    assert_unwind_safe::<crate::Source<'_>>();
    assert_ref_unwind_safe::<crate::Source<'_>>();
    assert_send::<crate::EntrypointInstruction<'_>>();
    assert_sync::<crate::EntrypointInstruction<'_>>();
    assert_unpin::<crate::EntrypointInstruction<'_>>();
    assert_unwind_safe::<crate::EntrypointInstruction<'_>>();
    assert_ref_unwind_safe::<crate::EntrypointInstruction<'_>>();
    assert_send::<crate::EnvInstruction<'_>>();
    assert_sync::<crate::EnvInstruction<'_>>();
    assert_unpin::<crate::EnvInstruction<'_>>();
    assert_unwind_safe::<crate::EnvInstruction<'_>>();
    assert_ref_unwind_safe::<crate::EnvInstruction<'_>>();
    assert_send::<crate::ExposeInstruction<'_>>();
    assert_sync::<crate::ExposeInstruction<'_>>();
    assert_unpin::<crate::ExposeInstruction<'_>>();
    assert_unwind_safe::<crate::ExposeInstruction<'_>>();
    assert_ref_unwind_safe::<crate::ExposeInstruction<'_>>();
    assert_send::<crate::FromInstruction<'_>>();
    assert_sync::<crate::FromInstruction<'_>>();
    assert_unpin::<crate::FromInstruction<'_>>();
    assert_unwind_safe::<crate::FromInstruction<'_>>();
    assert_ref_unwind_safe::<crate::FromInstruction<'_>>();
    assert_send::<crate::HealthcheckInstruction<'_>>();
    assert_sync::<crate::HealthcheckInstruction<'_>>();
    assert_unpin::<crate::HealthcheckInstruction<'_>>();
    assert_unwind_safe::<crate::HealthcheckInstruction<'_>>();
    assert_ref_unwind_safe::<crate::HealthcheckInstruction<'_>>();
    assert_send::<crate::HealthcheckArguments<'_>>();
    assert_sync::<crate::HealthcheckArguments<'_>>();
    assert_unpin::<crate::HealthcheckArguments<'_>>();
    assert_unwind_safe::<crate::HealthcheckArguments<'_>>();
    assert_ref_unwind_safe::<crate::HealthcheckArguments<'_>>();
    assert_send::<crate::LabelInstruction<'_>>();
    assert_sync::<crate::LabelInstruction<'_>>();
    assert_unpin::<crate::LabelInstruction<'_>>();
    assert_unwind_safe::<crate::LabelInstruction<'_>>();
    assert_ref_unwind_safe::<crate::LabelInstruction<'_>>();
    assert_send::<crate::MaintainerInstruction<'_>>();
    assert_sync::<crate::MaintainerInstruction<'_>>();
    assert_unpin::<crate::MaintainerInstruction<'_>>();
    assert_unwind_safe::<crate::MaintainerInstruction<'_>>();
    assert_ref_unwind_safe::<crate::MaintainerInstruction<'_>>();
    assert_send::<crate::OnbuildInstruction<'_>>();
    assert_sync::<crate::OnbuildInstruction<'_>>();
    assert_unpin::<crate::OnbuildInstruction<'_>>();
    assert_unwind_safe::<crate::OnbuildInstruction<'_>>();
    assert_ref_unwind_safe::<crate::OnbuildInstruction<'_>>();
    assert_send::<crate::RunInstruction<'_>>();
    assert_sync::<crate::RunInstruction<'_>>();
    assert_unpin::<crate::RunInstruction<'_>>();
    assert_unwind_safe::<crate::RunInstruction<'_>>();
    assert_ref_unwind_safe::<crate::RunInstruction<'_>>();
    assert_send::<crate::ShellInstruction<'_>>();
    assert_sync::<crate::ShellInstruction<'_>>();
    assert_unpin::<crate::ShellInstruction<'_>>();
    assert_unwind_safe::<crate::ShellInstruction<'_>>();
    assert_ref_unwind_safe::<crate::ShellInstruction<'_>>();
    assert_send::<crate::StopsignalInstruction<'_>>();
    assert_sync::<crate::StopsignalInstruction<'_>>();
    assert_unpin::<crate::StopsignalInstruction<'_>>();
    assert_unwind_safe::<crate::StopsignalInstruction<'_>>();
    assert_ref_unwind_safe::<crate::StopsignalInstruction<'_>>();
    assert_send::<crate::UserInstruction<'_>>();
    assert_sync::<crate::UserInstruction<'_>>();
    assert_unpin::<crate::UserInstruction<'_>>();
    assert_unwind_safe::<crate::UserInstruction<'_>>();
    assert_ref_unwind_safe::<crate::UserInstruction<'_>>();
    assert_send::<crate::VolumeInstruction<'_>>();
    assert_sync::<crate::VolumeInstruction<'_>>();
    assert_unpin::<crate::VolumeInstruction<'_>>();
    assert_unwind_safe::<crate::VolumeInstruction<'_>>();
    assert_ref_unwind_safe::<crate::VolumeInstruction<'_>>();
    assert_send::<crate::WorkdirInstruction<'_>>();
    assert_sync::<crate::WorkdirInstruction<'_>>();
    assert_unpin::<crate::WorkdirInstruction<'_>>();
    assert_unwind_safe::<crate::WorkdirInstruction<'_>>();
    assert_ref_unwind_safe::<crate::WorkdirInstruction<'_>>();
    assert_send::<crate::Keyword>();
    assert_sync::<crate::Keyword>();
    assert_unpin::<crate::Keyword>();
    assert_unwind_safe::<crate::Keyword>();
    assert_ref_unwind_safe::<crate::Keyword>();
    assert_send::<crate::Flag<'_>>();
    assert_sync::<crate::Flag<'_>>();
    assert_unpin::<crate::Flag<'_>>();
    assert_unwind_safe::<crate::Flag<'_>>();
    assert_ref_unwind_safe::<crate::Flag<'_>>();
    assert_send::<crate::UnescapedString<'_>>();
    assert_sync::<crate::UnescapedString<'_>>();
    assert_unpin::<crate::UnescapedString<'_>>();
    assert_unwind_safe::<crate::UnescapedString<'_>>();
    assert_ref_unwind_safe::<crate::UnescapedString<'_>>();
    assert_send::<crate::Command<'_>>();
    assert_sync::<crate::Command<'_>>();
    assert_unpin::<crate::Command<'_>>();
    assert_unwind_safe::<crate::Command<'_>>();
    assert_ref_unwind_safe::<crate::Command<'_>>();
    assert_send::<crate::HereDoc<'_>>();
    assert_sync::<crate::HereDoc<'_>>();
    assert_unpin::<crate::HereDoc<'_>>();
    assert_unwind_safe::<crate::HereDoc<'_>>();
    assert_ref_unwind_safe::<crate::HereDoc<'_>>();
    assert_send::<crate::Spanned<()>>();
    assert_send::<crate::Spanned<NotSync>>();
    assert_not_send!(crate::Spanned<NotSend>);
    assert_sync::<crate::Spanned<()>>();
    assert_sync::<crate::Spanned<NotSend>>();
    assert_not_sync!(crate::Spanned<NotSync>);
    assert_unpin::<crate::Spanned<()>>();
    assert_not_unpin!(crate::Spanned<NotUnpin>);
    assert_unwind_safe::<crate::Spanned<()>>();
    assert_not_unwind_safe!(crate::Spanned<NotUnwindSafe>);
    assert_ref_unwind_safe::<crate::Spanned<()>>();
    assert_not_ref_unwind_safe!(crate::Spanned<NotRefUnwindSafe>);
    assert_send::<crate::Span>();
    assert_sync::<crate::Span>();
    assert_unpin::<crate::Span>();
    assert_unwind_safe::<crate::Span>();
    assert_ref_unwind_safe::<crate::Span>();
    assert_send::<crate::ParseIter<'_>>();
    assert_sync::<crate::ParseIter<'_>>();
    assert_unpin::<crate::ParseIter<'_>>();
    assert_unwind_safe::<crate::ParseIter<'_>>();
    assert_ref_unwind_safe::<crate::ParseIter<'_>>();
};
