{
  "parser_directives": {
    "syntax": {
      "start": 2,
      "value": {
        "span": {
          "start": 9,
          "end": 28
        },
        "value": "docker/dockerfile:1"
      }
    },
    "escape": null,
    "check": null
  },
  "instructions": [
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 30,
          "end": 33
        }
      },
      "arguments": {
        "span": {
          "start": 34,
          "end": 51
        },
        "value": "GO_VERSION=1.24.7"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 52,
          "end": 55
        }
      },
      "arguments": {
        "span": {
          "start": 56,
          "end": 85
        },
        "value": "BASE_DEBIAN_DISTRO=\"bookworm\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 86,
          "end": 89
        }
      },
      "arguments": {
        "span": {
          "start": 90,
          "end": 147
        },
        "value": "GOLANG_IMAGE=\"golang:${GO_VERSION}-${BASE_DEBIAN_DISTRO}\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 284,
          "end": 287
        }
      },
      "arguments": {
        "span": {
          "start": 288,
          "end": 304
        },
        "value": "XX_VERSION=1.7.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 418,
          "end": 421
        }
      },
      "arguments": {
        "span": {
          "start": 422,
          "end": 442
        },
        "value": "VPNKIT_VERSION=0.6.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 523,
          "end": 526
        }
      },
      "arguments": {
        "span": {
          "start": 527,
          "end": 552
        },
        "value": "DOCKERCLI_VERSION=v28.3.2"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 553,
          "end": 556
        }
      },
      "arguments": {
        "span": {
          "start": 557,
          "end": 613
        },
        "value": "DOCKERCLI_REPOSITORY=\"https://github.com/docker/cli.git\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 660,
          "end": 663
        }
      },
      "arguments": {
        "span": {
          "start": 664,
          "end": 732
        },
        "value": "DOCKERCLI_INTEGRATION_REPOSITORY=\"https://github.com/docker/cli.git\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 733,
          "end": 736
        }
      },
      "arguments": {
        "span": {
          "start": 737,
          "end": 778
        },
        "value": "DOCKERCLI_INTEGRATION_VERSION=v18.06.3-ce"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 855,
          "end": 858
        }
      },
      "arguments": {
        "span": {
          "start": 859,
          "end": 880
        },
        "value": "BUILDX_VERSION=0.25.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 959,
          "end": 962
        }
      },
      "arguments": {
        "span": {
          "start": 963,
          "end": 986
        },
        "value": "COMPOSE_VERSION=v2.38.2"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 988,
          "end": 991
        }
      },
      "arguments": {
        "span": {
          "start": 992,
          "end": 1007
        },
        "value": "SYSTEMD=\"false\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1008,
          "end": 1011
        }
      },
      "arguments": {
        "span": {
          "start": 1012,
          "end": 1029
        },
        "value": "FIREWALLD=\"false\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1030,
          "end": 1033
        }
      },
      "arguments": {
        "span": {
          "start": 1034,
          "end": 1049
        },
        "value": "DOCKER_STATIC=1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1319,
          "end": 1322
        }
      },
      "arguments": {
        "span": {
          "start": 1323,
          "end": 1345
        },
        "value": "REGISTRY_VERSION=3.0.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1815,
          "end": 1818
        }
      },
      "arguments": {
        "span": {
          "start": 1819,
          "end": 1960
        },
        "value": "DELVE_SUPPORTED=${TARGETPLATFORM#linux/amd64} DELVE_SUPPORTED=${DELVE_SUPPORTED#linux/arm64} DELVE_SUPPORTED=${DELVE_SUPPORTED#linux/ppc64le}"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1961,
          "end": 1964
        }
      },
      "arguments": {
        "span": {
          "start": 1965,
          "end": 2014
        },
        "value": "DELVE_SUPPORTED=${DELVE_SUPPORTED:+\"unsupported\"}"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 2015,
          "end": 2018
        }
      },
      "arguments": {
        "span": {
          "start": 2019,
          "end": 2066
        },
        "value": "DELVE_SUPPORTED=${DELVE_SUPPORTED:-\"supported\"}"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2095,
          "end": 2099
        }
      },
      "options": [
        {
          "flag_start": 2100,
          "name": {
            "span": {
              "start": 2102,
              "end": 2110
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 2111,
              "end": 2125
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 2126,
          "end": 2153
        },
        "value": "tonistiigi/xx:${XX_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 2154,
            "end": 2156
          }
        },
        {
          "span": {
            "start": 2157,
            "end": 2159
          },
          "value": "xx"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2256,
          "end": 2260
        }
      },
      "options": [
        {
          "flag_start": 2261,
          "name": {
            "span": {
              "start": 2263,
              "end": 2271
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 2272,
              "end": 2286
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 2287,
          "end": 2294
        },
        "value": "busybox"
      },
      "as_": [
        {
          "span": {
            "start": 2295,
            "end": 2297
          }
        },
        {
          "span": {
            "start": 2298,
            "end": 2309
          },
          "value": "build-dummy"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2310,
          "end": 2313
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2314,
            "end": 2329
          },
          "value": "mkdir -p /build"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2330,
          "end": 2334
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 2335,
          "end": 2342
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 2343,
            "end": 2345
          }
        },
        {
          "span": {
            "start": 2346,
            "end": 2358
          },
          "value": "binary-dummy"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 2359,
          "end": 2363
        }
      },
      "options": [
        {
          "flag_start": 2364,
          "name": {
            "span": {
              "start": 2366,
              "end": 2370
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 2371,
              "end": 2382
            },
            "value": "build-dummy"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 2383,
              "end": 2389
            },
            "value": "/build"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 2390,
          "end": 2396
        },
        "value": "/build"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2405,
          "end": 2409
        }
      },
      "options": [
        {
          "flag_start": 2410,
          "name": {
            "span": {
              "start": 2412,
              "end": 2420
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 2421,
              "end": 2435
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 2436,
          "end": 2451
        },
        "value": "${GOLANG_IMAGE}"
      },
      "as_": [
        {
          "span": {
            "start": 2452,
            "end": 2454
          }
        },
        {
          "span": {
            "start": 2455,
            "end": 2459
          },
          "value": "base"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 2460,
          "end": 2464
        }
      },
      "options": [
        {
          "flag_start": 2465,
          "name": {
            "span": {
              "start": 2467,
              "end": 2471
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 2472,
              "end": 2474
            },
            "value": "xx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 2475,
              "end": 2476
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 2477,
          "end": 2478
        },
        "value": "/"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2673,
          "end": 2676
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2677,
            "end": 2780
          },
          "value": "go telemetry off && [ \"$(go telemetry)\" = \"off\" ] || { echo \"Failed to disable Go telemetry\"; exit 1; }"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2781,
          "end": 2784
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2785,
            "end": 2875
          },
          "value": "echo 'Binary::apt::APT::Keep-Downloaded-Packages \"true\";' > /etc/apt/apt.conf.d/keep-cache"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2876,
          "end": 2879
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2880,
            "end": 2945
          },
          "value": "apt-get update && apt-get install --no-install-recommends -y file"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 2946,
          "end": 2949
        }
      },
      "arguments": {
        "span": {
          "start": 2950,
          "end": 2967
        },
        "value": "GOTOOLCHAIN=local"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2969,
          "end": 2973
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 2974,
          "end": 2978
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 2979,
            "end": 2981
          }
        },
        {
          "span": {
            "start": 2982,
            "end": 2986
          },
          "value": "criu"
        }
      ]
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 2987,
          "end": 2990
        }
      },
      "options": [
        {
          "flag_start": 2991,
          "name": {
            "span": {
              "start": 2993,
              "end": 2998
            },
            "value": "chmod"
          },
          "value": {
            "span": {
              "start": 2999,
              "end": 3003
            },
            "value": "0644"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 3004,
              "end": 3087
            },
            "value": "https://download.opensuse.org/repositories/devel:/tools:/criu/Debian_11/Release.key"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 3088,
          "end": 3123
        },
        "value": "/etc/apt/trusted.gpg.d/criu.gpg.asc"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3124,
          "end": 3127
        }
      },
      "options": [
        {
          "flag_start": 3128,
          "name": {
            "span": {
              "start": 3130,
              "end": 3135
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3136,
              "end": 3201
            },
            "value": "type=cache,sharing=locked,id=moby-criu-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 3208,
          "name": {
            "span": {
              "start": 3210,
              "end": 3215
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3216,
              "end": 3285
            },
            "value": "type=cache,sharing=locked,id=moby-criu-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 3296,
            "end": 3592
          },
          "value": "echo 'deb https://download.opensuse.org/repositories/devel:/tools:/criu/Debian_12/ /' > /etc/apt/sources.list.d/criu.list \\\n        && apt-get update \\\n        && apt-get install -y --no-install-recommends criu \\\n        && install -D /usr/sbin/criu /build/criu \\\n        && /build/criu --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 3605,
          "end": 3609
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 3610,
          "end": 3653
        },
        "value": "distribution/distribution:$REGISTRY_VERSION"
      },
      "as_": [
        {
          "span": {
            "start": 3654,
            "end": 3656
          }
        },
        {
          "span": {
            "start": 3657,
            "end": 3665
          },
          "value": "registry"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3666,
          "end": 3669
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 3670,
            "end": 3718
          },
          "value": "mkdir /build && mv /bin/registry /build/registry"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 3733,
          "end": 3737
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 3738,
          "end": 3742
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 3743,
            "end": 3745
          }
        },
        {
          "span": {
            "start": 3746,
            "end": 3753
          },
          "value": "swagger"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 3754,
          "end": 3761
        }
      },
      "arguments": {
        "span": {
          "start": 3762,
          "end": 3802
        },
        "value": "/go/src/github.com/go-swagger/go-swagger"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3803,
          "end": 3806
        }
      },
      "arguments": {
        "span": {
          "start": 3807,
          "end": 3821
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3999,
          "end": 4002
        }
      },
      "arguments": {
        "span": {
          "start": 4003,
          "end": 4029
        },
        "value": "GO_SWAGGER_VERSION=v0.32.3"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 4030,
          "end": 4033
        }
      },
      "options": [
        {
          "flag_start": 4034,
          "name": {
            "span": {
              "start": 4036,
              "end": 4041
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4042,
              "end": 4114
            },
            "value": "type=cache,target=/root/.cache/go-build,id=swagger-build-$TARGETPLATFORM"
          }
        },
        {
          "flag_start": 4121,
          "name": {
            "span": {
              "start": 4123,
              "end": 4128
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4129,
              "end": 4158
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        },
        {
          "flag_start": 4165,
          "name": {
            "span": {
              "start": 4167,
              "end": 4172
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4173,
              "end": 4199
            },
            "value": "type=tmpfs,target=/go/src/"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 4205,
            "end": 4205
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 4206,
            "end": 4354
          },
          "expand": true,
          "value": "  set -e\n  GOBIN=/build CGO_ENABLED=0 xx-go install \"github.com/go-swagger/go-swagger/cmd/swagger@${GO_SWAGGER_VERSION}\"\n  xx-verify /build/swagger\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 4498,
          "end": 4502
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 4503,
          "end": 4531
        },
        "value": "debian:${BASE_DEBIAN_DISTRO}"
      },
      "as_": [
        {
          "span": {
            "start": 4532,
            "end": 4534
          }
        },
        {
          "span": {
            "start": 4535,
            "end": 4548
          },
          "value": "frozen-images"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 4549,
          "end": 4552
        }
      },
      "options": [
        {
          "flag_start": 4553,
          "name": {
            "span": {
              "start": 4555,
              "end": 4560
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4561,
              "end": 4635
            },
            "value": "type=cache,sharing=locked,id=moby-frozen-images-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 4642,
          "name": {
            "span": {
              "start": 4644,
              "end": 4649
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4650,
              "end": 4728
            },
            "value": "type=cache,sharing=locked,id=moby-frozen-images-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 4738,
            "end": 4861
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n           ca-certificates \\\n           curl \\\n           jq"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 4951,
          "end": 4955
        }
      },
      "options": [],
      "src": [
        {
          "path": {
            "span": {
              "start": 4956,
              "end": 4991
            },
            "value": "contrib/download-frozen-image-v2.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 4992,
          "end": 4993
        },
        "value": "/"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 4994,
          "end": 4997
        }
      },
      "arguments": {
        "span": {
          "start": 4998,
          "end": 5008
        },
        "value": "TARGETARCH"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5009,
          "end": 5012
        }
      },
      "arguments": {
        "span": {
          "start": 5013,
          "end": 5026
        },
        "value": "TARGETVARIANT"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5027,
          "end": 5030
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 5031,
            "end": 5770
          },
          "value": "/download-frozen-image-v2.sh /build \\\n        busybox:latest@sha256:95cf004f559831017cdf4628aaf1bb30133677be8702a8c5f2994629f637a209 \\\n        busybox:glibc@sha256:1f81263701cddf6402afe9f33fca0266d9fff379e59b1748f33d3072da71ee85 \\\n        debian:trixie-slim@sha256:c85a2732e97694ea77237c61304b3bb410e0e961dd6ee945997a06c788c545bb \\\n        hello-world:latest@sha256:d58e752213a51785838f9eed2b7a498ffa1cb3aa7f946dda11af39286c3db9a9 \\\n        arm32v7/hello-world:latest@sha256:50b8560ad574c779908da71f7ce370c0a2471c098d44d1c8f6b513c5a55eeeb1 \\\n        hello-world:amd64@sha256:90659bf80b44ce6be8234e6ff90a1ac34acbeb826903b02cfa0da11c82cbc042 \\\n        hello-world:arm64@sha256:963612c5503f3f1674f315c67089dee577d8cc6afc18565e0b4183ae355fb343"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 5780,
          "end": 5784
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 5785,
          "end": 5789
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 5790,
            "end": 5792
          }
        },
        {
          "span": {
            "start": 5793,
            "end": 5802
          },
          "value": "delve-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 5803,
          "end": 5810
        }
      },
      "arguments": {
        "span": {
          "start": 5811,
          "end": 5825
        },
        "value": "/usr/src/delve"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5826,
          "end": 5829
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 5830,
            "end": 5905
          },
          "value": "git init . && git remote add origin \"https://github.com/go-delve/delve.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 6111,
          "end": 6114
        }
      },
      "arguments": {
        "span": {
          "start": 6115,
          "end": 6136
        },
        "value": "DELVE_VERSION=v1.25.0"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6137,
          "end": 6140
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 6141,
            "end": 6244
          },
          "value": "git fetch -q --depth 1 origin \"${DELVE_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6246,
          "end": 6250
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6251,
          "end": 6255
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 6256,
            "end": 6258
          }
        },
        {
          "span": {
            "start": 6259,
            "end": 6274
          },
          "value": "delve-supported"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 6275,
          "end": 6282
        }
      },
      "arguments": {
        "span": {
          "start": 6283,
          "end": 6297
        },
        "value": "/usr/src/delve"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 6298,
          "end": 6301
        }
      },
      "arguments": {
        "span": {
          "start": 6302,
          "end": 6316
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6317,
          "end": 6320
        }
      },
      "options": [
        {
          "flag_start": 6321,
          "name": {
            "span": {
              "start": 6323,
              "end": 6328
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6329,
              "end": 6365
            },
            "value": "from=delve-src,src=/usr/src/delve,rw"
          }
        },
        {
          "flag_start": 6372,
          "name": {
            "span": {
              "start": 6374,
              "end": 6379
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6380,
              "end": 6450
            },
            "value": "type=cache,target=/root/.cache/go-build,id=delve-build-$TARGETPLATFORM"
          }
        },
        {
          "flag_start": 6457,
          "name": {
            "span": {
              "start": 6459,
              "end": 6464
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6465,
              "end": 6494
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 6500,
            "end": 6500
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 6501,
            "end": 6571
          },
          "expand": true,
          "value": "  set -e\n  xx-go build -o /build/dlv ./cmd/dlv\n  xx-verify /build/dlv\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6576,
          "end": 6580
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6581,
          "end": 6593
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 6594,
            "end": 6596
          }
        },
        {
          "span": {
            "start": 6597,
            "end": 6614
          },
          "value": "delve-unsupported"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6615,
          "end": 6619
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6620,
          "end": 6644
        },
        "value": "delve-${DELVE_SUPPORTED}"
      },
      "as_": [
        {
          "span": {
            "start": 6645,
            "end": 6647
          }
        },
        {
          "span": {
            "start": 6648,
            "end": 6653
          },
          "value": "delve"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6655,
          "end": 6659
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6660,
          "end": 6664
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 6665,
            "end": 6667
          }
        },
        {
          "span": {
            "start": 6668,
            "end": 6676
          },
          "value": "gowinres"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 6727,
          "end": 6730
        }
      },
      "arguments": {
        "span": {
          "start": 6731,
          "end": 6754
        },
        "value": "GOWINRES_VERSION=v0.3.1"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6755,
          "end": 6758
        }
      },
      "options": [
        {
          "flag_start": 6759,
          "name": {
            "span": {
              "start": 6761,
              "end": 6766
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6767,
              "end": 6806
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 6813,
          "name": {
            "span": {
              "start": 6815,
              "end": 6820
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6821,
              "end": 6850
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 6861,
            "end": 6982
          },
          "value": "GOBIN=/build CGO_ENABLED=0 go install \"github.com/tc-hib/go-winres@${GOWINRES_VERSION}\" \\\n     && /build/go-winres --help"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6997,
          "end": 7001
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7002,
          "end": 7006
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 7007,
            "end": 7009
          }
        },
        {
          "span": {
            "start": 7010,
            "end": 7024
          },
          "value": "containerd-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 7025,
          "end": 7032
        }
      },
      "arguments": {
        "span": {
          "start": 7033,
          "end": 7052
        },
        "value": "/usr/src/containerd"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7053,
          "end": 7056
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 7057,
            "end": 7139
          },
          "value": "git init . && git remote add origin \"https://github.com/containerd/containerd.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7388,
          "end": 7391
        }
      },
      "arguments": {
        "span": {
          "start": 7392,
          "end": 7418
        },
        "value": "CONTAINERD_VERSION=v1.7.28"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7419,
          "end": 7422
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 7423,
            "end": 7531
          },
          "value": "git fetch -q --depth 1 origin \"${CONTAINERD_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7533,
          "end": 7537
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7538,
          "end": 7542
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 7543,
            "end": 7545
          }
        },
        {
          "span": {
            "start": 7546,
            "end": 7562
          },
          "value": "containerd-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 7563,
          "end": 7570
        }
      },
      "arguments": {
        "span": {
          "start": 7571,
          "end": 7611
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7612,
          "end": 7615
        }
      },
      "arguments": {
        "span": {
          "start": 7616,
          "end": 7630
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7631,
          "end": 7634
        }
      },
      "options": [
        {
          "flag_start": 7635,
          "name": {
            "span": {
              "start": 7637,
              "end": 7642
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7643,
              "end": 7714
            },
            "value": "type=cache,sharing=locked,id=moby-containerd-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 7721,
          "name": {
            "span": {
              "start": 7723,
              "end": 7728
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7729,
              "end": 7804
            },
            "value": "type=cache,sharing=locked,id=moby-containerd-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 7815,
            "end": 7921
          },
          "value": "apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7922,
          "end": 7925
        }
      },
      "arguments": {
        "span": {
          "start": 7926,
          "end": 7939
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7940,
          "end": 7943
        }
      },
      "options": [
        {
          "flag_start": 7944,
          "name": {
            "span": {
              "start": 7946,
              "end": 7951
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7952,
              "end": 7998
            },
            "value": "from=containerd-src,src=/usr/src/containerd,rw"
          }
        },
        {
          "flag_start": 8005,
          "name": {
            "span": {
              "start": 8007,
              "end": 8012
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 8013,
              "end": 8088
            },
            "value": "type=cache,target=/root/.cache/go-build,id=containerd-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 8094,
            "end": 8094
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 8095,
            "end": 8598
          },
          "expand": true,
          "value": "  set -e\n  export CC=$(xx-info)-gcc\n  export CGO_ENABLED=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"0\" || echo \"1\")\n  xx-go --wrap\n  make $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"STATIC=1\") binaries\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/containerd\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/containerd-shim-runc-v2\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/ctr\n  mkdir /build\n  mv bin/containerd bin/containerd-shim-runc-v2 bin/ctr /build\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8603,
          "end": 8607
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8608,
          "end": 8624
        },
        "value": "containerd-build"
      },
      "as_": [
        {
          "span": {
            "start": 8625,
            "end": 8627
          }
        },
        {
          "span": {
            "start": 8628,
            "end": 8644
          },
          "value": "containerd-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8645,
          "end": 8649
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8650,
          "end": 8662
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 8663,
            "end": 8665
          }
        },
        {
          "span": {
            "start": 8666,
            "end": 8684
          },
          "value": "containerd-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8685,
          "end": 8689
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8690,
          "end": 8712
        },
        "value": "containerd-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 8713,
            "end": 8715
          }
        },
        {
          "span": {
            "start": 8716,
            "end": 8726
          },
          "value": "containerd"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8728,
          "end": 8732
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8733,
          "end": 8737
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 8738,
            "end": 8740
          }
        },
        {
          "span": {
            "start": 8741,
            "end": 8754
          },
          "value": "golangci_lint"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 8755,
          "end": 8758
        }
      },
      "arguments": {
        "span": {
          "start": 8759,
          "end": 8787
        },
        "value": "GOLANGCI_LINT_VERSION=v2.1.5"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8788,
          "end": 8791
        }
      },
      "options": [
        {
          "flag_start": 8792,
          "name": {
            "span": {
              "start": 8794,
              "end": 8799
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 8800,
              "end": 8839
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 8846,
          "name": {
            "span": {
              "start": 8848,
              "end": 8853
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 8854,
              "end": 8883
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 8894,
            "end": 9054
          },
          "value": "GOBIN=/build CGO_ENABLED=0 go install \"github.com/golangci/golangci-lint/v2/cmd/golangci-lint@${GOLANGCI_LINT_VERSION}\" \\\n     && /build/golangci-lint --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9056,
          "end": 9060
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9061,
          "end": 9065
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 9066,
            "end": 9068
          }
        },
        {
          "span": {
            "start": 9069,
            "end": 9078
          },
          "value": "gotestsum"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9152,
          "end": 9155
        }
      },
      "arguments": {
        "span": {
          "start": 9156,
          "end": 9181
        },
        "value": "GOTESTSUM_VERSION=v1.12.3"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9182,
          "end": 9185
        }
      },
      "options": [
        {
          "flag_start": 9186,
          "name": {
            "span": {
              "start": 9188,
              "end": 9193
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9194,
              "end": 9233
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 9240,
          "name": {
            "span": {
              "start": 9242,
              "end": 9247
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9248,
              "end": 9277
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 9288,
            "end": 9408
          },
          "value": "GOBIN=/build CGO_ENABLED=0 go install \"gotest.tools/gotestsum@${GOTESTSUM_VERSION}\" \\\n     && /build/gotestsum --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9410,
          "end": 9414
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9415,
          "end": 9419
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 9420,
            "end": 9422
          }
        },
        {
          "span": {
            "start": 9423,
            "end": 9428
          },
          "value": "shfmt"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9429,
          "end": 9432
        }
      },
      "arguments": {
        "span": {
          "start": 9433,
          "end": 9453
        },
        "value": "SHFMT_VERSION=v3.8.0"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9454,
          "end": 9457
        }
      },
      "options": [
        {
          "flag_start": 9458,
          "name": {
            "span": {
              "start": 9460,
              "end": 9465
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9466,
              "end": 9505
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 9512,
          "name": {
            "span": {
              "start": 9514,
              "end": 9519
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9520,
              "end": 9549
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 9560,
            "end": 9674
          },
          "value": "GOBIN=/build CGO_ENABLED=0 go install \"mvdan.cc/sh/v3/cmd/shfmt@${SHFMT_VERSION}\" \\\n     && /build/shfmt --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9676,
          "end": 9680
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9681,
          "end": 9685
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 9686,
            "end": 9688
          }
        },
        {
          "span": {
            "start": 9689,
            "end": 9694
          },
          "value": "gopls"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9695,
          "end": 9698
        }
      },
      "options": [
        {
          "flag_start": 9699,
          "name": {
            "span": {
              "start": 9701,
              "end": 9706
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9707,
              "end": 9746
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 9753,
          "name": {
            "span": {
              "start": 9755,
              "end": 9760
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9761,
              "end": 9790
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 9801,
            "end": 9903
          },
          "value": "GOBIN=/build CGO_ENABLED=0 go install \"golang.org/x/tools/gopls@latest\" \\\n     && /build/gopls version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9905,
          "end": 9909
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9910,
          "end": 9914
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 9915,
            "end": 9917
          }
        },
        {
          "span": {
            "start": 9918,
            "end": 9927
          },
          "value": "dockercli"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 9928,
          "end": 9935
        }
      },
      "arguments": {
        "span": {
          "start": 9936,
          "end": 9965
        },
        "value": "/go/src/github.com/docker/cli"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9966,
          "end": 9969
        }
      },
      "arguments": {
        "span": {
          "start": 9970,
          "end": 9990
        },
        "value": "DOCKERCLI_REPOSITORY"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9991,
          "end": 9994
        }
      },
      "arguments": {
        "span": {
          "start": 9995,
          "end": 10012
        },
        "value": "DOCKERCLI_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10013,
          "end": 10016
        }
      },
      "arguments": {
        "span": {
          "start": 10017,
          "end": 10031
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10032,
          "end": 10035
        }
      },
      "options": [
        {
          "flag_start": 10036,
          "name": {
            "span": {
              "start": 10038,
              "end": 10043
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10044,
              "end": 10106
            },
            "value": "source=hack/dockerfile/cli.sh,target=/download-or-build-cli.sh"
          }
        },
        {
          "flag_start": 10113,
          "name": {
            "span": {
              "start": 10115,
              "end": 10120
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10121,
              "end": 10193
            },
            "value": "type=cache,id=dockercli-git-$TARGETPLATFORM,sharing=locked,target=./.git"
          }
        },
        {
          "flag_start": 10200,
          "name": {
            "span": {
              "start": 10202,
              "end": 10207
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10208,
              "end": 10282
            },
            "value": "type=cache,target=/root/.cache/go-build,id=dockercli-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 10293,
            "end": 10492
          },
          "value": "rm -f ./.git/*.lock \\\n     && /download-or-build-cli.sh ${DOCKERCLI_VERSION} ${DOCKERCLI_REPOSITORY} /build \\\n     && /build/docker --version \\\n     && /build/docker completion bash >/completion.bash"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10494,
          "end": 10498
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10499,
          "end": 10503
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 10504,
            "end": 10506
          }
        },
        {
          "span": {
            "start": 10507,
            "end": 10528
          },
          "value": "dockercli-integration"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 10529,
          "end": 10536
        }
      },
      "arguments": {
        "span": {
          "start": 10537,
          "end": 10566
        },
        "value": "/go/src/github.com/docker/cli"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10567,
          "end": 10570
        }
      },
      "arguments": {
        "span": {
          "start": 10571,
          "end": 10603
        },
        "value": "DOCKERCLI_INTEGRATION_REPOSITORY"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10604,
          "end": 10607
        }
      },
      "arguments": {
        "span": {
          "start": 10608,
          "end": 10637
        },
        "value": "DOCKERCLI_INTEGRATION_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10638,
          "end": 10641
        }
      },
      "arguments": {
        "span": {
          "start": 10642,
          "end": 10656
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10657,
          "end": 10660
        }
      },
      "options": [
        {
          "flag_start": 10661,
          "name": {
            "span": {
              "start": 10663,
              "end": 10668
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10669,
              "end": 10731
            },
            "value": "source=hack/dockerfile/cli.sh,target=/download-or-build-cli.sh"
          }
        },
        {
          "flag_start": 10738,
          "name": {
            "span": {
              "start": 10740,
              "end": 10745
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10746,
              "end": 10818
            },
            "value": "type=cache,id=dockercli-git-$TARGETPLATFORM,sharing=locked,target=./.git"
          }
        },
        {
          "flag_start": 10825,
          "name": {
            "span": {
              "start": 10827,
              "end": 10832
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10833,
              "end": 10907
            },
            "value": "type=cache,target=/root/.cache/go-build,id=dockercli-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 10918,
            "end": 11083
          },
          "value": "rm -f ./.git/*.lock \\\n     && /download-or-build-cli.sh ${DOCKERCLI_INTEGRATION_VERSION} ${DOCKERCLI_INTEGRATION_REPOSITORY} /build \\\n     && /build/docker --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 11092,
          "end": 11096
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 11097,
          "end": 11101
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 11102,
            "end": 11104
          }
        },
        {
          "span": {
            "start": 11105,
            "end": 11113
          },
          "value": "runc-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 11114,
          "end": 11121
        }
      },
      "arguments": {
        "span": {
          "start": 11122,
          "end": 11135
        },
        "value": "/usr/src/runc"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11136,
          "end": 11139
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 11140,
            "end": 11220
          },
          "value": "git init . && git remote add origin \"https://github.com/opencontainers/runc.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11437,
          "end": 11440
        }
      },
      "arguments": {
        "span": {
          "start": 11441,
          "end": 11460
        },
        "value": "RUNC_VERSION=v1.3.0"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11461,
          "end": 11464
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 11465,
            "end": 11567
          },
          "value": "git fetch -q --depth 1 origin \"${RUNC_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 11569,
          "end": 11573
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 11574,
          "end": 11578
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 11579,
            "end": 11581
          }
        },
        {
          "span": {
            "start": 11582,
            "end": 11592
          },
          "value": "runc-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 11593,
          "end": 11600
        }
      },
      "arguments": {
        "span": {
          "start": 11601,
          "end": 11639
        },
        "value": "/go/src/github.com/opencontainers/runc"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11640,
          "end": 11643
        }
      },
      "arguments": {
        "span": {
          "start": 11644,
          "end": 11658
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11659,
          "end": 11662
        }
      },
      "options": [
        {
          "flag_start": 11663,
          "name": {
            "span": {
              "start": 11665,
              "end": 11670
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11671,
              "end": 11736
            },
            "value": "type=cache,sharing=locked,id=moby-runc-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 11743,
          "name": {
            "span": {
              "start": 11745,
              "end": 11750
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11751,
              "end": 11820
            },
            "value": "type=cache,sharing=locked,id=moby-runc-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 11831,
            "end": 11990
          },
          "value": "apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            libseccomp-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11991,
          "end": 11994
        }
      },
      "arguments": {
        "span": {
          "start": 11995,
          "end": 12008
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12009,
          "end": 12012
        }
      },
      "options": [
        {
          "flag_start": 12013,
          "name": {
            "span": {
              "start": 12015,
              "end": 12020
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12021,
              "end": 12055
            },
            "value": "from=runc-src,src=/usr/src/runc,rw"
          }
        },
        {
          "flag_start": 12062,
          "name": {
            "span": {
              "start": 12064,
              "end": 12069
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12070,
              "end": 12139
            },
            "value": "type=cache,target=/root/.cache/go-build,id=runc-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 12145,
            "end": 12145
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 12146,
            "end": 12354
          },
          "expand": true,
          "value": "  set -e\n  xx-go --wrap\n  CGO_ENABLED=1 make \"$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"static\" || echo \"runc\")\"\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") runc\n  mkdir /build\n  mv runc /build/\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12359,
          "end": 12363
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12364,
          "end": 12374
        },
        "value": "runc-build"
      },
      "as_": [
        {
          "span": {
            "start": 12375,
            "end": 12377
          }
        },
        {
          "span": {
            "start": 12378,
            "end": 12388
          },
          "value": "runc-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12389,
          "end": 12393
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12394,
          "end": 12406
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 12407,
            "end": 12409
          }
        },
        {
          "span": {
            "start": 12410,
            "end": 12422
          },
          "value": "runc-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12423,
          "end": 12427
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12428,
          "end": 12444
        },
        "value": "runc-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 12445,
            "end": 12447
          }
        },
        {
          "span": {
            "start": 12448,
            "end": 12452
          },
          "value": "runc"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12461,
          "end": 12465
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12466,
          "end": 12470
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 12471,
            "end": 12473
          }
        },
        {
          "span": {
            "start": 12474,
            "end": 12482
          },
          "value": "tini-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 12483,
          "end": 12490
        }
      },
      "arguments": {
        "span": {
          "start": 12491,
          "end": 12504
        },
        "value": "/usr/src/tini"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12505,
          "end": 12508
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 12509,
            "end": 12582
          },
          "value": "git init . && git remote add origin \"https://github.com/krallin/tini.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 12725,
          "end": 12728
        }
      },
      "arguments": {
        "span": {
          "start": 12729,
          "end": 12749
        },
        "value": "TINI_VERSION=v0.19.0"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12750,
          "end": 12753
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 12754,
            "end": 12856
          },
          "value": "git fetch -q --depth 1 origin \"${TINI_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12858,
          "end": 12862
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12863,
          "end": 12867
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 12868,
            "end": 12870
          }
        },
        {
          "span": {
            "start": 12871,
            "end": 12881
          },
          "value": "tini-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 12882,
          "end": 12889
        }
      },
      "arguments": {
        "span": {
          "start": 12890,
          "end": 12921
        },
        "value": "/go/src/github.com/krallin/tini"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12922,
          "end": 12925
        }
      },
      "options": [
        {
          "flag_start": 12926,
          "name": {
            "span": {
              "start": 12928,
              "end": 12933
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12934,
              "end": 12999
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 13006,
          "name": {
            "span": {
              "start": 13008,
              "end": 13013
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13014,
              "end": 13083
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 13094,
            "end": 13160
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends cmake"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 13161,
          "end": 13164
        }
      },
      "arguments": {
        "span": {
          "start": 13165,
          "end": 13179
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13180,
          "end": 13183
        }
      },
      "options": [
        {
          "flag_start": 13184,
          "name": {
            "span": {
              "start": 13186,
              "end": 13191
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13192,
              "end": 13257
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 13264,
          "name": {
            "span": {
              "start": 13266,
              "end": 13271
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13272,
              "end": 13341
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 13352,
            "end": 13464
          },
          "value": "xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13465,
          "end": 13468
        }
      },
      "options": [
        {
          "flag_start": 13469,
          "name": {
            "span": {
              "start": 13471,
              "end": 13476
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13477,
              "end": 13511
            },
            "value": "from=tini-src,src=/usr/src/tini,rw"
          }
        },
        {
          "flag_start": 13518,
          "name": {
            "span": {
              "start": 13520,
              "end": 13525
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13526,
              "end": 13595
            },
            "value": "type=cache,target=/root/.cache/go-build,id=tini-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 13601,
            "end": 13601
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 13602,
            "end": 13742
          },
          "expand": true,
          "value": "  set -e\n  CC=$(xx-info)-gcc cmake .\n  make tini-static\n  xx-verify --static tini-static\n  mkdir /build\n  mv tini-static /build/docker-init\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13747,
          "end": 13751
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13752,
          "end": 13762
        },
        "value": "tini-build"
      },
      "as_": [
        {
          "span": {
            "start": 13763,
            "end": 13765
          }
        },
        {
          "span": {
            "start": 13766,
            "end": 13776
          },
          "value": "tini-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13777,
          "end": 13781
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13782,
          "end": 13794
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 13795,
            "end": 13797
          }
        },
        {
          "span": {
            "start": 13798,
            "end": 13810
          },
          "value": "tini-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13811,
          "end": 13815
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13816,
          "end": 13832
        },
        "value": "tini-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 13833,
            "end": 13835
          }
        },
        {
          "span": {
            "start": 13836,
            "end": 13840
          },
          "value": "tini"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13856,
          "end": 13860
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13861,
          "end": 13865
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 13866,
            "end": 13868
          }
        },
        {
          "span": {
            "start": 13869,
            "end": 13884
          },
          "value": "rootlesskit-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 13885,
          "end": 13892
        }
      },
      "arguments": {
        "span": {
          "start": 13893,
          "end": 13913
        },
        "value": "/usr/src/rootlesskit"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13914,
          "end": 13917
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 13918,
            "end": 14010
          },
          "value": "git init . && git remote add origin \"https://github.com/rootless-containers/rootlesskit.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 14110,
          "end": 14113
        }
      },
      "arguments": {
        "span": {
          "start": 14114,
          "end": 14140
        },
        "value": "ROOTLESSKIT_VERSION=v2.3.5"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14141,
          "end": 14144
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 14145,
            "end": 14254
          },
          "value": "git fetch -q --depth 1 origin \"${ROOTLESSKIT_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14256,
          "end": 14260
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14261,
          "end": 14265
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 14266,
            "end": 14268
          }
        },
        {
          "span": {
            "start": 14269,
            "end": 14286
          },
          "value": "rootlesskit-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 14287,
          "end": 14294
        }
      },
      "arguments": {
        "span": {
          "start": 14295,
          "end": 14345
        },
        "value": "/go/src/github.com/rootless-containers/rootlesskit"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 14346,
          "end": 14349
        }
      },
      "arguments": {
        "span": {
          "start": 14350,
          "end": 14364
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14365,
          "end": 14368
        }
      },
      "options": [
        {
          "flag_start": 14369,
          "name": {
            "span": {
              "start": 14371,
              "end": 14376
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14377,
              "end": 14449
            },
            "value": "type=cache,sharing=locked,id=moby-rootlesskit-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 14456,
          "name": {
            "span": {
              "start": 14458,
              "end": 14463
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14464,
              "end": 14540
            },
            "value": "type=cache,sharing=locked,id=moby-rootlesskit-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 14551,
            "end": 14681
          },
          "value": "apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 14682,
          "end": 14685
        }
      },
      "arguments": {
        "span": {
          "start": 14686,
          "end": 14699
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14700,
          "end": 14703
        }
      },
      "options": [
        {
          "flag_start": 14704,
          "name": {
            "span": {
              "start": 14706,
              "end": 14711
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14712,
              "end": 14760
            },
            "value": "from=rootlesskit-src,src=/usr/src/rootlesskit,rw"
          }
        },
        {
          "flag_start": 14767,
          "name": {
            "span": {
              "start": 14769,
              "end": 14774
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14775,
              "end": 14804
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        },
        {
          "flag_start": 14811,
          "name": {
            "span": {
              "start": 14813,
              "end": 14818
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14819,
              "end": 14895
            },
            "value": "type=cache,target=/root/.cache/go-build,id=rootlesskit-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 14901,
            "end": 14901
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 14902,
            "end": 15191
          },
          "expand": true,
          "value": "  set -e\n  export CGO_ENABLED=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"0\" || echo \"1\")\n  xx-go build -o /build/rootlesskit -ldflags=\"$([ \"$DOCKER_STATIC\" != \"1\" ] && echo \"-linkmode=external\")\" ./cmd/rootlesskit\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /build/rootlesskit\n"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 15195,
          "end": 15199
        }
      },
      "options": [
        {
          "flag_start": 15200,
          "name": {
            "span": {
              "start": 15202,
              "end": 15206
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 15207,
              "end": 15236
            },
            "value": "./contrib/dockerd-rootless.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 15237,
          "end": 15244
        },
        "value": "/build/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 15245,
          "end": 15249
        }
      },
      "options": [
        {
          "flag_start": 15250,
          "name": {
            "span": {
              "start": 15252,
              "end": 15256
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 15257,
              "end": 15296
            },
            "value": "./contrib/dockerd-rootless-setuptool.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 15297,
          "end": 15304
        },
        "value": "/build/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 15306,
          "end": 15310
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 15311,
          "end": 15328
        },
        "value": "rootlesskit-build"
      },
      "as_": [
        {
          "span": {
            "start": 15329,
            "end": 15331
          }
        },
        {
          "span": {
            "start": 15332,
            "end": 15349
          },
          "value": "rootlesskit-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 15350,
          "end": 15354
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 15355,
          "end": 15367
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 15368,
            "end": 15370
          }
        },
        {
          "span": {
            "start": 15371,
            "end": 15390
          },
          "value": "rootlesskit-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 15391,
          "end": 15395
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 15396,
          "end": 15419
        },
        "value": "rootlesskit-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 15420,
            "end": 15422
          }
        },
        {
          "span": {
            "start": 15423,
            "end": 15434
          },
          "value": "rootlesskit"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 15436,
          "end": 15440
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 15441,
          "end": 15445
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 15446,
            "end": 15448
          }
        },
        {
          "span": {
            "start": 15449,
            "end": 15453
          },
          "value": "crun"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 15525,
          "end": 15528
        }
      },
      "arguments": {
        "span": {
          "start": 15529,
          "end": 15546
        },
        "value": "CRUN_VERSION=1.21"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15547,
          "end": 15550
        }
      },
      "options": [
        {
          "flag_start": 15551,
          "name": {
            "span": {
              "start": 15553,
              "end": 15558
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 15559,
              "end": 15624
            },
            "value": "type=cache,sharing=locked,id=moby-crun-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 15631,
          "name": {
            "span": {
              "start": 15633,
              "end": 15638
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 15639,
              "end": 15708
            },
            "value": "type=cache,sharing=locked,id=moby-crun-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 15719,
            "end": 16056
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            autoconf \\\n            automake \\\n            build-essential \\\n            libcap-dev \\\n            libprotobuf-c-dev \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            libtool \\\n            libyajl-dev \\\n            python3 \\\n            ;"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 16057,
          "end": 16060
        }
      },
      "options": [
        {
          "flag_start": 16061,
          "name": {
            "span": {
              "start": 16063,
              "end": 16068
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 16069,
              "end": 16102
            },
            "value": "type=tmpfs,target=/tmp/crun-build"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 16109,
            "end": 16328
          },
          "value": "git clone https://github.com/containers/crun.git /tmp/crun-build && \\\n    cd /tmp/crun-build && \\\n    git checkout -q \"${CRUN_VERSION}\" && \\\n    ./autogen.sh && \\\n    ./configure --bindir=/build && \\\n    make -j install"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16414,
          "end": 16418
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16419,
          "end": 16426
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 16427,
            "end": 16429
          }
        },
        {
          "span": {
            "start": 16430,
            "end": 16444
          },
          "value": "vpnkit-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16445,
          "end": 16449
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16450,
          "end": 16457
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 16458,
            "end": 16460
          }
        },
        {
          "span": {
            "start": 16461,
            "end": 16477
          },
          "value": "vpnkit-linux-386"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16478,
          "end": 16482
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16483,
          "end": 16490
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 16491,
            "end": 16493
          }
        },
        {
          "span": {
            "start": 16494,
            "end": 16510
          },
          "value": "vpnkit-linux-arm"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16511,
          "end": 16515
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16516,
          "end": 16523
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 16524,
            "end": 16526
          }
        },
        {
          "span": {
            "start": 16527,
            "end": 16547
          },
          "value": "vpnkit-linux-ppc64le"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16548,
          "end": 16552
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16553,
          "end": 16560
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 16561,
            "end": 16563
          }
        },
        {
          "span": {
            "start": 16564,
            "end": 16584
          },
          "value": "vpnkit-linux-riscv64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16585,
          "end": 16589
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16590,
          "end": 16597
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 16598,
            "end": 16600
          }
        },
        {
          "span": {
            "start": 16601,
            "end": 16619
          },
          "value": "vpnkit-linux-s390x"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16620,
          "end": 16624
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16625,
          "end": 16658
        },
        "value": "moby/vpnkit-bin:${VPNKIT_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 16659,
            "end": 16661
          }
        },
        {
          "span": {
            "start": 16662,
            "end": 16680
          },
          "value": "vpnkit-linux-amd64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16681,
          "end": 16685
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16686,
          "end": 16719
        },
        "value": "moby/vpnkit-bin:${VPNKIT_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 16720,
            "end": 16722
          }
        },
        {
          "span": {
            "start": 16723,
            "end": 16741
          },
          "value": "vpnkit-linux-arm64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16742,
          "end": 16746
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16747,
          "end": 16773
        },
        "value": "vpnkit-linux-${TARGETARCH}"
      },
      "as_": [
        {
          "span": {
            "start": 16774,
            "end": 16776
          }
        },
        {
          "span": {
            "start": 16777,
            "end": 16789
          },
          "value": "vpnkit-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16790,
          "end": 16794
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16795,
          "end": 16813
        },
        "value": "vpnkit-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 16814,
            "end": 16816
          }
        },
        {
          "span": {
            "start": 16817,
            "end": 16823
          },
          "value": "vpnkit"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16844,
          "end": 16848
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16849,
          "end": 16853
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 16854,
            "end": 16856
          }
        },
        {
          "span": {
            "start": 16857,
            "end": 16874
          },
          "value": "containerutil-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 16875,
          "end": 16882
        }
      },
      "arguments": {
        "span": {
          "start": 16883,
          "end": 16905
        },
        "value": "/usr/src/containerutil"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 16906,
          "end": 16909
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 16910,
            "end": 17011
          },
          "value": "git init . && git remote add origin \"https://github.com/docker-archive/windows-container-utility.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 17012,
          "end": 17015
        }
      },
      "arguments": {
        "span": {
          "start": 17016,
          "end": 17081
        },
        "value": "CONTAINERUTILITY_VERSION=aa1ba87e99b68e0113bd27ec26c60b88f9d4ccd9"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17082,
          "end": 17085
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17086,
            "end": 17200
          },
          "value": "git fetch -q --depth 1 origin \"${CONTAINERUTILITY_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17202,
          "end": 17206
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17207,
          "end": 17211
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 17212,
            "end": 17214
          }
        },
        {
          "span": {
            "start": 17215,
            "end": 17234
          },
          "value": "containerutil-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 17235,
          "end": 17242
        }
      },
      "arguments": {
        "span": {
          "start": 17243,
          "end": 17265
        },
        "value": "/usr/src/containerutil"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 17266,
          "end": 17269
        }
      },
      "arguments": {
        "span": {
          "start": 17270,
          "end": 17284
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17285,
          "end": 17288
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17289,
            "end": 17403
          },
          "value": "xx-apt-get install -y --no-install-recommends \\\n        gcc \\\n        g++ \\\n        libc6-dev \\\n        pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17404,
          "end": 17407
        }
      },
      "options": [
        {
          "flag_start": 17408,
          "name": {
            "span": {
              "start": 17410,
              "end": 17415
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 17416,
              "end": 17468
            },
            "value": "from=containerutil-src,src=/usr/src/containerutil,rw"
          }
        },
        {
          "flag_start": 17475,
          "name": {
            "span": {
              "start": 17477,
              "end": 17482
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 17483,
              "end": 17561
            },
            "value": "type=cache,target=/root/.cache/go-build,id=containerutil-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 17567,
            "end": 17567
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 17568,
            "end": 17716
          },
          "expand": true,
          "value": "  set -e\n  CC=\"$(xx-info)-gcc\" CXX=\"$(xx-info)-g++\" make\n  xx-verify --static containerutility.exe\n  mkdir /build\n  mv containerutility.exe /build/\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17721,
          "end": 17725
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17726,
          "end": 17738
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 17739,
            "end": 17741
          }
        },
        {
          "span": {
            "start": 17742,
            "end": 17761
          },
          "value": "containerutil-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17762,
          "end": 17766
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17767,
          "end": 17786
        },
        "value": "containerutil-build"
      },
      "as_": [
        {
          "span": {
            "start": 17787,
            "end": 17789
          }
        },
        {
          "span": {
            "start": 17790,
            "end": 17817
          },
          "value": "containerutil-windows-amd64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17818,
          "end": 17822
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17823,
          "end": 17858
        },
        "value": "containerutil-windows-${TARGETARCH}"
      },
      "as_": [
        {
          "span": {
            "start": 17859,
            "end": 17861
          }
        },
        {
          "span": {
            "start": 17862,
            "end": 17883
          },
          "value": "containerutil-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17884,
          "end": 17888
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17889,
          "end": 17914
        },
        "value": "containerutil-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 17915,
            "end": 17917
          }
        },
        {
          "span": {
            "start": 17918,
            "end": 17931
          },
          "value": "containerutil"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17932,
          "end": 17936
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17937,
          "end": 17972
        },
        "value": "docker/buildx-bin:${BUILDX_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 17973,
            "end": 17975
          }
        },
        {
          "span": {
            "start": 17976,
            "end": 17982
          },
          "value": "buildx"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17983,
          "end": 17987
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17988,
          "end": 18025
        },
        "value": "docker/compose-bin:${COMPOSE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 18026,
            "end": 18028
          }
        },
        {
          "span": {
            "start": 18029,
            "end": 18036
          },
          "value": "compose"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 18038,
          "end": 18042
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 18043,
          "end": 18047
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 18048,
            "end": 18050
          }
        },
        {
          "span": {
            "start": 18051,
            "end": 18068
          },
          "value": "dev-systemd-false"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18069,
          "end": 18073
        }
      },
      "options": [
        {
          "flag_start": 18074,
          "name": {
            "span": {
              "start": 18076,
              "end": 18080
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18081,
          "name": {
            "span": {
              "start": 18083,
              "end": 18087
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18088,
              "end": 18101
            },
            "value": "frozen-images"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18102,
              "end": 18109
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18110,
          "end": 18131
        },
        "value": "/docker-frozen-images"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18132,
          "end": 18136
        }
      },
      "options": [
        {
          "flag_start": 18137,
          "name": {
            "span": {
              "start": 18139,
              "end": 18143
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18144,
          "name": {
            "span": {
              "start": 18146,
              "end": 18150
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18151,
              "end": 18158
            },
            "value": "swagger"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18165,
              "end": 18172
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18173,
          "end": 18188
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18189,
          "end": 18193
        }
      },
      "options": [
        {
          "flag_start": 18194,
          "name": {
            "span": {
              "start": 18196,
              "end": 18200
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18201,
          "name": {
            "span": {
              "start": 18203,
              "end": 18207
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18208,
              "end": 18213
            },
            "value": "delve"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18222,
              "end": 18229
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18230,
          "end": 18245
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18246,
          "end": 18250
        }
      },
      "options": [
        {
          "flag_start": 18251,
          "name": {
            "span": {
              "start": 18253,
              "end": 18257
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18258,
          "name": {
            "span": {
              "start": 18260,
              "end": 18264
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18265,
              "end": 18273
            },
            "value": "gowinres"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18279,
              "end": 18286
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18287,
          "end": 18302
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18303,
          "end": 18307
        }
      },
      "options": [
        {
          "flag_start": 18308,
          "name": {
            "span": {
              "start": 18310,
              "end": 18314
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18315,
          "name": {
            "span": {
              "start": 18317,
              "end": 18321
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18322,
              "end": 18326
            },
            "value": "tini"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18336,
              "end": 18343
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18344,
          "end": 18359
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18360,
          "end": 18364
        }
      },
      "options": [
        {
          "flag_start": 18365,
          "name": {
            "span": {
              "start": 18367,
              "end": 18371
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18372,
          "name": {
            "span": {
              "start": 18374,
              "end": 18378
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18379,
              "end": 18387
            },
            "value": "registry"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18393,
              "end": 18400
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18401,
          "end": 18416
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18756,
          "end": 18760
        }
      },
      "options": [
        {
          "flag_start": 18761,
          "name": {
            "span": {
              "start": 18763,
              "end": 18767
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18768,
          "name": {
            "span": {
              "start": 18770,
              "end": 18774
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18775,
              "end": 18784
            },
            "value": "gotestsum"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18789,
              "end": 18796
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18797,
          "end": 18812
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18813,
          "end": 18817
        }
      },
      "options": [
        {
          "flag_start": 18818,
          "name": {
            "span": {
              "start": 18820,
              "end": 18824
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18825,
          "name": {
            "span": {
              "start": 18827,
              "end": 18831
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18832,
              "end": 18845
            },
            "value": "golangci_lint"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18846,
              "end": 18853
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18854,
          "end": 18869
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18870,
          "end": 18874
        }
      },
      "options": [
        {
          "flag_start": 18875,
          "name": {
            "span": {
              "start": 18877,
              "end": 18881
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18882,
          "name": {
            "span": {
              "start": 18884,
              "end": 18888
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18889,
              "end": 18894
            },
            "value": "shfmt"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18903,
              "end": 18910
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18911,
          "end": 18926
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18927,
          "end": 18931
        }
      },
      "options": [
        {
          "flag_start": 18932,
          "name": {
            "span": {
              "start": 18934,
              "end": 18938
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18939,
          "name": {
            "span": {
              "start": 18941,
              "end": 18945
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18946,
              "end": 18950
            },
            "value": "runc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18960,
              "end": 18967
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18968,
          "end": 18983
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18984,
          "end": 18988
        }
      },
      "options": [
        {
          "flag_start": 18989,
          "name": {
            "span": {
              "start": 18991,
              "end": 18995
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18996,
          "name": {
            "span": {
              "start": 18998,
              "end": 19002
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19003,
              "end": 19013
            },
            "value": "containerd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19017,
              "end": 19024
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19025,
          "end": 19040
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19041,
          "end": 19045
        }
      },
      "options": [
        {
          "flag_start": 19046,
          "name": {
            "span": {
              "start": 19048,
              "end": 19052
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19053,
          "name": {
            "span": {
              "start": 19055,
              "end": 19059
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19060,
              "end": 19071
            },
            "value": "rootlesskit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19074,
              "end": 19081
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19082,
          "end": 19097
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19098,
          "end": 19102
        }
      },
      "options": [
        {
          "flag_start": 19103,
          "name": {
            "span": {
              "start": 19105,
              "end": 19109
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19110,
          "name": {
            "span": {
              "start": 19112,
              "end": 19116
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19117,
              "end": 19123
            },
            "value": "vpnkit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19131,
              "end": 19132
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19139,
          "end": 19154
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19155,
          "end": 19159
        }
      },
      "options": [
        {
          "flag_start": 19160,
          "name": {
            "span": {
              "start": 19162,
              "end": 19166
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19167,
          "name": {
            "span": {
              "start": 19169,
              "end": 19173
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19174,
              "end": 19187
            },
            "value": "containerutil"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19188,
              "end": 19195
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19196,
          "end": 19211
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19212,
          "end": 19216
        }
      },
      "options": [
        {
          "flag_start": 19217,
          "name": {
            "span": {
              "start": 19219,
              "end": 19223
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19224,
          "name": {
            "span": {
              "start": 19226,
              "end": 19230
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19231,
              "end": 19235
            },
            "value": "crun"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19245,
              "end": 19252
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19253,
          "end": 19268
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19269,
          "end": 19273
        }
      },
      "options": [
        {
          "flag_start": 19274,
          "name": {
            "span": {
              "start": 19276,
              "end": 19280
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19281,
              "end": 19308
            },
            "value": "hack/dockerfile/etc/docker/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19310,
          "end": 19322
        },
        "value": "/etc/docker/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19323,
          "end": 19327
        }
      },
      "options": [
        {
          "flag_start": 19328,
          "name": {
            "span": {
              "start": 19330,
              "end": 19334
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19335,
          "name": {
            "span": {
              "start": 19337,
              "end": 19341
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19342,
              "end": 19348
            },
            "value": "buildx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19356,
              "end": 19363
            },
            "value": "/buildx"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19364,
          "end": 19415
        },
        "value": "/usr/local/libexec/docker/cli-plugins/docker-buildx"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19416,
          "end": 19420
        }
      },
      "options": [
        {
          "flag_start": 19421,
          "name": {
            "span": {
              "start": 19423,
              "end": 19427
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19428,
          "name": {
            "span": {
              "start": 19430,
              "end": 19434
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19435,
              "end": 19442
            },
            "value": "compose"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19449,
              "end": 19464
            },
            "value": "/docker-compose"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19465,
          "end": 19511
        },
        "value": "/usr/libexec/docker/cli-plugins/docker-compose"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 19513,
          "end": 19516
        }
      },
      "arguments": {
        "span": {
          "start": 19517,
          "end": 19542
        },
        "value": "PATH=/usr/local/cli:$PATH"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 19543,
          "end": 19546
        }
      },
      "arguments": {
        "span": {
          "start": 19547,
          "end": 19599
        },
        "value": "TEST_CLIENT_BINARY=/usr/local/cli-integration/docker"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 19600,
          "end": 19603
        }
      },
      "arguments": {
        "span": {
          "start": 19604,
          "end": 19661
        },
        "value": "CONTAINERD_ADDRESS=/run/docker/containerd/containerd.sock"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 19662,
          "end": 19665
        }
      },
      "arguments": {
        "span": {
          "start": 19666,
          "end": 19691
        },
        "value": "CONTAINERD_NAMESPACE=moby"
      }
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 19692,
          "end": 19699
        }
      },
      "arguments": {
        "span": {
          "start": 19700,
          "end": 19732
        },
        "value": "/go/src/github.com/docker/docker"
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 19733,
          "end": 19739
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 19740,
              "end": 19755
            },
            "value": "/var/lib/docker"
          }
        ]
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 19756,
          "end": 19762
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 19763,
              "end": 19805
            },
            "value": "/home/unprivilegeduser/.local/share/docker"
          }
        ]
      }
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 19886,
          "end": 19896
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 19897,
            "end": 19910
          },
          "value": [
            {
              "span": {
                "start": 19899,
                "end": 19908
              },
              "value": "hack/dind"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 19912,
          "end": 19916
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 19917,
          "end": 19934
        },
        "value": "dev-systemd-false"
      },
      "as_": [
        {
          "span": {
            "start": 19935,
            "end": 19937
          }
        },
        {
          "span": {
            "start": 19938,
            "end": 19954
          },
          "value": "dev-systemd-true"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 19955,
          "end": 19958
        }
      },
      "options": [
        {
          "flag_start": 19959,
          "name": {
            "span": {
              "start": 19961,
              "end": 19966
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 19967,
              "end": 20031
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 20038,
          "name": {
            "span": {
              "start": 20040,
              "end": 20045
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 20046,
              "end": 20114
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 20125,
            "end": 20285
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            dbus \\\n            dbus-user-session \\\n            systemd \\\n            systemd-sysv"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 20286,
          "end": 20296
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 20297,
            "end": 20318
          },
          "value": [
            {
              "span": {
                "start": 20299,
                "end": 20316
              },
              "value": "hack/dind-systemd"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 20320,
          "end": 20324
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 20325,
          "end": 20347
        },
        "value": "dev-systemd-${SYSTEMD}"
      },
      "as_": [
        {
          "span": {
            "start": 20348,
            "end": 20350
          }
        },
        {
          "span": {
            "start": 20351,
            "end": 20370
          },
          "value": "dev-firewalld-false"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 20372,
          "end": 20376
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 20377,
          "end": 20393
        },
        "value": "dev-systemd-true"
      },
      "as_": [
        {
          "span": {
            "start": 20394,
            "end": 20396
          }
        },
        {
          "span": {
            "start": 20397,
            "end": 20415
          },
          "value": "dev-firewalld-true"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 20416,
          "end": 20419
        }
      },
      "options": [
        {
          "flag_start": 20420,
          "name": {
            "span": {
              "start": 20422,
              "end": 20427
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 20428,
              "end": 20492
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 20499,
          "name": {
            "span": {
              "start": 20501,
              "end": 20506
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 20507,
              "end": 20575
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 20586,
            "end": 20670
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            firewalld"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 20672,
          "end": 20676
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 20677,
          "end": 20703
        },
        "value": "dev-firewalld-${FIREWALLD}"
      },
      "as_": [
        {
          "span": {
            "start": 20704,
            "end": 20706
          }
        },
        {
          "span": {
            "start": 20707,
            "end": 20715
          },
          "value": "dev-base"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 20716,
          "end": 20719
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 20720,
            "end": 20738
          },
          "value": "groupadd -r docker"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 20739,
          "end": 20742
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 20743,
            "end": 20907
          },
          "value": "useradd --create-home --gid docker unprivilegeduser \\\n && mkdir -p /home/unprivilegeduser/.local/share/docker \\\n && chown -R unprivilegeduser /home/unprivilegeduser"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 20936,
          "end": 20939
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 20940,
            "end": 20998
          },
          "value": "ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21026,
          "end": 21029
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21030,
            "end": 21106
          },
          "value": "echo \"source /usr/share/bash-completion/bash_completion\" >> /etc/bash.bashrc"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21107,
          "end": 21110
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21111,
            "end": 21119
          },
          "value": "ldconfig"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21302,
          "end": 21305
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21306,
            "end": 21383
          },
          "value": "git config --global --add safe.directory $GOPATH/src/github.com/docker/docker"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21583,
          "end": 21586
        }
      },
      "options": [
        {
          "flag_start": 21587,
          "name": {
            "span": {
              "start": 21589,
              "end": 21594
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 21595,
              "end": 21659
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 21666,
          "name": {
            "span": {
              "start": 21668,
              "end": 21673
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 21674,
              "end": 21742
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 21753,
            "end": 22508
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            apparmor \\\n            bash-completion \\\n            bzip2 \\\n            fuse-overlayfs \\\n            inetutils-ping \\\n            iproute2 \\\n            iptables \\\n            nftables \\\n            jq \\\n            libcap2-bin \\\n            libnet1 \\\n            libnl-3-200 \\\n            libprotobuf-c1 \\\n            libyajl2 \\\n            nano \\\n            net-tools \\\n            netcat-openbsd \\\n            patch \\\n            pigz \\\n            sudo \\\n            systemd-journal-remote \\\n            thin-provisioning-tools \\\n            uidmap \\\n            vim \\\n            vim-common \\\n            xfsprogs \\\n            xz-utils \\\n            zip \\\n            zstd"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 22509,
          "end": 22512
        }
      },
      "options": [
        {
          "flag_start": 22513,
          "name": {
            "span": {
              "start": 22515,
              "end": 22520
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 22521,
              "end": 22585
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 22592,
          "name": {
            "span": {
              "start": 22594,
              "end": 22599
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 22600,
              "end": 22668
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 22679,
            "end": 22863
          },
          "value": "apt-get update && apt-get install --no-install-recommends -y \\\n            gcc \\\n            pkg-config \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            yamllint"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 22864,
          "end": 22868
        }
      },
      "options": [
        {
          "flag_start": 22869,
          "name": {
            "span": {
              "start": 22871,
              "end": 22875
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 22876,
          "name": {
            "span": {
              "start": 22878,
              "end": 22882
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 22883,
              "end": 22892
            },
            "value": "dockercli"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 22905,
              "end": 22912
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 22913,
          "end": 22927
        },
        "value": "/usr/local/cli"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 22928,
          "end": 22932
        }
      },
      "options": [
        {
          "flag_start": 22933,
          "name": {
            "span": {
              "start": 22935,
              "end": 22939
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 22940,
          "name": {
            "span": {
              "start": 22942,
              "end": 22946
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 22947,
              "end": 22956
            },
            "value": "dockercli"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 22969,
              "end": 22985
            },
            "value": "/completion.bash"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 22986,
          "end": 23015
        },
        "value": "/etc/bash_completion.d/docker"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 23016,
          "end": 23020
        }
      },
      "options": [
        {
          "flag_start": 23021,
          "name": {
            "span": {
              "start": 23023,
              "end": 23027
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 23028,
          "name": {
            "span": {
              "start": 23030,
              "end": 23034
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 23035,
              "end": 23056
            },
            "value": "dockercli-integration"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 23057,
              "end": 23064
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 23065,
          "end": 23091
        },
        "value": "/usr/local/cli-integration"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 23093,
          "end": 23097
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 23098,
          "end": 23102
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 23103,
            "end": 23105
          }
        },
        {
          "span": {
            "start": 23106,
            "end": 23111
          },
          "value": "build"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 23112,
          "end": 23116
        }
      },
      "options": [
        {
          "flag_start": 23117,
          "name": {
            "span": {
              "start": 23119,
              "end": 23123
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 23124,
              "end": 23132
            },
            "value": "gowinres"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 23133,
              "end": 23140
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 23141,
          "end": 23156
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 23157,
          "end": 23164
        }
      },
      "arguments": {
        "span": {
          "start": 23165,
          "end": 23197
        },
        "value": "/go/src/github.com/docker/docker"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 23198,
          "end": 23201
        }
      },
      "arguments": {
        "span": {
          "start": 23202,
          "end": 23215
        },
        "value": "CGO_ENABLED=1"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 23216,
          "end": 23219
        }
      },
      "options": [
        {
          "flag_start": 23220,
          "name": {
            "span": {
              "start": 23222,
              "end": 23227
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23228,
              "end": 23294
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 23301,
          "name": {
            "span": {
              "start": 23303,
              "end": 23308
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23309,
              "end": 23379
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 23390,
            "end": 23530
          },
          "value": "apt-get update && apt-get install --no-install-recommends -y \\\n            clang \\\n            lld \\\n            llvm \\\n            icoutils"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23531,
          "end": 23534
        }
      },
      "arguments": {
        "span": {
          "start": 23535,
          "end": 23549
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 23550,
          "end": 23553
        }
      },
      "options": [
        {
          "flag_start": 23554,
          "name": {
            "span": {
              "start": 23556,
              "end": 23561
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23562,
              "end": 23628
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 23635,
          "name": {
            "span": {
              "start": 23637,
              "end": 23642
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23643,
              "end": 23713
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 23724,
            "end": 23894
          },
          "value": "xx-apt-get install --no-install-recommends -y \\\n            gcc \\\n            libc6-dev \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23895,
          "end": 23898
        }
      },
      "arguments": {
        "span": {
          "start": 23899,
          "end": 23915
        },
        "value": "DOCKER_BUILDTAGS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23916,
          "end": 23919
        }
      },
      "arguments": {
        "span": {
          "start": 23920,
          "end": 23932
        },
        "value": "DOCKER_DEBUG"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23933,
          "end": 23936
        }
      },
      "arguments": {
        "span": {
          "start": 23937,
          "end": 23958
        },
        "value": "DOCKER_GITCOMMIT=HEAD"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23959,
          "end": 23962
        }
      },
      "arguments": {
        "span": {
          "start": 23963,
          "end": 23977
        },
        "value": "DOCKER_LDFLAGS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23978,
          "end": 23981
        }
      },
      "arguments": {
        "span": {
          "start": 23982,
          "end": 23995
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23996,
          "end": 23999
        }
      },
      "arguments": {
        "span": {
          "start": 24000,
          "end": 24007
        },
        "value": "VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24008,
          "end": 24011
        }
      },
      "arguments": {
        "span": {
          "start": 24012,
          "end": 24020
        },
        "value": "PLATFORM"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24021,
          "end": 24024
        }
      },
      "arguments": {
        "span": {
          "start": 24025,
          "end": 24032
        },
        "value": "PRODUCT"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24033,
          "end": 24036
        }
      },
      "arguments": {
        "span": {
          "start": 24037,
          "end": 24060
        },
        "value": "DEFAULT_PRODUCT_LICENSE"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 24061,
          "end": 24064
        }
      },
      "arguments": {
        "span": {
          "start": 24065,
          "end": 24078
        },
        "value": "PACKAGER_NAME"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 24193,
          "end": 24196
        }
      },
      "arguments": {
        "span": {
          "start": 24197,
          "end": 24208
        },
        "value": "PREFIX=/tmp"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 24209,
          "end": 24212
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 24218,
            "end": 24218
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 24219,
            "end": 24411
          },
          "expand": true,
          "value": "  # in bullseye arm64 target does not link with lld so configure it to use ld instead\n  if [ \"$(xx-info arch)\" = \"arm64\" ]; then\n    XX_CC_PREFER_LINKER=ld xx-clang --setup-target-triple\n  fi\n"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 24415,
          "end": 24418
        }
      },
      "options": [
        {
          "flag_start": 24419,
          "name": {
            "span": {
              "start": 24421,
              "end": 24426
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 24427,
              "end": 24448
            },
            "value": "type=bind,target=.,rw"
          }
        },
        {
          "flag_start": 24455,
          "name": {
            "span": {
              "start": 24457,
              "end": 24462
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 24463,
              "end": 24532
            },
            "value": "type=cache,target=/root/.cache/go-build,id=moby-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 24538,
            "end": 24538
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 24539,
            "end": 25045
          },
          "expand": true,
          "value": "  set -e\n  target=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"binary\" || echo \"dynbinary\")\n  xx-go --wrap\n  PKG_CONFIG=$(xx-go env PKG_CONFIG) ./hack/make.sh $target\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /tmp/bundles/${target}-daemon/dockerd$([ \"$(xx-info os)\" = \"windows\" ] && echo \".exe\")\n  [ \"$(xx-info os)\" != \"linux\" ] || xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /tmp/bundles/${target}-daemon/docker-proxy\n  mkdir /build\n  mv /tmp/bundles/${target}-daemon/* /build/\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 25175,
          "end": 25179
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 25180,
          "end": 25187
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 25188,
            "end": 25190
          }
        },
        {
          "span": {
            "start": 25191,
            "end": 25197
          },
          "value": "binary"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25198,
          "end": 25202
        }
      },
      "options": [
        {
          "flag_start": 25203,
          "name": {
            "span": {
              "start": 25205,
              "end": 25209
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25210,
              "end": 25215
            },
            "value": "build"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25216,
              "end": 25223
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25224,
          "end": 25225
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 25263,
          "end": 25267
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 25268,
          "end": 25275
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 25276,
            "end": 25278
          }
        },
        {
          "span": {
            "start": 25279,
            "end": 25282
          },
          "value": "all"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25283,
          "end": 25287
        }
      },
      "options": [
        {
          "flag_start": 25288,
          "name": {
            "span": {
              "start": 25290,
              "end": 25294
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25295,
          "name": {
            "span": {
              "start": 25297,
              "end": 25301
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25302,
              "end": 25306
            },
            "value": "tini"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25316,
              "end": 25323
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25324,
          "end": 25325
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25326,
          "end": 25330
        }
      },
      "options": [
        {
          "flag_start": 25331,
          "name": {
            "span": {
              "start": 25333,
              "end": 25337
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25338,
          "name": {
            "span": {
              "start": 25340,
              "end": 25344
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25345,
              "end": 25349
            },
            "value": "runc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25359,
              "end": 25366
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25367,
          "end": 25368
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25369,
          "end": 25373
        }
      },
      "options": [
        {
          "flag_start": 25374,
          "name": {
            "span": {
              "start": 25376,
              "end": 25380
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25381,
          "name": {
            "span": {
              "start": 25383,
              "end": 25387
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25388,
              "end": 25398
            },
            "value": "containerd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25402,
              "end": 25409
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25410,
          "end": 25411
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25412,
          "end": 25416
        }
      },
      "options": [
        {
          "flag_start": 25417,
          "name": {
            "span": {
              "start": 25419,
              "end": 25423
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25424,
          "name": {
            "span": {
              "start": 25426,
              "end": 25430
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25431,
              "end": 25442
            },
            "value": "rootlesskit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25445,
              "end": 25452
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25453,
          "end": 25454
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25455,
          "end": 25459
        }
      },
      "options": [
        {
          "flag_start": 25460,
          "name": {
            "span": {
              "start": 25462,
              "end": 25466
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25467,
          "name": {
            "span": {
              "start": 25469,
              "end": 25473
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25474,
              "end": 25487
            },
            "value": "containerutil"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25488,
              "end": 25495
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25496,
          "end": 25497
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25498,
          "end": 25502
        }
      },
      "options": [
        {
          "flag_start": 25503,
          "name": {
            "span": {
              "start": 25505,
              "end": 25509
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25510,
          "name": {
            "span": {
              "start": 25512,
              "end": 25516
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25517,
              "end": 25523
            },
            "value": "vpnkit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25531,
              "end": 25532
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25539,
          "end": 25540
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25541,
          "end": 25545
        }
      },
      "options": [
        {
          "flag_start": 25546,
          "name": {
            "span": {
              "start": 25548,
              "end": 25552
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25553,
          "name": {
            "span": {
              "start": 25555,
              "end": 25559
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25560,
              "end": 25565
            },
            "value": "build"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25574,
              "end": 25580
            },
            "value": "/build"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25582,
          "end": 25583
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 25648,
          "end": 25652
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 25653,
          "end": 25657
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 25658,
            "end": 25660
          }
        },
        {
          "span": {
            "start": 25661,
            "end": 25670
          },
          "value": "smoketest"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 25671,
          "end": 25678
        }
      },
      "arguments": {
        "span": {
          "start": 25679,
          "end": 25693
        },
        "value": "/usr/local/bin"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25694,
          "end": 25698
        }
      },
      "options": [
        {
          "flag_start": 25699,
          "name": {
            "span": {
              "start": 25701,
              "end": 25705
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25706,
              "end": 25711
            },
            "value": "build"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25712,
              "end": 25718
            },
            "value": "/build"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25719,
          "end": 25720
        },
        "value": "."
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 25721,
          "end": 25724
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 25730,
            "end": 25730
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 25731,
            "end": 25821
          },
          "expand": true,
          "value": "  set -ex\n  file dockerd\n  dockerd --version\n  file docker-proxy\n  docker-proxy --version\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 25892,
          "end": 25896
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 25897,
          "end": 25905
        },
        "value": "dev-base"
      },
      "as_": [
        {
          "span": {
            "start": 25906,
            "end": 25908
          }
        },
        {
          "span": {
            "start": 25909,
            "end": 25921
          },
          "value": "devcontainer"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25922,
          "end": 25926
        }
      },
      "options": [
        {
          "flag_start": 25927,
          "name": {
            "span": {
              "start": 25929,
              "end": 25933
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25934,
              "end": 25935
            },
            "value": "."
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25936,
          "end": 25937
        },
        "value": "."
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25938,
          "end": 25942
        }
      },
      "options": [
        {
          "flag_start": 25943,
          "name": {
            "span": {
              "start": 25945,
              "end": 25949
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25950,
          "name": {
            "span": {
              "start": 25952,
              "end": 25956
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25957,
              "end": 25962
            },
            "value": "gopls"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25971,
              "end": 25978
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25979,
          "end": 25994
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 26174,
          "end": 26178
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 26179,
          "end": 26190
        },
        "value": "docker:dind"
      },
      "as_": [
        {
          "span": {
            "start": 26191,
            "end": 26193
          }
        },
        {
          "span": {
            "start": 26194,
            "end": 26198
          },
          "value": "dind"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26199,
          "end": 26203
        }
      },
      "options": [
        {
          "flag_start": 26204,
          "name": {
            "span": {
              "start": 26206,
              "end": 26210
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26211,
          "name": {
            "span": {
              "start": 26213,
              "end": 26217
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26218,
              "end": 26227
            },
            "value": "dockercli"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26228,
              "end": 26241
            },
            "value": "/build/docker"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26242,
          "end": 26257
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26258,
          "end": 26262
        }
      },
      "options": [
        {
          "flag_start": 26263,
          "name": {
            "span": {
              "start": 26265,
              "end": 26269
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26270,
          "name": {
            "span": {
              "start": 26272,
              "end": 26276
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26277,
              "end": 26283
            },
            "value": "buildx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26287,
              "end": 26294
            },
            "value": "/buildx"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26295,
          "end": 26346
        },
        "value": "/usr/local/libexec/docker/cli-plugins/docker-buildx"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26347,
          "end": 26351
        }
      },
      "options": [
        {
          "flag_start": 26352,
          "name": {
            "span": {
              "start": 26354,
              "end": 26358
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26359,
          "name": {
            "span": {
              "start": 26361,
              "end": 26365
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26366,
              "end": 26373
            },
            "value": "compose"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26376,
              "end": 26391
            },
            "value": "/docker-compose"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26392,
          "end": 26444
        },
        "value": "/usr/local/libexec/docker/cli-plugins/docker-compose"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26445,
          "end": 26449
        }
      },
      "options": [
        {
          "flag_start": 26450,
          "name": {
            "span": {
              "start": 26452,
              "end": 26456
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26457,
          "name": {
            "span": {
              "start": 26459,
              "end": 26463
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26464,
              "end": 26467
            },
            "value": "all"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26474,
              "end": 26475
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26476,
          "end": 26491
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 26545,
          "end": 26549
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 26550,
          "end": 26558
        },
        "value": "dev-base"
      },
      "as_": [
        {
          "span": {
            "start": 26559,
            "end": 26561
          }
        },
        {
          "span": {
            "start": 26562,
            "end": 26565
          },
          "value": "dev"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26566,
          "end": 26570
        }
      },
      "options": [
        {
          "flag_start": 26571,
          "name": {
            "span": {
              "start": 26573,
              "end": 26577
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26578,
              "end": 26579
            },
            "value": "."
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26580,
          "end": 26581
        },
        "value": "."
      }
    }
  ]
}