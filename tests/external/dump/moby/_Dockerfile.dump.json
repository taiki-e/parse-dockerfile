{
  "parser_directives": {
    "syntax": {
      "start": 2,
      "value": {
        "span": {
          "start": 9,
          "end": 28
        },
        "value": "docker/dockerfile:1"
      }
    },
    "escape": null,
    "check": null
  },
  "instructions": [
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 30,
          "end": 33
        }
      },
      "arguments": {
        "span": {
          "start": 34,
          "end": 51
        },
        "value": "GO_VERSION=1.24.6"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 52,
          "end": 55
        }
      },
      "arguments": {
        "span": {
          "start": 56,
          "end": 85
        },
        "value": "BASE_DEBIAN_DISTRO=\"bookworm\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 86,
          "end": 89
        }
      },
      "arguments": {
        "span": {
          "start": 90,
          "end": 147
        },
        "value": "GOLANG_IMAGE=\"golang:${GO_VERSION}-${BASE_DEBIAN_DISTRO}\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 148,
          "end": 151
        }
      },
      "arguments": {
        "span": {
          "start": 152,
          "end": 168
        },
        "value": "XX_VERSION=1.6.1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 282,
          "end": 285
        }
      },
      "arguments": {
        "span": {
          "start": 286,
          "end": 306
        },
        "value": "VPNKIT_VERSION=0.6.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 387,
          "end": 390
        }
      },
      "arguments": {
        "span": {
          "start": 391,
          "end": 416
        },
        "value": "DOCKERCLI_VERSION=v28.3.2"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 417,
          "end": 420
        }
      },
      "arguments": {
        "span": {
          "start": 421,
          "end": 477
        },
        "value": "DOCKERCLI_REPOSITORY=\"https://github.com/docker/cli.git\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 524,
          "end": 527
        }
      },
      "arguments": {
        "span": {
          "start": 528,
          "end": 596
        },
        "value": "DOCKERCLI_INTEGRATION_REPOSITORY=\"https://github.com/docker/cli.git\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 597,
          "end": 600
        }
      },
      "arguments": {
        "span": {
          "start": 601,
          "end": 642
        },
        "value": "DOCKERCLI_INTEGRATION_VERSION=v18.06.3-ce"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 719,
          "end": 722
        }
      },
      "arguments": {
        "span": {
          "start": 723,
          "end": 744
        },
        "value": "BUILDX_VERSION=0.25.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 823,
          "end": 826
        }
      },
      "arguments": {
        "span": {
          "start": 827,
          "end": 850
        },
        "value": "COMPOSE_VERSION=v2.38.2"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 852,
          "end": 855
        }
      },
      "arguments": {
        "span": {
          "start": 856,
          "end": 871
        },
        "value": "SYSTEMD=\"false\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 872,
          "end": 875
        }
      },
      "arguments": {
        "span": {
          "start": 876,
          "end": 893
        },
        "value": "FIREWALLD=\"false\""
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 894,
          "end": 897
        }
      },
      "arguments": {
        "span": {
          "start": 898,
          "end": 913
        },
        "value": "DOCKER_STATIC=1"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1183,
          "end": 1186
        }
      },
      "arguments": {
        "span": {
          "start": 1187,
          "end": 1209
        },
        "value": "REGISTRY_VERSION=3.0.0"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1679,
          "end": 1682
        }
      },
      "arguments": {
        "span": {
          "start": 1683,
          "end": 1824
        },
        "value": "DELVE_SUPPORTED=${TARGETPLATFORM#linux/amd64} DELVE_SUPPORTED=${DELVE_SUPPORTED#linux/arm64} DELVE_SUPPORTED=${DELVE_SUPPORTED#linux/ppc64le}"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1825,
          "end": 1828
        }
      },
      "arguments": {
        "span": {
          "start": 1829,
          "end": 1878
        },
        "value": "DELVE_SUPPORTED=${DELVE_SUPPORTED:+\"unsupported\"}"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 1879,
          "end": 1882
        }
      },
      "arguments": {
        "span": {
          "start": 1883,
          "end": 1930
        },
        "value": "DELVE_SUPPORTED=${DELVE_SUPPORTED:-\"supported\"}"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 1959,
          "end": 1963
        }
      },
      "options": [
        {
          "flag_start": 1964,
          "name": {
            "span": {
              "start": 1966,
              "end": 1974
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 1975,
              "end": 1989
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 1990,
          "end": 2017
        },
        "value": "tonistiigi/xx:${XX_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 2018,
            "end": 2020
          }
        },
        {
          "span": {
            "start": 2021,
            "end": 2023
          },
          "value": "xx"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2120,
          "end": 2124
        }
      },
      "options": [
        {
          "flag_start": 2125,
          "name": {
            "span": {
              "start": 2127,
              "end": 2135
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 2136,
              "end": 2150
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 2151,
          "end": 2158
        },
        "value": "busybox"
      },
      "as_": [
        {
          "span": {
            "start": 2159,
            "end": 2161
          }
        },
        {
          "span": {
            "start": 2162,
            "end": 2173
          },
          "value": "build-dummy"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2174,
          "end": 2177
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2178,
            "end": 2193
          },
          "value": "mkdir -p /build"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2194,
          "end": 2198
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 2199,
          "end": 2206
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 2207,
            "end": 2209
          }
        },
        {
          "span": {
            "start": 2210,
            "end": 2222
          },
          "value": "binary-dummy"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 2223,
          "end": 2227
        }
      },
      "options": [
        {
          "flag_start": 2228,
          "name": {
            "span": {
              "start": 2230,
              "end": 2234
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 2235,
              "end": 2246
            },
            "value": "build-dummy"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 2247,
              "end": 2253
            },
            "value": "/build"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 2254,
          "end": 2260
        },
        "value": "/build"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2269,
          "end": 2273
        }
      },
      "options": [
        {
          "flag_start": 2274,
          "name": {
            "span": {
              "start": 2276,
              "end": 2284
            },
            "value": "platform"
          },
          "value": {
            "span": {
              "start": 2285,
              "end": 2299
            },
            "value": "$BUILDPLATFORM"
          }
        }
      ],
      "image": {
        "span": {
          "start": 2300,
          "end": 2315
        },
        "value": "${GOLANG_IMAGE}"
      },
      "as_": [
        {
          "span": {
            "start": 2316,
            "end": 2318
          }
        },
        {
          "span": {
            "start": 2319,
            "end": 2323
          },
          "value": "base"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 2324,
          "end": 2328
        }
      },
      "options": [
        {
          "flag_start": 2329,
          "name": {
            "span": {
              "start": 2331,
              "end": 2335
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 2336,
              "end": 2338
            },
            "value": "xx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 2339,
              "end": 2340
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 2341,
          "end": 2342
        },
        "value": "/"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2537,
          "end": 2540
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2541,
            "end": 2644
          },
          "value": "go telemetry off && [ \"$(go telemetry)\" = \"off\" ] || { echo \"Failed to disable Go telemetry\"; exit 1; }"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2645,
          "end": 2648
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2649,
            "end": 2739
          },
          "value": "echo 'Binary::apt::APT::Keep-Downloaded-Packages \"true\";' > /etc/apt/apt.conf.d/keep-cache"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2740,
          "end": 2743
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 2744,
            "end": 2809
          },
          "value": "apt-get update && apt-get install --no-install-recommends -y file"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 2810,
          "end": 2813
        }
      },
      "arguments": {
        "span": {
          "start": 2814,
          "end": 2831
        },
        "value": "GOTOOLCHAIN=local"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 2833,
          "end": 2837
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 2838,
          "end": 2842
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 2843,
            "end": 2845
          }
        },
        {
          "span": {
            "start": 2846,
            "end": 2850
          },
          "value": "criu"
        }
      ]
    },
    {
      "kind": "ADD",
      "add": {
        "span": {
          "start": 2851,
          "end": 2854
        }
      },
      "options": [
        {
          "flag_start": 2855,
          "name": {
            "span": {
              "start": 2857,
              "end": 2862
            },
            "value": "chmod"
          },
          "value": {
            "span": {
              "start": 2863,
              "end": 2867
            },
            "value": "0644"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 2868,
              "end": 2951
            },
            "value": "https://download.opensuse.org/repositories/devel:/tools:/criu/Debian_11/Release.key"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 2952,
          "end": 2987
        },
        "value": "/etc/apt/trusted.gpg.d/criu.gpg.asc"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 2988,
          "end": 2991
        }
      },
      "options": [
        {
          "flag_start": 2992,
          "name": {
            "span": {
              "start": 2994,
              "end": 2999
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3000,
              "end": 3065
            },
            "value": "type=cache,sharing=locked,id=moby-criu-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 3072,
          "name": {
            "span": {
              "start": 3074,
              "end": 3079
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3080,
              "end": 3149
            },
            "value": "type=cache,sharing=locked,id=moby-criu-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 3160,
            "end": 3456
          },
          "value": "echo 'deb https://download.opensuse.org/repositories/devel:/tools:/criu/Debian_12/ /' > /etc/apt/sources.list.d/criu.list \\\n        && apt-get update \\\n        && apt-get install -y --no-install-recommends criu \\\n        && install -D /usr/sbin/criu /build/criu \\\n        && /build/criu --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 3469,
          "end": 3473
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 3474,
          "end": 3517
        },
        "value": "distribution/distribution:$REGISTRY_VERSION"
      },
      "as_": [
        {
          "span": {
            "start": 3518,
            "end": 3520
          }
        },
        {
          "span": {
            "start": 3521,
            "end": 3529
          },
          "value": "registry"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3530,
          "end": 3533
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 3534,
            "end": 3582
          },
          "value": "mkdir /build && mv /bin/registry /build/registry"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 3597,
          "end": 3601
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 3602,
          "end": 3606
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 3607,
            "end": 3609
          }
        },
        {
          "span": {
            "start": 3610,
            "end": 3617
          },
          "value": "swagger"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 3618,
          "end": 3625
        }
      },
      "arguments": {
        "span": {
          "start": 3626,
          "end": 3666
        },
        "value": "/go/src/github.com/go-swagger/go-swagger"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3667,
          "end": 3670
        }
      },
      "arguments": {
        "span": {
          "start": 3671,
          "end": 3685
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 3863,
          "end": 3866
        }
      },
      "arguments": {
        "span": {
          "start": 3867,
          "end": 3893
        },
        "value": "GO_SWAGGER_VERSION=v0.32.3"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 3894,
          "end": 3897
        }
      },
      "options": [
        {
          "flag_start": 3898,
          "name": {
            "span": {
              "start": 3900,
              "end": 3905
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3906,
              "end": 3978
            },
            "value": "type=cache,target=/root/.cache/go-build,id=swagger-build-$TARGETPLATFORM"
          }
        },
        {
          "flag_start": 3985,
          "name": {
            "span": {
              "start": 3987,
              "end": 3992
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 3993,
              "end": 4022
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        },
        {
          "flag_start": 4029,
          "name": {
            "span": {
              "start": 4031,
              "end": 4036
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4037,
              "end": 4063
            },
            "value": "type=tmpfs,target=/go/src/"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 4069,
            "end": 4069
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 4070,
            "end": 4218
          },
          "expand": true,
          "value": "  set -e\n  GOBIN=/build CGO_ENABLED=0 xx-go install \"github.com/go-swagger/go-swagger/cmd/swagger@${GO_SWAGGER_VERSION}\"\n  xx-verify /build/swagger\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 4362,
          "end": 4366
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 4367,
          "end": 4395
        },
        "value": "debian:${BASE_DEBIAN_DISTRO}"
      },
      "as_": [
        {
          "span": {
            "start": 4396,
            "end": 4398
          }
        },
        {
          "span": {
            "start": 4399,
            "end": 4412
          },
          "value": "frozen-images"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 4413,
          "end": 4416
        }
      },
      "options": [
        {
          "flag_start": 4417,
          "name": {
            "span": {
              "start": 4419,
              "end": 4424
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4425,
              "end": 4499
            },
            "value": "type=cache,sharing=locked,id=moby-frozen-images-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 4506,
          "name": {
            "span": {
              "start": 4508,
              "end": 4513
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 4514,
              "end": 4592
            },
            "value": "type=cache,sharing=locked,id=moby-frozen-images-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 4602,
            "end": 4725
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n           ca-certificates \\\n           curl \\\n           jq"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 4815,
          "end": 4819
        }
      },
      "options": [],
      "src": [
        {
          "path": {
            "span": {
              "start": 4820,
              "end": 4855
            },
            "value": "contrib/download-frozen-image-v2.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 4856,
          "end": 4857
        },
        "value": "/"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 4858,
          "end": 4861
        }
      },
      "arguments": {
        "span": {
          "start": 4862,
          "end": 4872
        },
        "value": "TARGETARCH"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 4873,
          "end": 4876
        }
      },
      "arguments": {
        "span": {
          "start": 4877,
          "end": 4890
        },
        "value": "TARGETVARIANT"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 4891,
          "end": 4894
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 4895,
            "end": 5634
          },
          "value": "/download-frozen-image-v2.sh /build \\\n        busybox:latest@sha256:95cf004f559831017cdf4628aaf1bb30133677be8702a8c5f2994629f637a209 \\\n        busybox:glibc@sha256:1f81263701cddf6402afe9f33fca0266d9fff379e59b1748f33d3072da71ee85 \\\n        debian:trixie-slim@sha256:c85a2732e97694ea77237c61304b3bb410e0e961dd6ee945997a06c788c545bb \\\n        hello-world:latest@sha256:d58e752213a51785838f9eed2b7a498ffa1cb3aa7f946dda11af39286c3db9a9 \\\n        arm32v7/hello-world:latest@sha256:50b8560ad574c779908da71f7ce370c0a2471c098d44d1c8f6b513c5a55eeeb1 \\\n        hello-world:amd64@sha256:90659bf80b44ce6be8234e6ff90a1ac34acbeb826903b02cfa0da11c82cbc042 \\\n        hello-world:arm64@sha256:963612c5503f3f1674f315c67089dee577d8cc6afc18565e0b4183ae355fb343"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 5644,
          "end": 5648
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 5649,
          "end": 5653
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 5654,
            "end": 5656
          }
        },
        {
          "span": {
            "start": 5657,
            "end": 5666
          },
          "value": "delve-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 5667,
          "end": 5674
        }
      },
      "arguments": {
        "span": {
          "start": 5675,
          "end": 5689
        },
        "value": "/usr/src/delve"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 5690,
          "end": 5693
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 5694,
            "end": 5769
          },
          "value": "git init . && git remote add origin \"https://github.com/go-delve/delve.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 5975,
          "end": 5978
        }
      },
      "arguments": {
        "span": {
          "start": 5979,
          "end": 6000
        },
        "value": "DELVE_VERSION=v1.25.0"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6001,
          "end": 6004
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 6005,
            "end": 6108
          },
          "value": "git fetch -q --depth 1 origin \"${DELVE_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6110,
          "end": 6114
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6115,
          "end": 6119
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 6120,
            "end": 6122
          }
        },
        {
          "span": {
            "start": 6123,
            "end": 6138
          },
          "value": "delve-supported"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 6139,
          "end": 6146
        }
      },
      "arguments": {
        "span": {
          "start": 6147,
          "end": 6161
        },
        "value": "/usr/src/delve"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 6162,
          "end": 6165
        }
      },
      "arguments": {
        "span": {
          "start": 6166,
          "end": 6180
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6181,
          "end": 6184
        }
      },
      "options": [
        {
          "flag_start": 6185,
          "name": {
            "span": {
              "start": 6187,
              "end": 6192
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6193,
              "end": 6229
            },
            "value": "from=delve-src,src=/usr/src/delve,rw"
          }
        },
        {
          "flag_start": 6236,
          "name": {
            "span": {
              "start": 6238,
              "end": 6243
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6244,
              "end": 6314
            },
            "value": "type=cache,target=/root/.cache/go-build,id=delve-build-$TARGETPLATFORM"
          }
        },
        {
          "flag_start": 6321,
          "name": {
            "span": {
              "start": 6323,
              "end": 6328
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6329,
              "end": 6358
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 6364,
            "end": 6364
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 6365,
            "end": 6435
          },
          "expand": true,
          "value": "  set -e\n  xx-go build -o /build/dlv ./cmd/dlv\n  xx-verify /build/dlv\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6440,
          "end": 6444
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6445,
          "end": 6457
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 6458,
            "end": 6460
          }
        },
        {
          "span": {
            "start": 6461,
            "end": 6478
          },
          "value": "delve-unsupported"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6479,
          "end": 6483
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6484,
          "end": 6508
        },
        "value": "delve-${DELVE_SUPPORTED}"
      },
      "as_": [
        {
          "span": {
            "start": 6509,
            "end": 6511
          }
        },
        {
          "span": {
            "start": 6512,
            "end": 6517
          },
          "value": "delve"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6519,
          "end": 6523
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6524,
          "end": 6528
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 6529,
            "end": 6531
          }
        },
        {
          "span": {
            "start": 6532,
            "end": 6540
          },
          "value": "gowinres"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 6591,
          "end": 6594
        }
      },
      "arguments": {
        "span": {
          "start": 6595,
          "end": 6618
        },
        "value": "GOWINRES_VERSION=v0.3.1"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6619,
          "end": 6622
        }
      },
      "options": [
        {
          "flag_start": 6623,
          "name": {
            "span": {
              "start": 6625,
              "end": 6630
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6631,
              "end": 6670
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 6677,
          "name": {
            "span": {
              "start": 6679,
              "end": 6684
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 6685,
              "end": 6714
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 6725,
            "end": 6846
          },
          "value": "GOBIN=/build CGO_ENABLED=0 go install \"github.com/tc-hib/go-winres@${GOWINRES_VERSION}\" \\\n     && /build/go-winres --help"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 6861,
          "end": 6865
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 6866,
          "end": 6870
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 6871,
            "end": 6873
          }
        },
        {
          "span": {
            "start": 6874,
            "end": 6888
          },
          "value": "containerd-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 6889,
          "end": 6896
        }
      },
      "arguments": {
        "span": {
          "start": 6897,
          "end": 6916
        },
        "value": "/usr/src/containerd"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 6917,
          "end": 6920
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 6921,
            "end": 7003
          },
          "value": "git init . && git remote add origin \"https://github.com/containerd/containerd.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7252,
          "end": 7255
        }
      },
      "arguments": {
        "span": {
          "start": 7256,
          "end": 7282
        },
        "value": "CONTAINERD_VERSION=v1.7.28"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7283,
          "end": 7286
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 7287,
            "end": 7395
          },
          "value": "git fetch -q --depth 1 origin \"${CONTAINERD_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 7397,
          "end": 7401
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 7402,
          "end": 7406
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 7407,
            "end": 7409
          }
        },
        {
          "span": {
            "start": 7410,
            "end": 7426
          },
          "value": "containerd-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 7427,
          "end": 7434
        }
      },
      "arguments": {
        "span": {
          "start": 7435,
          "end": 7475
        },
        "value": "/go/src/github.com/containerd/containerd"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7476,
          "end": 7479
        }
      },
      "arguments": {
        "span": {
          "start": 7480,
          "end": 7494
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7495,
          "end": 7498
        }
      },
      "options": [
        {
          "flag_start": 7499,
          "name": {
            "span": {
              "start": 7501,
              "end": 7506
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7507,
              "end": 7578
            },
            "value": "type=cache,sharing=locked,id=moby-containerd-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 7585,
          "name": {
            "span": {
              "start": 7587,
              "end": 7592
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7593,
              "end": 7668
            },
            "value": "type=cache,sharing=locked,id=moby-containerd-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 7679,
            "end": 7785
          },
          "value": "apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 7786,
          "end": 7789
        }
      },
      "arguments": {
        "span": {
          "start": 7790,
          "end": 7803
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 7804,
          "end": 7807
        }
      },
      "options": [
        {
          "flag_start": 7808,
          "name": {
            "span": {
              "start": 7810,
              "end": 7815
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7816,
              "end": 7862
            },
            "value": "from=containerd-src,src=/usr/src/containerd,rw"
          }
        },
        {
          "flag_start": 7869,
          "name": {
            "span": {
              "start": 7871,
              "end": 7876
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 7877,
              "end": 7952
            },
            "value": "type=cache,target=/root/.cache/go-build,id=containerd-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 7958,
            "end": 7958
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 7959,
            "end": 8462
          },
          "expand": true,
          "value": "  set -e\n  export CC=$(xx-info)-gcc\n  export CGO_ENABLED=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"0\" || echo \"1\")\n  xx-go --wrap\n  make $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"STATIC=1\") binaries\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/containerd\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/containerd-shim-runc-v2\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/ctr\n  mkdir /build\n  mv bin/containerd bin/containerd-shim-runc-v2 bin/ctr /build\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8467,
          "end": 8471
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8472,
          "end": 8488
        },
        "value": "containerd-build"
      },
      "as_": [
        {
          "span": {
            "start": 8489,
            "end": 8491
          }
        },
        {
          "span": {
            "start": 8492,
            "end": 8508
          },
          "value": "containerd-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8509,
          "end": 8513
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8514,
          "end": 8526
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 8527,
            "end": 8529
          }
        },
        {
          "span": {
            "start": 8530,
            "end": 8548
          },
          "value": "containerd-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8549,
          "end": 8553
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8554,
          "end": 8576
        },
        "value": "containerd-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 8577,
            "end": 8579
          }
        },
        {
          "span": {
            "start": 8580,
            "end": 8590
          },
          "value": "containerd"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8592,
          "end": 8596
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8597,
          "end": 8601
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 8602,
            "end": 8604
          }
        },
        {
          "span": {
            "start": 8605,
            "end": 8618
          },
          "value": "golangci_lint"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 8619,
          "end": 8622
        }
      },
      "arguments": {
        "span": {
          "start": 8623,
          "end": 8651
        },
        "value": "GOLANGCI_LINT_VERSION=v2.1.5"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 8652,
          "end": 8655
        }
      },
      "options": [
        {
          "flag_start": 8656,
          "name": {
            "span": {
              "start": 8658,
              "end": 8663
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 8664,
              "end": 8703
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 8710,
          "name": {
            "span": {
              "start": 8712,
              "end": 8717
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 8718,
              "end": 8747
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 8758,
            "end": 8918
          },
          "value": "GOBIN=/build CGO_ENABLED=0 go install \"github.com/golangci/golangci-lint/v2/cmd/golangci-lint@${GOLANGCI_LINT_VERSION}\" \\\n     && /build/golangci-lint --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 8920,
          "end": 8924
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 8925,
          "end": 8929
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 8930,
            "end": 8932
          }
        },
        {
          "span": {
            "start": 8933,
            "end": 8942
          },
          "value": "gotestsum"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9016,
          "end": 9019
        }
      },
      "arguments": {
        "span": {
          "start": 9020,
          "end": 9045
        },
        "value": "GOTESTSUM_VERSION=v1.12.3"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9046,
          "end": 9049
        }
      },
      "options": [
        {
          "flag_start": 9050,
          "name": {
            "span": {
              "start": 9052,
              "end": 9057
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9058,
              "end": 9097
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 9104,
          "name": {
            "span": {
              "start": 9106,
              "end": 9111
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9112,
              "end": 9141
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 9152,
            "end": 9272
          },
          "value": "GOBIN=/build CGO_ENABLED=0 go install \"gotest.tools/gotestsum@${GOTESTSUM_VERSION}\" \\\n     && /build/gotestsum --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9274,
          "end": 9278
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9279,
          "end": 9283
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 9284,
            "end": 9286
          }
        },
        {
          "span": {
            "start": 9287,
            "end": 9292
          },
          "value": "shfmt"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9293,
          "end": 9296
        }
      },
      "arguments": {
        "span": {
          "start": 9297,
          "end": 9317
        },
        "value": "SHFMT_VERSION=v3.8.0"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9318,
          "end": 9321
        }
      },
      "options": [
        {
          "flag_start": 9322,
          "name": {
            "span": {
              "start": 9324,
              "end": 9329
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9330,
              "end": 9369
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 9376,
          "name": {
            "span": {
              "start": 9378,
              "end": 9383
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9384,
              "end": 9413
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 9424,
            "end": 9538
          },
          "value": "GOBIN=/build CGO_ENABLED=0 go install \"mvdan.cc/sh/v3/cmd/shfmt@${SHFMT_VERSION}\" \\\n     && /build/shfmt --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9540,
          "end": 9544
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9545,
          "end": 9549
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 9550,
            "end": 9552
          }
        },
        {
          "span": {
            "start": 9553,
            "end": 9558
          },
          "value": "gopls"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9559,
          "end": 9562
        }
      },
      "options": [
        {
          "flag_start": 9563,
          "name": {
            "span": {
              "start": 9565,
              "end": 9570
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9571,
              "end": 9610
            },
            "value": "type=cache,target=/root/.cache/go-build"
          }
        },
        {
          "flag_start": 9617,
          "name": {
            "span": {
              "start": 9619,
              "end": 9624
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9625,
              "end": 9654
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 9665,
            "end": 9767
          },
          "value": "GOBIN=/build CGO_ENABLED=0 go install \"golang.org/x/tools/gopls@latest\" \\\n     && /build/gopls version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 9769,
          "end": 9773
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 9774,
          "end": 9778
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 9779,
            "end": 9781
          }
        },
        {
          "span": {
            "start": 9782,
            "end": 9791
          },
          "value": "dockercli"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 9792,
          "end": 9799
        }
      },
      "arguments": {
        "span": {
          "start": 9800,
          "end": 9829
        },
        "value": "/go/src/github.com/docker/cli"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9830,
          "end": 9833
        }
      },
      "arguments": {
        "span": {
          "start": 9834,
          "end": 9854
        },
        "value": "DOCKERCLI_REPOSITORY"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9855,
          "end": 9858
        }
      },
      "arguments": {
        "span": {
          "start": 9859,
          "end": 9876
        },
        "value": "DOCKERCLI_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 9877,
          "end": 9880
        }
      },
      "arguments": {
        "span": {
          "start": 9881,
          "end": 9895
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 9896,
          "end": 9899
        }
      },
      "options": [
        {
          "flag_start": 9900,
          "name": {
            "span": {
              "start": 9902,
              "end": 9907
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9908,
              "end": 9970
            },
            "value": "source=hack/dockerfile/cli.sh,target=/download-or-build-cli.sh"
          }
        },
        {
          "flag_start": 9977,
          "name": {
            "span": {
              "start": 9979,
              "end": 9984
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 9985,
              "end": 10057
            },
            "value": "type=cache,id=dockercli-git-$TARGETPLATFORM,sharing=locked,target=./.git"
          }
        },
        {
          "flag_start": 10064,
          "name": {
            "span": {
              "start": 10066,
              "end": 10071
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10072,
              "end": 10146
            },
            "value": "type=cache,target=/root/.cache/go-build,id=dockercli-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 10157,
            "end": 10356
          },
          "value": "rm -f ./.git/*.lock \\\n     && /download-or-build-cli.sh ${DOCKERCLI_VERSION} ${DOCKERCLI_REPOSITORY} /build \\\n     && /build/docker --version \\\n     && /build/docker completion bash >/completion.bash"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10358,
          "end": 10362
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10363,
          "end": 10367
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 10368,
            "end": 10370
          }
        },
        {
          "span": {
            "start": 10371,
            "end": 10392
          },
          "value": "dockercli-integration"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 10393,
          "end": 10400
        }
      },
      "arguments": {
        "span": {
          "start": 10401,
          "end": 10430
        },
        "value": "/go/src/github.com/docker/cli"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10431,
          "end": 10434
        }
      },
      "arguments": {
        "span": {
          "start": 10435,
          "end": 10467
        },
        "value": "DOCKERCLI_INTEGRATION_REPOSITORY"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10468,
          "end": 10471
        }
      },
      "arguments": {
        "span": {
          "start": 10472,
          "end": 10501
        },
        "value": "DOCKERCLI_INTEGRATION_VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 10502,
          "end": 10505
        }
      },
      "arguments": {
        "span": {
          "start": 10506,
          "end": 10520
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 10521,
          "end": 10524
        }
      },
      "options": [
        {
          "flag_start": 10525,
          "name": {
            "span": {
              "start": 10527,
              "end": 10532
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10533,
              "end": 10595
            },
            "value": "source=hack/dockerfile/cli.sh,target=/download-or-build-cli.sh"
          }
        },
        {
          "flag_start": 10602,
          "name": {
            "span": {
              "start": 10604,
              "end": 10609
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10610,
              "end": 10682
            },
            "value": "type=cache,id=dockercli-git-$TARGETPLATFORM,sharing=locked,target=./.git"
          }
        },
        {
          "flag_start": 10689,
          "name": {
            "span": {
              "start": 10691,
              "end": 10696
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 10697,
              "end": 10771
            },
            "value": "type=cache,target=/root/.cache/go-build,id=dockercli-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 10782,
            "end": 10947
          },
          "value": "rm -f ./.git/*.lock \\\n     && /download-or-build-cli.sh ${DOCKERCLI_INTEGRATION_VERSION} ${DOCKERCLI_INTEGRATION_REPOSITORY} /build \\\n     && /build/docker --version"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 10956,
          "end": 10960
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 10961,
          "end": 10965
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 10966,
            "end": 10968
          }
        },
        {
          "span": {
            "start": 10969,
            "end": 10977
          },
          "value": "runc-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 10978,
          "end": 10985
        }
      },
      "arguments": {
        "span": {
          "start": 10986,
          "end": 10999
        },
        "value": "/usr/src/runc"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11000,
          "end": 11003
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 11004,
            "end": 11084
          },
          "value": "git init . && git remote add origin \"https://github.com/opencontainers/runc.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11301,
          "end": 11304
        }
      },
      "arguments": {
        "span": {
          "start": 11305,
          "end": 11324
        },
        "value": "RUNC_VERSION=v1.3.0"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11325,
          "end": 11328
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 11329,
            "end": 11431
          },
          "value": "git fetch -q --depth 1 origin \"${RUNC_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 11433,
          "end": 11437
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 11438,
          "end": 11442
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 11443,
            "end": 11445
          }
        },
        {
          "span": {
            "start": 11446,
            "end": 11456
          },
          "value": "runc-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 11457,
          "end": 11464
        }
      },
      "arguments": {
        "span": {
          "start": 11465,
          "end": 11503
        },
        "value": "/go/src/github.com/opencontainers/runc"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11504,
          "end": 11507
        }
      },
      "arguments": {
        "span": {
          "start": 11508,
          "end": 11522
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11523,
          "end": 11526
        }
      },
      "options": [
        {
          "flag_start": 11527,
          "name": {
            "span": {
              "start": 11529,
              "end": 11534
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11535,
              "end": 11600
            },
            "value": "type=cache,sharing=locked,id=moby-runc-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 11607,
          "name": {
            "span": {
              "start": 11609,
              "end": 11614
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11615,
              "end": 11684
            },
            "value": "type=cache,sharing=locked,id=moby-runc-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 11695,
            "end": 11854
          },
          "value": "apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            libseccomp-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 11855,
          "end": 11858
        }
      },
      "arguments": {
        "span": {
          "start": 11859,
          "end": 11872
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 11873,
          "end": 11876
        }
      },
      "options": [
        {
          "flag_start": 11877,
          "name": {
            "span": {
              "start": 11879,
              "end": 11884
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11885,
              "end": 11919
            },
            "value": "from=runc-src,src=/usr/src/runc,rw"
          }
        },
        {
          "flag_start": 11926,
          "name": {
            "span": {
              "start": 11928,
              "end": 11933
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 11934,
              "end": 12003
            },
            "value": "type=cache,target=/root/.cache/go-build,id=runc-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 12009,
            "end": 12009
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 12010,
            "end": 12218
          },
          "expand": true,
          "value": "  set -e\n  xx-go --wrap\n  CGO_ENABLED=1 make \"$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"static\" || echo \"runc\")\"\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") runc\n  mkdir /build\n  mv runc /build/\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12223,
          "end": 12227
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12228,
          "end": 12238
        },
        "value": "runc-build"
      },
      "as_": [
        {
          "span": {
            "start": 12239,
            "end": 12241
          }
        },
        {
          "span": {
            "start": 12242,
            "end": 12252
          },
          "value": "runc-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12253,
          "end": 12257
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12258,
          "end": 12270
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 12271,
            "end": 12273
          }
        },
        {
          "span": {
            "start": 12274,
            "end": 12286
          },
          "value": "runc-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12287,
          "end": 12291
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12292,
          "end": 12308
        },
        "value": "runc-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 12309,
            "end": 12311
          }
        },
        {
          "span": {
            "start": 12312,
            "end": 12316
          },
          "value": "runc"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12325,
          "end": 12329
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12330,
          "end": 12334
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 12335,
            "end": 12337
          }
        },
        {
          "span": {
            "start": 12338,
            "end": 12346
          },
          "value": "tini-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 12347,
          "end": 12354
        }
      },
      "arguments": {
        "span": {
          "start": 12355,
          "end": 12368
        },
        "value": "/usr/src/tini"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12369,
          "end": 12372
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 12373,
            "end": 12446
          },
          "value": "git init . && git remote add origin \"https://github.com/krallin/tini.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 12589,
          "end": 12592
        }
      },
      "arguments": {
        "span": {
          "start": 12593,
          "end": 12613
        },
        "value": "TINI_VERSION=v0.19.0"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12614,
          "end": 12617
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 12618,
            "end": 12720
          },
          "value": "git fetch -q --depth 1 origin \"${TINI_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 12722,
          "end": 12726
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 12727,
          "end": 12731
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 12732,
            "end": 12734
          }
        },
        {
          "span": {
            "start": 12735,
            "end": 12745
          },
          "value": "tini-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 12746,
          "end": 12753
        }
      },
      "arguments": {
        "span": {
          "start": 12754,
          "end": 12785
        },
        "value": "/go/src/github.com/krallin/tini"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 12786,
          "end": 12789
        }
      },
      "options": [
        {
          "flag_start": 12790,
          "name": {
            "span": {
              "start": 12792,
              "end": 12797
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12798,
              "end": 12863
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 12870,
          "name": {
            "span": {
              "start": 12872,
              "end": 12877
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 12878,
              "end": 12947
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 12958,
            "end": 13024
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends cmake"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 13025,
          "end": 13028
        }
      },
      "arguments": {
        "span": {
          "start": 13029,
          "end": 13043
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13044,
          "end": 13047
        }
      },
      "options": [
        {
          "flag_start": 13048,
          "name": {
            "span": {
              "start": 13050,
              "end": 13055
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13056,
              "end": 13121
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 13128,
          "name": {
            "span": {
              "start": 13130,
              "end": 13135
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13136,
              "end": 13205
            },
            "value": "type=cache,sharing=locked,id=moby-tini-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 13216,
            "end": 13328
          },
          "value": "xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13329,
          "end": 13332
        }
      },
      "options": [
        {
          "flag_start": 13333,
          "name": {
            "span": {
              "start": 13335,
              "end": 13340
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13341,
              "end": 13375
            },
            "value": "from=tini-src,src=/usr/src/tini,rw"
          }
        },
        {
          "flag_start": 13382,
          "name": {
            "span": {
              "start": 13384,
              "end": 13389
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 13390,
              "end": 13459
            },
            "value": "type=cache,target=/root/.cache/go-build,id=tini-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 13465,
            "end": 13465
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 13466,
            "end": 13606
          },
          "expand": true,
          "value": "  set -e\n  CC=$(xx-info)-gcc cmake .\n  make tini-static\n  xx-verify --static tini-static\n  mkdir /build\n  mv tini-static /build/docker-init\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13611,
          "end": 13615
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13616,
          "end": 13626
        },
        "value": "tini-build"
      },
      "as_": [
        {
          "span": {
            "start": 13627,
            "end": 13629
          }
        },
        {
          "span": {
            "start": 13630,
            "end": 13640
          },
          "value": "tini-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13641,
          "end": 13645
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13646,
          "end": 13658
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 13659,
            "end": 13661
          }
        },
        {
          "span": {
            "start": 13662,
            "end": 13674
          },
          "value": "tini-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13675,
          "end": 13679
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13680,
          "end": 13696
        },
        "value": "tini-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 13697,
            "end": 13699
          }
        },
        {
          "span": {
            "start": 13700,
            "end": 13704
          },
          "value": "tini"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 13720,
          "end": 13724
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 13725,
          "end": 13729
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 13730,
            "end": 13732
          }
        },
        {
          "span": {
            "start": 13733,
            "end": 13748
          },
          "value": "rootlesskit-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 13749,
          "end": 13756
        }
      },
      "arguments": {
        "span": {
          "start": 13757,
          "end": 13777
        },
        "value": "/usr/src/rootlesskit"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 13778,
          "end": 13781
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 13782,
            "end": 13874
          },
          "value": "git init . && git remote add origin \"https://github.com/rootless-containers/rootlesskit.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 13974,
          "end": 13977
        }
      },
      "arguments": {
        "span": {
          "start": 13978,
          "end": 14004
        },
        "value": "ROOTLESSKIT_VERSION=v2.3.5"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14005,
          "end": 14008
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 14009,
            "end": 14118
          },
          "value": "git fetch -q --depth 1 origin \"${ROOTLESSKIT_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 14120,
          "end": 14124
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 14125,
          "end": 14129
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 14130,
            "end": 14132
          }
        },
        {
          "span": {
            "start": 14133,
            "end": 14150
          },
          "value": "rootlesskit-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 14151,
          "end": 14158
        }
      },
      "arguments": {
        "span": {
          "start": 14159,
          "end": 14209
        },
        "value": "/go/src/github.com/rootless-containers/rootlesskit"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 14210,
          "end": 14213
        }
      },
      "arguments": {
        "span": {
          "start": 14214,
          "end": 14228
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14229,
          "end": 14232
        }
      },
      "options": [
        {
          "flag_start": 14233,
          "name": {
            "span": {
              "start": 14235,
              "end": 14240
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14241,
              "end": 14313
            },
            "value": "type=cache,sharing=locked,id=moby-rootlesskit-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 14320,
          "name": {
            "span": {
              "start": 14322,
              "end": 14327
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14328,
              "end": 14404
            },
            "value": "type=cache,sharing=locked,id=moby-rootlesskit-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 14415,
            "end": 14545
          },
          "value": "apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 14546,
          "end": 14549
        }
      },
      "arguments": {
        "span": {
          "start": 14550,
          "end": 14563
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 14564,
          "end": 14567
        }
      },
      "options": [
        {
          "flag_start": 14568,
          "name": {
            "span": {
              "start": 14570,
              "end": 14575
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14576,
              "end": 14624
            },
            "value": "from=rootlesskit-src,src=/usr/src/rootlesskit,rw"
          }
        },
        {
          "flag_start": 14631,
          "name": {
            "span": {
              "start": 14633,
              "end": 14638
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14639,
              "end": 14668
            },
            "value": "type=cache,target=/go/pkg/mod"
          }
        },
        {
          "flag_start": 14675,
          "name": {
            "span": {
              "start": 14677,
              "end": 14682
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 14683,
              "end": 14759
            },
            "value": "type=cache,target=/root/.cache/go-build,id=rootlesskit-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 14765,
            "end": 14765
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 14766,
            "end": 15055
          },
          "expand": true,
          "value": "  set -e\n  export CGO_ENABLED=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"0\" || echo \"1\")\n  xx-go build -o /build/rootlesskit -ldflags=\"$([ \"$DOCKER_STATIC\" != \"1\" ] && echo \"-linkmode=external\")\" ./cmd/rootlesskit\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /build/rootlesskit\n"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 15059,
          "end": 15063
        }
      },
      "options": [
        {
          "flag_start": 15064,
          "name": {
            "span": {
              "start": 15066,
              "end": 15070
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 15071,
              "end": 15100
            },
            "value": "./contrib/dockerd-rootless.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 15101,
          "end": 15108
        },
        "value": "/build/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 15109,
          "end": 15113
        }
      },
      "options": [
        {
          "flag_start": 15114,
          "name": {
            "span": {
              "start": 15116,
              "end": 15120
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 15121,
              "end": 15160
            },
            "value": "./contrib/dockerd-rootless-setuptool.sh"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 15161,
          "end": 15168
        },
        "value": "/build/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 15170,
          "end": 15174
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 15175,
          "end": 15192
        },
        "value": "rootlesskit-build"
      },
      "as_": [
        {
          "span": {
            "start": 15193,
            "end": 15195
          }
        },
        {
          "span": {
            "start": 15196,
            "end": 15213
          },
          "value": "rootlesskit-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 15214,
          "end": 15218
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 15219,
          "end": 15231
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 15232,
            "end": 15234
          }
        },
        {
          "span": {
            "start": 15235,
            "end": 15254
          },
          "value": "rootlesskit-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 15255,
          "end": 15259
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 15260,
          "end": 15283
        },
        "value": "rootlesskit-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 15284,
            "end": 15286
          }
        },
        {
          "span": {
            "start": 15287,
            "end": 15298
          },
          "value": "rootlesskit"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 15300,
          "end": 15304
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 15305,
          "end": 15309
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 15310,
            "end": 15312
          }
        },
        {
          "span": {
            "start": 15313,
            "end": 15317
          },
          "value": "crun"
        }
      ]
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 15389,
          "end": 15392
        }
      },
      "arguments": {
        "span": {
          "start": 15393,
          "end": 15410
        },
        "value": "CRUN_VERSION=1.21"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15411,
          "end": 15414
        }
      },
      "options": [
        {
          "flag_start": 15415,
          "name": {
            "span": {
              "start": 15417,
              "end": 15422
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 15423,
              "end": 15488
            },
            "value": "type=cache,sharing=locked,id=moby-crun-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 15495,
          "name": {
            "span": {
              "start": 15497,
              "end": 15502
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 15503,
              "end": 15572
            },
            "value": "type=cache,sharing=locked,id=moby-crun-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 15583,
            "end": 15920
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            autoconf \\\n            automake \\\n            build-essential \\\n            libcap-dev \\\n            libprotobuf-c-dev \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            libtool \\\n            libyajl-dev \\\n            python3 \\\n            ;"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 15921,
          "end": 15924
        }
      },
      "options": [
        {
          "flag_start": 15925,
          "name": {
            "span": {
              "start": 15927,
              "end": 15932
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 15933,
              "end": 15966
            },
            "value": "type=tmpfs,target=/tmp/crun-build"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 15973,
            "end": 16192
          },
          "value": "git clone https://github.com/containers/crun.git /tmp/crun-build && \\\n    cd /tmp/crun-build && \\\n    git checkout -q \"${CRUN_VERSION}\" && \\\n    ./autogen.sh && \\\n    ./configure --bindir=/build && \\\n    make -j install"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16278,
          "end": 16282
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16283,
          "end": 16290
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 16291,
            "end": 16293
          }
        },
        {
          "span": {
            "start": 16294,
            "end": 16308
          },
          "value": "vpnkit-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16309,
          "end": 16313
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16314,
          "end": 16321
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 16322,
            "end": 16324
          }
        },
        {
          "span": {
            "start": 16325,
            "end": 16341
          },
          "value": "vpnkit-linux-386"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16342,
          "end": 16346
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16347,
          "end": 16354
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 16355,
            "end": 16357
          }
        },
        {
          "span": {
            "start": 16358,
            "end": 16374
          },
          "value": "vpnkit-linux-arm"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16375,
          "end": 16379
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16380,
          "end": 16387
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 16388,
            "end": 16390
          }
        },
        {
          "span": {
            "start": 16391,
            "end": 16411
          },
          "value": "vpnkit-linux-ppc64le"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16412,
          "end": 16416
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16417,
          "end": 16424
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 16425,
            "end": 16427
          }
        },
        {
          "span": {
            "start": 16428,
            "end": 16448
          },
          "value": "vpnkit-linux-riscv64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16449,
          "end": 16453
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16454,
          "end": 16461
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 16462,
            "end": 16464
          }
        },
        {
          "span": {
            "start": 16465,
            "end": 16483
          },
          "value": "vpnkit-linux-s390x"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16484,
          "end": 16488
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16489,
          "end": 16522
        },
        "value": "moby/vpnkit-bin:${VPNKIT_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 16523,
            "end": 16525
          }
        },
        {
          "span": {
            "start": 16526,
            "end": 16544
          },
          "value": "vpnkit-linux-amd64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16545,
          "end": 16549
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16550,
          "end": 16583
        },
        "value": "moby/vpnkit-bin:${VPNKIT_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 16584,
            "end": 16586
          }
        },
        {
          "span": {
            "start": 16587,
            "end": 16605
          },
          "value": "vpnkit-linux-arm64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16606,
          "end": 16610
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16611,
          "end": 16637
        },
        "value": "vpnkit-linux-${TARGETARCH}"
      },
      "as_": [
        {
          "span": {
            "start": 16638,
            "end": 16640
          }
        },
        {
          "span": {
            "start": 16641,
            "end": 16653
          },
          "value": "vpnkit-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16654,
          "end": 16658
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16659,
          "end": 16677
        },
        "value": "vpnkit-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 16678,
            "end": 16680
          }
        },
        {
          "span": {
            "start": 16681,
            "end": 16687
          },
          "value": "vpnkit"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 16708,
          "end": 16712
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 16713,
          "end": 16717
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 16718,
            "end": 16720
          }
        },
        {
          "span": {
            "start": 16721,
            "end": 16738
          },
          "value": "containerutil-src"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 16739,
          "end": 16746
        }
      },
      "arguments": {
        "span": {
          "start": 16747,
          "end": 16769
        },
        "value": "/usr/src/containerutil"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 16770,
          "end": 16773
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 16774,
            "end": 16875
          },
          "value": "git init . && git remote add origin \"https://github.com/docker-archive/windows-container-utility.git\""
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 16876,
          "end": 16879
        }
      },
      "arguments": {
        "span": {
          "start": 16880,
          "end": 16945
        },
        "value": "CONTAINERUTILITY_VERSION=aa1ba87e99b68e0113bd27ec26c60b88f9d4ccd9"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 16946,
          "end": 16949
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 16950,
            "end": 17064
          },
          "value": "git fetch -q --depth 1 origin \"${CONTAINERUTILITY_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17066,
          "end": 17070
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17071,
          "end": 17075
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 17076,
            "end": 17078
          }
        },
        {
          "span": {
            "start": 17079,
            "end": 17098
          },
          "value": "containerutil-build"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 17099,
          "end": 17106
        }
      },
      "arguments": {
        "span": {
          "start": 17107,
          "end": 17129
        },
        "value": "/usr/src/containerutil"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 17130,
          "end": 17133
        }
      },
      "arguments": {
        "span": {
          "start": 17134,
          "end": 17148
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17149,
          "end": 17152
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 17153,
            "end": 17267
          },
          "value": "xx-apt-get install -y --no-install-recommends \\\n        gcc \\\n        g++ \\\n        libc6-dev \\\n        pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 17268,
          "end": 17271
        }
      },
      "options": [
        {
          "flag_start": 17272,
          "name": {
            "span": {
              "start": 17274,
              "end": 17279
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 17280,
              "end": 17332
            },
            "value": "from=containerutil-src,src=/usr/src/containerutil,rw"
          }
        },
        {
          "flag_start": 17339,
          "name": {
            "span": {
              "start": 17341,
              "end": 17346
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 17347,
              "end": 17425
            },
            "value": "type=cache,target=/root/.cache/go-build,id=containerutil-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 17431,
            "end": 17431
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 17432,
            "end": 17580
          },
          "expand": true,
          "value": "  set -e\n  CC=\"$(xx-info)-gcc\" CXX=\"$(xx-info)-g++\" make\n  xx-verify --static containerutility.exe\n  mkdir /build\n  mv containerutility.exe /build/\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17585,
          "end": 17589
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17590,
          "end": 17602
        },
        "value": "binary-dummy"
      },
      "as_": [
        {
          "span": {
            "start": 17603,
            "end": 17605
          }
        },
        {
          "span": {
            "start": 17606,
            "end": 17625
          },
          "value": "containerutil-linux"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17626,
          "end": 17630
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17631,
          "end": 17650
        },
        "value": "containerutil-build"
      },
      "as_": [
        {
          "span": {
            "start": 17651,
            "end": 17653
          }
        },
        {
          "span": {
            "start": 17654,
            "end": 17681
          },
          "value": "containerutil-windows-amd64"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17682,
          "end": 17686
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17687,
          "end": 17722
        },
        "value": "containerutil-windows-${TARGETARCH}"
      },
      "as_": [
        {
          "span": {
            "start": 17723,
            "end": 17725
          }
        },
        {
          "span": {
            "start": 17726,
            "end": 17747
          },
          "value": "containerutil-windows"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17748,
          "end": 17752
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17753,
          "end": 17778
        },
        "value": "containerutil-${TARGETOS}"
      },
      "as_": [
        {
          "span": {
            "start": 17779,
            "end": 17781
          }
        },
        {
          "span": {
            "start": 17782,
            "end": 17795
          },
          "value": "containerutil"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17796,
          "end": 17800
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17801,
          "end": 17836
        },
        "value": "docker/buildx-bin:${BUILDX_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 17837,
            "end": 17839
          }
        },
        {
          "span": {
            "start": 17840,
            "end": 17846
          },
          "value": "buildx"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17847,
          "end": 17851
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17852,
          "end": 17889
        },
        "value": "docker/compose-bin:${COMPOSE_VERSION}"
      },
      "as_": [
        {
          "span": {
            "start": 17890,
            "end": 17892
          }
        },
        {
          "span": {
            "start": 17893,
            "end": 17900
          },
          "value": "compose"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 17902,
          "end": 17906
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 17907,
          "end": 17911
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 17912,
            "end": 17914
          }
        },
        {
          "span": {
            "start": 17915,
            "end": 17932
          },
          "value": "dev-systemd-false"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17933,
          "end": 17937
        }
      },
      "options": [
        {
          "flag_start": 17938,
          "name": {
            "span": {
              "start": 17940,
              "end": 17944
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 17945,
          "name": {
            "span": {
              "start": 17947,
              "end": 17951
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 17952,
              "end": 17965
            },
            "value": "frozen-images"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 17966,
              "end": 17973
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 17974,
          "end": 17995
        },
        "value": "/docker-frozen-images"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 17996,
          "end": 18000
        }
      },
      "options": [
        {
          "flag_start": 18001,
          "name": {
            "span": {
              "start": 18003,
              "end": 18007
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18008,
          "name": {
            "span": {
              "start": 18010,
              "end": 18014
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18015,
              "end": 18022
            },
            "value": "swagger"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18029,
              "end": 18036
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18037,
          "end": 18052
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18053,
          "end": 18057
        }
      },
      "options": [
        {
          "flag_start": 18058,
          "name": {
            "span": {
              "start": 18060,
              "end": 18064
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18065,
          "name": {
            "span": {
              "start": 18067,
              "end": 18071
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18072,
              "end": 18077
            },
            "value": "delve"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18086,
              "end": 18093
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18094,
          "end": 18109
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18110,
          "end": 18114
        }
      },
      "options": [
        {
          "flag_start": 18115,
          "name": {
            "span": {
              "start": 18117,
              "end": 18121
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18122,
          "name": {
            "span": {
              "start": 18124,
              "end": 18128
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18129,
              "end": 18137
            },
            "value": "gowinres"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18143,
              "end": 18150
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18151,
          "end": 18166
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18167,
          "end": 18171
        }
      },
      "options": [
        {
          "flag_start": 18172,
          "name": {
            "span": {
              "start": 18174,
              "end": 18178
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18179,
          "name": {
            "span": {
              "start": 18181,
              "end": 18185
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18186,
              "end": 18190
            },
            "value": "tini"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18200,
              "end": 18207
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18208,
          "end": 18223
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18224,
          "end": 18228
        }
      },
      "options": [
        {
          "flag_start": 18229,
          "name": {
            "span": {
              "start": 18231,
              "end": 18235
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18236,
          "name": {
            "span": {
              "start": 18238,
              "end": 18242
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18243,
              "end": 18251
            },
            "value": "registry"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18257,
              "end": 18264
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18265,
          "end": 18280
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18620,
          "end": 18624
        }
      },
      "options": [
        {
          "flag_start": 18625,
          "name": {
            "span": {
              "start": 18627,
              "end": 18631
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18632,
          "name": {
            "span": {
              "start": 18634,
              "end": 18638
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18639,
              "end": 18648
            },
            "value": "gotestsum"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18653,
              "end": 18660
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18661,
          "end": 18676
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18677,
          "end": 18681
        }
      },
      "options": [
        {
          "flag_start": 18682,
          "name": {
            "span": {
              "start": 18684,
              "end": 18688
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18689,
          "name": {
            "span": {
              "start": 18691,
              "end": 18695
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18696,
              "end": 18709
            },
            "value": "golangci_lint"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18710,
              "end": 18717
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18718,
          "end": 18733
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18734,
          "end": 18738
        }
      },
      "options": [
        {
          "flag_start": 18739,
          "name": {
            "span": {
              "start": 18741,
              "end": 18745
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18746,
          "name": {
            "span": {
              "start": 18748,
              "end": 18752
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18753,
              "end": 18758
            },
            "value": "shfmt"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18767,
              "end": 18774
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18775,
          "end": 18790
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18791,
          "end": 18795
        }
      },
      "options": [
        {
          "flag_start": 18796,
          "name": {
            "span": {
              "start": 18798,
              "end": 18802
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18803,
          "name": {
            "span": {
              "start": 18805,
              "end": 18809
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18810,
              "end": 18814
            },
            "value": "runc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18824,
              "end": 18831
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18832,
          "end": 18847
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18848,
          "end": 18852
        }
      },
      "options": [
        {
          "flag_start": 18853,
          "name": {
            "span": {
              "start": 18855,
              "end": 18859
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18860,
          "name": {
            "span": {
              "start": 18862,
              "end": 18866
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18867,
              "end": 18877
            },
            "value": "containerd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18881,
              "end": 18888
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18889,
          "end": 18904
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18905,
          "end": 18909
        }
      },
      "options": [
        {
          "flag_start": 18910,
          "name": {
            "span": {
              "start": 18912,
              "end": 18916
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18917,
          "name": {
            "span": {
              "start": 18919,
              "end": 18923
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18924,
              "end": 18935
            },
            "value": "rootlesskit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18938,
              "end": 18945
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 18946,
          "end": 18961
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 18962,
          "end": 18966
        }
      },
      "options": [
        {
          "flag_start": 18967,
          "name": {
            "span": {
              "start": 18969,
              "end": 18973
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 18974,
          "name": {
            "span": {
              "start": 18976,
              "end": 18980
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 18981,
              "end": 18987
            },
            "value": "vpnkit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 18995,
              "end": 18996
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19003,
          "end": 19018
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19019,
          "end": 19023
        }
      },
      "options": [
        {
          "flag_start": 19024,
          "name": {
            "span": {
              "start": 19026,
              "end": 19030
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19031,
          "name": {
            "span": {
              "start": 19033,
              "end": 19037
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19038,
              "end": 19051
            },
            "value": "containerutil"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19052,
              "end": 19059
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19060,
          "end": 19075
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19076,
          "end": 19080
        }
      },
      "options": [
        {
          "flag_start": 19081,
          "name": {
            "span": {
              "start": 19083,
              "end": 19087
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19088,
          "name": {
            "span": {
              "start": 19090,
              "end": 19094
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19095,
              "end": 19099
            },
            "value": "crun"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19109,
              "end": 19116
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19117,
          "end": 19132
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19133,
          "end": 19137
        }
      },
      "options": [
        {
          "flag_start": 19138,
          "name": {
            "span": {
              "start": 19140,
              "end": 19144
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19145,
              "end": 19172
            },
            "value": "hack/dockerfile/etc/docker/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19174,
          "end": 19186
        },
        "value": "/etc/docker/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19187,
          "end": 19191
        }
      },
      "options": [
        {
          "flag_start": 19192,
          "name": {
            "span": {
              "start": 19194,
              "end": 19198
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19199,
          "name": {
            "span": {
              "start": 19201,
              "end": 19205
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19206,
              "end": 19212
            },
            "value": "buildx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19220,
              "end": 19227
            },
            "value": "/buildx"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19228,
          "end": 19279
        },
        "value": "/usr/local/libexec/docker/cli-plugins/docker-buildx"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 19280,
          "end": 19284
        }
      },
      "options": [
        {
          "flag_start": 19285,
          "name": {
            "span": {
              "start": 19287,
              "end": 19291
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 19292,
          "name": {
            "span": {
              "start": 19294,
              "end": 19298
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 19299,
              "end": 19306
            },
            "value": "compose"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 19313,
              "end": 19328
            },
            "value": "/docker-compose"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 19329,
          "end": 19375
        },
        "value": "/usr/libexec/docker/cli-plugins/docker-compose"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 19377,
          "end": 19380
        }
      },
      "arguments": {
        "span": {
          "start": 19381,
          "end": 19406
        },
        "value": "PATH=/usr/local/cli:$PATH"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 19407,
          "end": 19410
        }
      },
      "arguments": {
        "span": {
          "start": 19411,
          "end": 19463
        },
        "value": "TEST_CLIENT_BINARY=/usr/local/cli-integration/docker"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 19464,
          "end": 19467
        }
      },
      "arguments": {
        "span": {
          "start": 19468,
          "end": 19525
        },
        "value": "CONTAINERD_ADDRESS=/run/docker/containerd/containerd.sock"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 19526,
          "end": 19529
        }
      },
      "arguments": {
        "span": {
          "start": 19530,
          "end": 19555
        },
        "value": "CONTAINERD_NAMESPACE=moby"
      }
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 19556,
          "end": 19563
        }
      },
      "arguments": {
        "span": {
          "start": 19564,
          "end": 19596
        },
        "value": "/go/src/github.com/docker/docker"
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 19597,
          "end": 19603
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 19604,
              "end": 19619
            },
            "value": "/var/lib/docker"
          }
        ]
      }
    },
    {
      "kind": "VOLUME",
      "volume": {
        "span": {
          "start": 19620,
          "end": 19626
        }
      },
      "arguments": {
        "string": [
          {
            "span": {
              "start": 19627,
              "end": 19669
            },
            "value": "/home/unprivilegeduser/.local/share/docker"
          }
        ]
      }
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 19750,
          "end": 19760
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 19761,
            "end": 19774
          },
          "value": [
            {
              "span": {
                "start": 19763,
                "end": 19772
              },
              "value": "hack/dind"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 19776,
          "end": 19780
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 19781,
          "end": 19798
        },
        "value": "dev-systemd-false"
      },
      "as_": [
        {
          "span": {
            "start": 19799,
            "end": 19801
          }
        },
        {
          "span": {
            "start": 19802,
            "end": 19818
          },
          "value": "dev-systemd-true"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 19819,
          "end": 19822
        }
      },
      "options": [
        {
          "flag_start": 19823,
          "name": {
            "span": {
              "start": 19825,
              "end": 19830
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 19831,
              "end": 19895
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 19902,
          "name": {
            "span": {
              "start": 19904,
              "end": 19909
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 19910,
              "end": 19978
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 19989,
            "end": 20149
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            dbus \\\n            dbus-user-session \\\n            systemd \\\n            systemd-sysv"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ENTRYPOINT",
      "entrypoint": {
        "span": {
          "start": 20150,
          "end": 20160
        }
      },
      "arguments": {
        "exec": {
          "span": {
            "start": 20161,
            "end": 20182
          },
          "value": [
            {
              "span": {
                "start": 20163,
                "end": 20180
              },
              "value": "hack/dind-systemd"
            }
          ]
        }
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 20184,
          "end": 20188
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 20189,
          "end": 20211
        },
        "value": "dev-systemd-${SYSTEMD}"
      },
      "as_": [
        {
          "span": {
            "start": 20212,
            "end": 20214
          }
        },
        {
          "span": {
            "start": 20215,
            "end": 20234
          },
          "value": "dev-firewalld-false"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 20236,
          "end": 20240
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 20241,
          "end": 20257
        },
        "value": "dev-systemd-true"
      },
      "as_": [
        {
          "span": {
            "start": 20258,
            "end": 20260
          }
        },
        {
          "span": {
            "start": 20261,
            "end": 20279
          },
          "value": "dev-firewalld-true"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 20280,
          "end": 20283
        }
      },
      "options": [
        {
          "flag_start": 20284,
          "name": {
            "span": {
              "start": 20286,
              "end": 20291
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 20292,
              "end": 20356
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 20363,
          "name": {
            "span": {
              "start": 20365,
              "end": 20370
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 20371,
              "end": 20439
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 20450,
            "end": 20534
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            firewalld"
        }
      },
      "here_docs": []
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 20536,
          "end": 20540
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 20541,
          "end": 20567
        },
        "value": "dev-firewalld-${FIREWALLD}"
      },
      "as_": [
        {
          "span": {
            "start": 20568,
            "end": 20570
          }
        },
        {
          "span": {
            "start": 20571,
            "end": 20579
          },
          "value": "dev-base"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 20580,
          "end": 20583
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 20584,
            "end": 20602
          },
          "value": "groupadd -r docker"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 20603,
          "end": 20606
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 20607,
            "end": 20771
          },
          "value": "useradd --create-home --gid docker unprivilegeduser \\\n && mkdir -p /home/unprivilegeduser/.local/share/docker \\\n && chown -R unprivilegeduser /home/unprivilegeduser"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 20800,
          "end": 20803
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 20804,
            "end": 20862
          },
          "value": "ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 20890,
          "end": 20893
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 20894,
            "end": 20970
          },
          "value": "echo \"source /usr/share/bash-completion/bash_completion\" >> /etc/bash.bashrc"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 20971,
          "end": 20974
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 20975,
            "end": 20983
          },
          "value": "ldconfig"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21166,
          "end": 21169
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 21170,
            "end": 21247
          },
          "value": "git config --global --add safe.directory $GOPATH/src/github.com/docker/docker"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 21447,
          "end": 21450
        }
      },
      "options": [
        {
          "flag_start": 21451,
          "name": {
            "span": {
              "start": 21453,
              "end": 21458
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 21459,
              "end": 21523
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 21530,
          "name": {
            "span": {
              "start": 21532,
              "end": 21537
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 21538,
              "end": 21606
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 21617,
            "end": 22372
          },
          "value": "apt-get update && apt-get install -y --no-install-recommends \\\n            apparmor \\\n            bash-completion \\\n            bzip2 \\\n            fuse-overlayfs \\\n            inetutils-ping \\\n            iproute2 \\\n            iptables \\\n            nftables \\\n            jq \\\n            libcap2-bin \\\n            libnet1 \\\n            libnl-3-200 \\\n            libprotobuf-c1 \\\n            libyajl2 \\\n            nano \\\n            net-tools \\\n            netcat-openbsd \\\n            patch \\\n            pigz \\\n            sudo \\\n            systemd-journal-remote \\\n            thin-provisioning-tools \\\n            uidmap \\\n            vim \\\n            vim-common \\\n            xfsprogs \\\n            xz-utils \\\n            zip \\\n            zstd"
        }
      },
      "here_docs": []
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 22373,
          "end": 22376
        }
      },
      "options": [
        {
          "flag_start": 22377,
          "name": {
            "span": {
              "start": 22379,
              "end": 22384
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 22385,
              "end": 22449
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 22456,
          "name": {
            "span": {
              "start": 22458,
              "end": 22463
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 22464,
              "end": 22532
            },
            "value": "type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 22543,
            "end": 22727
          },
          "value": "apt-get update && apt-get install --no-install-recommends -y \\\n            gcc \\\n            pkg-config \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            yamllint"
        }
      },
      "here_docs": []
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 22728,
          "end": 22732
        }
      },
      "options": [
        {
          "flag_start": 22733,
          "name": {
            "span": {
              "start": 22735,
              "end": 22739
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 22740,
          "name": {
            "span": {
              "start": 22742,
              "end": 22746
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 22747,
              "end": 22756
            },
            "value": "dockercli"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 22769,
              "end": 22776
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 22777,
          "end": 22791
        },
        "value": "/usr/local/cli"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 22792,
          "end": 22796
        }
      },
      "options": [
        {
          "flag_start": 22797,
          "name": {
            "span": {
              "start": 22799,
              "end": 22803
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 22804,
          "name": {
            "span": {
              "start": 22806,
              "end": 22810
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 22811,
              "end": 22820
            },
            "value": "dockercli"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 22833,
              "end": 22849
            },
            "value": "/completion.bash"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 22850,
          "end": 22879
        },
        "value": "/etc/bash_completion.d/docker"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 22880,
          "end": 22884
        }
      },
      "options": [
        {
          "flag_start": 22885,
          "name": {
            "span": {
              "start": 22887,
              "end": 22891
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 22892,
          "name": {
            "span": {
              "start": 22894,
              "end": 22898
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 22899,
              "end": 22920
            },
            "value": "dockercli-integration"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 22921,
              "end": 22928
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 22929,
          "end": 22955
        },
        "value": "/usr/local/cli-integration"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 22957,
          "end": 22961
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 22962,
          "end": 22966
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 22967,
            "end": 22969
          }
        },
        {
          "span": {
            "start": 22970,
            "end": 22975
          },
          "value": "build"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 22976,
          "end": 22980
        }
      },
      "options": [
        {
          "flag_start": 22981,
          "name": {
            "span": {
              "start": 22983,
              "end": 22987
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 22988,
              "end": 22996
            },
            "value": "gowinres"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 22997,
              "end": 23004
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 23005,
          "end": 23020
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 23021,
          "end": 23028
        }
      },
      "arguments": {
        "span": {
          "start": 23029,
          "end": 23061
        },
        "value": "/go/src/github.com/docker/docker"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 23062,
          "end": 23065
        }
      },
      "arguments": {
        "span": {
          "start": 23066,
          "end": 23079
        },
        "value": "CGO_ENABLED=1"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 23080,
          "end": 23083
        }
      },
      "options": [
        {
          "flag_start": 23084,
          "name": {
            "span": {
              "start": 23086,
              "end": 23091
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23092,
              "end": 23158
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 23165,
          "name": {
            "span": {
              "start": 23167,
              "end": 23172
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23173,
              "end": 23243
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 23254,
            "end": 23394
          },
          "value": "apt-get update && apt-get install --no-install-recommends -y \\\n            clang \\\n            lld \\\n            llvm \\\n            icoutils"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23395,
          "end": 23398
        }
      },
      "arguments": {
        "span": {
          "start": 23399,
          "end": 23413
        },
        "value": "TARGETPLATFORM"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 23414,
          "end": 23417
        }
      },
      "options": [
        {
          "flag_start": 23418,
          "name": {
            "span": {
              "start": 23420,
              "end": 23425
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23426,
              "end": 23492
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptlib,target=/var/lib/apt"
          }
        },
        {
          "flag_start": 23499,
          "name": {
            "span": {
              "start": 23501,
              "end": 23506
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 23507,
              "end": 23577
            },
            "value": "type=cache,sharing=locked,id=moby-build-aptcache,target=/var/cache/apt"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 23588,
            "end": 23758
          },
          "value": "xx-apt-get install --no-install-recommends -y \\\n            gcc \\\n            libc6-dev \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            pkg-config"
        }
      },
      "here_docs": []
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23759,
          "end": 23762
        }
      },
      "arguments": {
        "span": {
          "start": 23763,
          "end": 23779
        },
        "value": "DOCKER_BUILDTAGS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23780,
          "end": 23783
        }
      },
      "arguments": {
        "span": {
          "start": 23784,
          "end": 23796
        },
        "value": "DOCKER_DEBUG"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23797,
          "end": 23800
        }
      },
      "arguments": {
        "span": {
          "start": 23801,
          "end": 23822
        },
        "value": "DOCKER_GITCOMMIT=HEAD"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23823,
          "end": 23826
        }
      },
      "arguments": {
        "span": {
          "start": 23827,
          "end": 23841
        },
        "value": "DOCKER_LDFLAGS"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23842,
          "end": 23845
        }
      },
      "arguments": {
        "span": {
          "start": 23846,
          "end": 23859
        },
        "value": "DOCKER_STATIC"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23860,
          "end": 23863
        }
      },
      "arguments": {
        "span": {
          "start": 23864,
          "end": 23871
        },
        "value": "VERSION"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23872,
          "end": 23875
        }
      },
      "arguments": {
        "span": {
          "start": 23876,
          "end": 23884
        },
        "value": "PLATFORM"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23885,
          "end": 23888
        }
      },
      "arguments": {
        "span": {
          "start": 23889,
          "end": 23896
        },
        "value": "PRODUCT"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23897,
          "end": 23900
        }
      },
      "arguments": {
        "span": {
          "start": 23901,
          "end": 23924
        },
        "value": "DEFAULT_PRODUCT_LICENSE"
      }
    },
    {
      "kind": "ARG",
      "arg": {
        "span": {
          "start": 23925,
          "end": 23928
        }
      },
      "arguments": {
        "span": {
          "start": 23929,
          "end": 23942
        },
        "value": "PACKAGER_NAME"
      }
    },
    {
      "kind": "ENV",
      "env": {
        "span": {
          "start": 24057,
          "end": 24060
        }
      },
      "arguments": {
        "span": {
          "start": 24061,
          "end": 24072
        },
        "value": "PREFIX=/tmp"
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 24073,
          "end": 24076
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 24082,
            "end": 24082
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 24083,
            "end": 24275
          },
          "expand": true,
          "value": "  # in bullseye arm64 target does not link with lld so configure it to use ld instead\n  if [ \"$(xx-info arch)\" = \"arm64\" ]; then\n    XX_CC_PREFER_LINKER=ld xx-clang --setup-target-triple\n  fi\n"
        }
      ]
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 24279,
          "end": 24282
        }
      },
      "options": [
        {
          "flag_start": 24283,
          "name": {
            "span": {
              "start": 24285,
              "end": 24290
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 24291,
              "end": 24312
            },
            "value": "type=bind,target=.,rw"
          }
        },
        {
          "flag_start": 24319,
          "name": {
            "span": {
              "start": 24321,
              "end": 24326
            },
            "value": "mount"
          },
          "value": {
            "span": {
              "start": 24327,
              "end": 24396
            },
            "value": "type=cache,target=/root/.cache/go-build,id=moby-build-$TARGETPLATFORM"
          }
        }
      ],
      "arguments": {
        "shell": {
          "span": {
            "start": 24402,
            "end": 24402
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 24403,
            "end": 24909
          },
          "expand": true,
          "value": "  set -e\n  target=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"binary\" || echo \"dynbinary\")\n  xx-go --wrap\n  PKG_CONFIG=$(xx-go env PKG_CONFIG) ./hack/make.sh $target\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /tmp/bundles/${target}-daemon/dockerd$([ \"$(xx-info os)\" = \"windows\" ] && echo \".exe\")\n  [ \"$(xx-info os)\" != \"linux\" ] || xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /tmp/bundles/${target}-daemon/docker-proxy\n  mkdir /build\n  mv /tmp/bundles/${target}-daemon/* /build/\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 25039,
          "end": 25043
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 25044,
          "end": 25051
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 25052,
            "end": 25054
          }
        },
        {
          "span": {
            "start": 25055,
            "end": 25061
          },
          "value": "binary"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25062,
          "end": 25066
        }
      },
      "options": [
        {
          "flag_start": 25067,
          "name": {
            "span": {
              "start": 25069,
              "end": 25073
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25074,
              "end": 25079
            },
            "value": "build"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25080,
              "end": 25087
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25088,
          "end": 25089
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 25127,
          "end": 25131
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 25132,
          "end": 25139
        },
        "value": "scratch"
      },
      "as_": [
        {
          "span": {
            "start": 25140,
            "end": 25142
          }
        },
        {
          "span": {
            "start": 25143,
            "end": 25146
          },
          "value": "all"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25147,
          "end": 25151
        }
      },
      "options": [
        {
          "flag_start": 25152,
          "name": {
            "span": {
              "start": 25154,
              "end": 25158
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25159,
          "name": {
            "span": {
              "start": 25161,
              "end": 25165
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25166,
              "end": 25170
            },
            "value": "tini"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25180,
              "end": 25187
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25188,
          "end": 25189
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25190,
          "end": 25194
        }
      },
      "options": [
        {
          "flag_start": 25195,
          "name": {
            "span": {
              "start": 25197,
              "end": 25201
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25202,
          "name": {
            "span": {
              "start": 25204,
              "end": 25208
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25209,
              "end": 25213
            },
            "value": "runc"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25223,
              "end": 25230
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25231,
          "end": 25232
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25233,
          "end": 25237
        }
      },
      "options": [
        {
          "flag_start": 25238,
          "name": {
            "span": {
              "start": 25240,
              "end": 25244
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25245,
          "name": {
            "span": {
              "start": 25247,
              "end": 25251
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25252,
              "end": 25262
            },
            "value": "containerd"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25266,
              "end": 25273
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25274,
          "end": 25275
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25276,
          "end": 25280
        }
      },
      "options": [
        {
          "flag_start": 25281,
          "name": {
            "span": {
              "start": 25283,
              "end": 25287
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25288,
          "name": {
            "span": {
              "start": 25290,
              "end": 25294
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25295,
              "end": 25306
            },
            "value": "rootlesskit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25309,
              "end": 25316
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25317,
          "end": 25318
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25319,
          "end": 25323
        }
      },
      "options": [
        {
          "flag_start": 25324,
          "name": {
            "span": {
              "start": 25326,
              "end": 25330
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25331,
          "name": {
            "span": {
              "start": 25333,
              "end": 25337
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25338,
              "end": 25351
            },
            "value": "containerutil"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25352,
              "end": 25359
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25360,
          "end": 25361
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25362,
          "end": 25366
        }
      },
      "options": [
        {
          "flag_start": 25367,
          "name": {
            "span": {
              "start": 25369,
              "end": 25373
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25374,
          "name": {
            "span": {
              "start": 25376,
              "end": 25380
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25381,
              "end": 25387
            },
            "value": "vpnkit"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25395,
              "end": 25396
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25403,
          "end": 25404
        },
        "value": "/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25405,
          "end": 25409
        }
      },
      "options": [
        {
          "flag_start": 25410,
          "name": {
            "span": {
              "start": 25412,
              "end": 25416
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25417,
          "name": {
            "span": {
              "start": 25419,
              "end": 25423
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25424,
              "end": 25429
            },
            "value": "build"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25438,
              "end": 25444
            },
            "value": "/build"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25446,
          "end": 25447
        },
        "value": "/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 25512,
          "end": 25516
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 25517,
          "end": 25521
        },
        "value": "base"
      },
      "as_": [
        {
          "span": {
            "start": 25522,
            "end": 25524
          }
        },
        {
          "span": {
            "start": 25525,
            "end": 25534
          },
          "value": "smoketest"
        }
      ]
    },
    {
      "kind": "WORKDIR",
      "workdir": {
        "span": {
          "start": 25535,
          "end": 25542
        }
      },
      "arguments": {
        "span": {
          "start": 25543,
          "end": 25557
        },
        "value": "/usr/local/bin"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25558,
          "end": 25562
        }
      },
      "options": [
        {
          "flag_start": 25563,
          "name": {
            "span": {
              "start": 25565,
              "end": 25569
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25570,
              "end": 25575
            },
            "value": "build"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25576,
              "end": 25582
            },
            "value": "/build"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25583,
          "end": 25584
        },
        "value": "."
      }
    },
    {
      "kind": "RUN",
      "run": {
        "span": {
          "start": 25585,
          "end": 25588
        }
      },
      "options": [],
      "arguments": {
        "shell": {
          "span": {
            "start": 25594,
            "end": 25594
          },
          "value": ""
        }
      },
      "here_docs": [
        {
          "span": {
            "start": 25595,
            "end": 25685
          },
          "expand": true,
          "value": "  set -ex\n  file dockerd\n  dockerd --version\n  file docker-proxy\n  docker-proxy --version\n"
        }
      ]
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 25756,
          "end": 25760
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 25761,
          "end": 25769
        },
        "value": "dev-base"
      },
      "as_": [
        {
          "span": {
            "start": 25770,
            "end": 25772
          }
        },
        {
          "span": {
            "start": 25773,
            "end": 25785
          },
          "value": "devcontainer"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25786,
          "end": 25790
        }
      },
      "options": [
        {
          "flag_start": 25791,
          "name": {
            "span": {
              "start": 25793,
              "end": 25797
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25798,
              "end": 25799
            },
            "value": "."
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25800,
          "end": 25801
        },
        "value": "."
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 25802,
          "end": 25806
        }
      },
      "options": [
        {
          "flag_start": 25807,
          "name": {
            "span": {
              "start": 25809,
              "end": 25813
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 25814,
          "name": {
            "span": {
              "start": 25816,
              "end": 25820
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 25821,
              "end": 25826
            },
            "value": "gopls"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 25835,
              "end": 25842
            },
            "value": "/build/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 25843,
          "end": 25858
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 26038,
          "end": 26042
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 26043,
          "end": 26054
        },
        "value": "docker:dind"
      },
      "as_": [
        {
          "span": {
            "start": 26055,
            "end": 26057
          }
        },
        {
          "span": {
            "start": 26058,
            "end": 26062
          },
          "value": "dind"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26063,
          "end": 26067
        }
      },
      "options": [
        {
          "flag_start": 26068,
          "name": {
            "span": {
              "start": 26070,
              "end": 26074
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26075,
          "name": {
            "span": {
              "start": 26077,
              "end": 26081
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26082,
              "end": 26091
            },
            "value": "dockercli"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26092,
              "end": 26105
            },
            "value": "/build/docker"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26106,
          "end": 26121
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26122,
          "end": 26126
        }
      },
      "options": [
        {
          "flag_start": 26127,
          "name": {
            "span": {
              "start": 26129,
              "end": 26133
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26134,
          "name": {
            "span": {
              "start": 26136,
              "end": 26140
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26141,
              "end": 26147
            },
            "value": "buildx"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26151,
              "end": 26158
            },
            "value": "/buildx"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26159,
          "end": 26210
        },
        "value": "/usr/local/libexec/docker/cli-plugins/docker-buildx"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26211,
          "end": 26215
        }
      },
      "options": [
        {
          "flag_start": 26216,
          "name": {
            "span": {
              "start": 26218,
              "end": 26222
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26223,
          "name": {
            "span": {
              "start": 26225,
              "end": 26229
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26230,
              "end": 26237
            },
            "value": "compose"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26240,
              "end": 26255
            },
            "value": "/docker-compose"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26256,
          "end": 26308
        },
        "value": "/usr/local/libexec/docker/cli-plugins/docker-compose"
      }
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26309,
          "end": 26313
        }
      },
      "options": [
        {
          "flag_start": 26314,
          "name": {
            "span": {
              "start": 26316,
              "end": 26320
            },
            "value": "link"
          },
          "value": null
        },
        {
          "flag_start": 26321,
          "name": {
            "span": {
              "start": 26323,
              "end": 26327
            },
            "value": "from"
          },
          "value": {
            "span": {
              "start": 26328,
              "end": 26331
            },
            "value": "all"
          }
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26338,
              "end": 26339
            },
            "value": "/"
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26340,
          "end": 26355
        },
        "value": "/usr/local/bin/"
      }
    },
    {
      "kind": "FROM",
      "from": {
        "span": {
          "start": 26409,
          "end": 26413
        }
      },
      "options": [],
      "image": {
        "span": {
          "start": 26414,
          "end": 26422
        },
        "value": "dev-base"
      },
      "as_": [
        {
          "span": {
            "start": 26423,
            "end": 26425
          }
        },
        {
          "span": {
            "start": 26426,
            "end": 26429
          },
          "value": "dev"
        }
      ]
    },
    {
      "kind": "COPY",
      "copy": {
        "span": {
          "start": 26430,
          "end": 26434
        }
      },
      "options": [
        {
          "flag_start": 26435,
          "name": {
            "span": {
              "start": 26437,
              "end": 26441
            },
            "value": "link"
          },
          "value": null
        }
      ],
      "src": [
        {
          "path": {
            "span": {
              "start": 26442,
              "end": 26443
            },
            "value": "."
          }
        }
      ],
      "dest": {
        "span": {
          "start": 26444,
          "end": 26445
        },
        "value": "."
      }
    }
  ]
}